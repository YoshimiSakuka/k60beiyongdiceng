###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        27/Jul/2016  11:28:34
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_LED.C
#    Command line =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_LED.C -D
#        DEBUG -D ARM_MATH_CM4 -D MK60DZ10 -lCN
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -lB
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -o
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR for
#        ARM\arm\INC\c\DLib_Config_Full.h" -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\IAR\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\kinetis\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\CMSIS\Inc\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\FatFs\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\USB\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\MPU6050\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\IMU\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\Driver\
#        -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\VCAN_LED.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\VCAN_LED.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_LED.C
      1           /*!
      2            *     COPYRIGHT NOTICE
      3            *     Copyright (c) 2014,山外科技
      4            *     All rights reserved.
      5            *     技术讨论：山外论坛 http://www.vcan123.com
      6            *
      7            *     除注明出处外，以下所有内容版权均属山外科技所有，未经允许，不得用于商业用途，
      8            *     修改内容时必须保留山外科技的版权声明。
      9            *
     10            * @file       VCAN_LED.c
     11            * @brief      led驱动函数实现
     12            * @author     山外科技
     13            * @version    v5.2
     14            * @date       2014-10-4
     15            */
     16          
     17          /*
     18           * 包含头文件
     19           */
     20          #include "common.h"
     21          #include "MK60_port.h"
     22          #include "MK60_gpio.h"
     23          #include "VCAN_LED.H"
     24          
     25          
     26          /*
     27           * 定义LED 编号对应的管脚
     28           */

   \                                 In section .data, align 4
     29          PTXn_e LED_PTxn[LED_MAX] = {PTE6,PTE7,PTE8,PTE9,PTE10};
   \                     LED_PTxn:
   \   00000000   0x86 0x87          DC8 134, 135, 136, 137, 138, 0, 0, 0
   \              0x88 0x89    
   \              0x8A 0x00    
   \              0x00 0x00    
     30          
     31          
     32          /*!
     33           *  @brief      初始化LED端口
     34           *  @param      LED_e    LED编号
     35           *  @since      v5.0
     36           *  Sample usage:       led_init (LED0);    //初始化 LED0
     37           */

   \                                 In section .text, align 2, keep-with-next
     38          void    led_init(LED_e ledn)
     39          {
   \                     led_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     40              if(ledn < LED_MAX)
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C05             CMP      R4,#+5
   \   00000008   0xDA07             BGE.N    ??led_init_0
     41              {
     42                  gpio_init(LED_PTxn[ledn],GPO,LED_OFF);
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x....             LDR.N    R0,??DataTable2
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x5C20             LDRB     R0,[R4, R0]
   \   00000014   0x.... 0x....      BL       gpio_init
   \   00000018   0xE00E             B.N      ??led_init_1
     43              }
     44              else
     45              {
     46                  ledn = LED_MAX;
   \                     ??led_init_0: (+1)
   \   0000001A   0x2005             MOVS     R0,#+5
   \   0000001C   0x0004             MOVS     R4,R0
     47                  while(ledn--)
   \                     ??led_init_2: (+1)
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x1E44             SUBS     R4,R0,#+1
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD007             BEQ.N    ??led_init_1
     48                  {
     49                      gpio_init(LED_PTxn[ledn],GPO,LED_OFF);
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x....             LDR.N    R0,??DataTable2
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0x5C20             LDRB     R0,[R4, R0]
   \   00000032   0x.... 0x....      BL       gpio_init
   \   00000036   0xE7F2             B.N      ??led_init_2
     50                  }
     51          
     52              }
     53          }
   \                     ??led_init_1: (+1)
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
     54          
     55          
     56          
     57          /*!
     58           *  @brief      设置LED灯亮灭
     59           *  @param      LED_e           LED编号（LED0、LED1、LED2、LED3）
     60           *  @param      LED_status      LED亮灭状态（LED_ON、LED_OFF）
     61           *  @since      v5.2
     62           *  Sample usage:       led (LED0,LED_ON);    //点亮 LED0
     63           */

   \                                 In section .text, align 2, keep-with-next
     64          void    led(LED_e ledn,LED_status status)
     65          {
   \                     led: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     66              if(ledn < LED_MAX)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C05             CMP      R4,#+5
   \   0000000A   0xDA07             BGE.N    ??led_0
     67              {
     68                  gpio_set(LED_PTxn[ledn],status);
   \   0000000C   0x0029             MOVS     R1,R5
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x....             LDR.N    R0,??DataTable2
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x5C20             LDRB     R0,[R4, R0]
   \   00000016   0x.... 0x....      BL       gpio_set
   \   0000001A   0xE00E             B.N      ??led_1
     69              }
     70              else
     71              {
     72                  ledn = LED_MAX;
   \                     ??led_0: (+1)
   \   0000001C   0x2005             MOVS     R0,#+5
   \   0000001E   0x0004             MOVS     R4,R0
     73                  while(ledn--)
   \                     ??led_2: (+1)
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x1E44             SUBS     R4,R0,#+1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD007             BEQ.N    ??led_1
     74                  {
     75                      gpio_set(LED_PTxn[ledn],status);
   \   0000002A   0x0029             MOVS     R1,R5
   \   0000002C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002E   0x....             LDR.N    R0,??DataTable2
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x5C20             LDRB     R0,[R4, R0]
   \   00000034   0x.... 0x....      BL       gpio_set
   \   00000038   0xE7F2             B.N      ??led_2
     76                  }
     77              }
     78          }
   \                     ??led_1: (+1)
   \   0000003A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     79          
     80          /*!
     81           *  @brief      设置LED灯亮灭反转
     82           *  @param      LED_e           LED编号（LED0、LED1、LED2、LED3）
     83           *  @since      v5.2
     84           *  Sample usage:       led_turn (LED0);    // LED0灯亮灭反转
     85           */

   \                                 In section .text, align 2, keep-with-next
     86          void led_turn(LED_e ledn)
     87          {
   \                     led_turn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     88              if(ledn < LED_MAX)
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C05             CMP      R4,#+5
   \   00000008   0xDA05             BGE.N    ??led_turn_0
     89              {
     90                  gpio_turn(LED_PTxn[ledn]);
   \   0000000A   0x....             LDR.N    R0,??DataTable2
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x5C20             LDRB     R0,[R4, R0]
   \   00000010   0x.... 0x....      BL       gpio_turn
   \   00000014   0xE00C             B.N      ??led_turn_1
     91              }
     92              else
     93              {
     94                  ledn = LED_MAX;
   \                     ??led_turn_0: (+1)
   \   00000016   0x2005             MOVS     R0,#+5
   \   00000018   0x0004             MOVS     R4,R0
     95                  while(ledn--)
   \                     ??led_turn_2: (+1)
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0x1E44             SUBS     R4,R0,#+1
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD005             BEQ.N    ??led_turn_1
     96                  {
     97                      gpio_turn(LED_PTxn[ledn]);
   \   00000024   0x....             LDR.N    R0,??DataTable2
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x5C20             LDRB     R0,[R4, R0]
   \   0000002A   0x.... 0x....      BL       gpio_turn
   \   0000002E   0xE7F4             B.N      ??led_turn_2
     98                  }
     99              }
    100          }
   \                     ??led_turn_1: (+1)
   \   00000030   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     LED_PTxn

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   led
        16   -> gpio_set
       8   led_init
         8   -> gpio_init
       8   led_turn
         8   -> gpio_turn


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       8  LED_PTxn
      60  led
      58  led_init
      50  led_turn

 
   8 bytes in section .data
 172 bytes in section .text
 
 172 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
