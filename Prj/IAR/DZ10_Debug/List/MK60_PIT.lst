###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        27/Jul/2016  11:28:29
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Chip\src\MK60_PIT.c
#    Command line =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Chip\src\MK60_PIT.c -D DEBUG
#        -D ARM_MATH_CM4 -D MK60DZ10 -lCN
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -lB
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -o
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR for
#        ARM\arm\INC\c\DLib_Config_Full.h" -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\IAR\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\kinetis\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\CMSIS\Inc\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\FatFs\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\USB\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\MPU6050\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\IMU\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\Driver\
#        -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\MK60_PIT.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\MK60_PIT.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层\Chip\src\MK60_PIT.c
      1          /*!
      2           *     COPYRIGHT NOTICE
      3           *     Copyright (c) 2013,山外科技
      4           *     All rights reserved.
      5           *     技术讨论：山外论坛 http://www.vcan123.com
      6           *
      7           *     除注明出处外，以下所有内容版权均属山外科技所有，未经允许，不得用于商业用途，
      8           *     修改内容时必须保留山外科技的版权声明。
      9           *
     10           * @file       MK60_pit.c
     11           * @brief      pit定时器函数库
     12           * @author     山外科技
     13           * @version    v5.0
     14           * @date       2013-08-23
     15           */
     16          #include "common.h"
     17          #include  "MK60_PIT.h"     //周期中断计时器
     18          
     19          /*!
     20           *  @brief      PITn定时中断
     21           *  @param      PITn        模块号（PIT0~PIT3）
     22           *  @param      cnt         定时中断时间(单位为bus时钟周期)
     23           *  @since      v5.0
     24           *  Sample usage:
     25                          pit_init(PIT0, 1000);                          //定时 1000 个bus时钟 后中断
     26                          set_vector_handler(PIT0_VECTORn,pit_hander);   // 设置中断服务函数到中断向量表里
     27                          enable_irq(PIT0_IRQn);                         // 使能PIT中断
     28           */

   \                                 In section .text, align 2, keep-with-next
     29          void pit_init(PITn_e pitn, uint32 cnt)
     30          {
   \                     pit_init: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     31              //PIT 用的是 Bus Clock 总线频率
     32              //溢出计数 = 总线频率 * 时间
     33          
     34              ASSERT( cnt > 0 );                          //用断言检测 时间必须不能为 0
   \   00000006   0x2D00             CMP      R5,#+0
   \   00000008   0xD103             BNE.N    ??pit_init_0
   \   0000000A   0x2122             MOVS     R1,#+34
   \   0000000C   0x....             LDR.N    R0,??DataTable4
   \   0000000E   0x.... 0x....      BL       assert_failed
     35          
     36              SIM_SCGC6       |= SIM_SCGC6_PIT_MASK;          //使能PIT时钟
   \                     ??pit_init_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4004803c
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000001A   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4004803c
   \   0000001C   0x6008             STR      R0,[R1, #+0]
     37          
     38              PIT_MCR         = (0
     39                                 //| PIT_MCR_MDIS_MASK       //禁用PIT定时器时钟选择（0表示使能PIT，1表示禁止PIT）
     40                                 //| PIT_MCR_FRZ_MASK        //调试模式下停止运行（0表示继续运行，1表示停止运行）
     41                                );
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40037000
   \   00000022   0x6008             STR      R0,[R1, #+0]
     42          
     43              PIT_LDVAL(pitn)  = cnt - 1 ;                    //设置溢出中断时间
   \   00000024   0x1E68             SUBS     R0,R5,#+1
   \   00000026   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x0122             LSLS     R2,R4,#+4
   \   0000002C   0x5050             STR      R0,[R2, R1]
     44          
     45              PIT_Flag_Clear(pitn);                           //清中断标志位
   \   0000002E   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   00000036   0x68C0             LDR      R0,[R0, #+12]
   \   00000038   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000003C   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   00000044   0x60C8             STR      R0,[R1, #+12]
     46          
     47              PIT_TCTRL(pitn) &= ~ PIT_TCTRL_TEN_MASK;        //禁止PITn定时器（用于清空计数值）
   \   00000046   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   0000004E   0x6880             LDR      R0,[R0, #+8]
   \   00000050   0x0840             LSRS     R0,R0,#+1
   \   00000052   0x0040             LSLS     R0,R0,#+1
   \   00000054   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   0000005C   0x6088             STR      R0,[R1, #+8]
     48              PIT_TCTRL(pitn)  = ( 0
     49                                   | PIT_TCTRL_TEN_MASK        //使能 PITn定时器
     50                                   | PIT_TCTRL_TIE_MASK        //开PITn中断
     51                                 );
   \   0000005E   0x2003             MOVS     R0,#+3
   \   00000060   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   00000068   0x6088             STR      R0,[R1, #+8]
     52          
     53              //enable_irq((int)pitn + PIT0_IRQn);            //开中断
     54          }
   \   0000006A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     55          
     56          /*!
     57           *  @brief      PITn延时
     58           *  @param      PITn        模块号（PIT0~PIT3）
     59           *  @param      cnt         延时时间(单位为bus时钟周期)
     60           *  @since      v5.0
     61           *  Sample usage:
     62                              pit_delay(PIT0, 1000);                         //延时 1000 个bus时钟
     63           */

   \                                 In section .text, align 2, keep-with-next
     64          void pit_delay(PITn_e pitn, uint32 cnt)
     65          {
   \                     pit_delay: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     66              //PIT 用的是 Bus Clock 总线频率
     67              //溢出计数 = 总线频率 * 时间
     68          
     69              ASSERT( cnt > 0 );              //用断言检测 时间必须不能为 0
   \   00000006   0x2D00             CMP      R5,#+0
   \   00000008   0xD103             BNE.N    ??pit_delay_0
   \   0000000A   0x2145             MOVS     R1,#+69
   \   0000000C   0x....             LDR.N    R0,??DataTable4
   \   0000000E   0x.... 0x....      BL       assert_failed
     70          
     71              SIM_SCGC6       |= SIM_SCGC6_PIT_MASK;                          //使能PIT时钟
   \                     ??pit_delay_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4004803c
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000001A   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4004803c
   \   0000001C   0x6008             STR      R0,[R1, #+0]
     72          
     73              PIT_MCR         &= ~(PIT_MCR_MDIS_MASK | PIT_MCR_FRZ_MASK );    //使能PIT定时器时钟 ，调试模式下继续运行
   \   0000001E   0x....             LDR.N    R0,??DataTable4_2  ;; 0x40037000
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x0880             LSRS     R0,R0,#+2
   \   00000024   0x0080             LSLS     R0,R0,#+2
   \   00000026   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40037000
   \   00000028   0x6008             STR      R0,[R1, #+0]
     74          
     75              PIT_TCTRL(pitn) &= ~( PIT_TCTRL_TEN_MASK );                     //禁用PIT ，以便设置加载值生效
   \   0000002A   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   00000032   0x6880             LDR      R0,[R0, #+8]
   \   00000034   0x0840             LSRS     R0,R0,#+1
   \   00000036   0x0040             LSLS     R0,R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   00000040   0x6088             STR      R0,[R1, #+8]
     76          
     77              PIT_LDVAL(pitn)  = cnt - 1;                                     //设置溢出中断时间
   \   00000042   0x1E68             SUBS     R0,R5,#+1
   \   00000044   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0x0122             LSLS     R2,R4,#+4
   \   0000004A   0x5050             STR      R0,[R2, R1]
     78          
     79              PIT_Flag_Clear(pitn);                                           //清中断标志位
   \   0000004C   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   00000054   0x68C0             LDR      R0,[R0, #+12]
   \   00000056   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000005A   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   00000062   0x60C8             STR      R0,[R1, #+12]
     80          
     81              PIT_TCTRL(pitn) &= ~ PIT_TCTRL_TEN_MASK;                        //禁止PITn定时器（用于清空计数值）
   \   00000064   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   0000006C   0x6880             LDR      R0,[R0, #+8]
   \   0000006E   0x0840             LSRS     R0,R0,#+1
   \   00000070   0x0040             LSLS     R0,R0,#+1
   \   00000072   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000074   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000076   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   0000007A   0x6088             STR      R0,[R1, #+8]
     82              PIT_TCTRL(pitn)  = ( 0
     83                                   | PIT_TCTRL_TEN_MASK                        //使能 PITn定时器
     84                                   //| PIT_TCTRL_TIE_MASK                      //开PITn中断
     85                                 );
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   00000086   0x6088             STR      R0,[R1, #+8]
     86          
     87              while( !(PIT_TFLG(pitn)& PIT_TFLG_TIF_MASK));
   \                     ??pit_delay_1: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   00000090   0x68C0             LDR      R0,[R0, #+12]
   \   00000092   0x07C0             LSLS     R0,R0,#+31
   \   00000094   0xD5F8             BPL.N    ??pit_delay_1
     88          
     89              PIT_Flag_Clear(pitn);                                           //清中断标志位
   \   00000096   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   00000098   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009A   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   0000009E   0x68C0             LDR      R0,[R0, #+12]
   \   000000A0   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000A4   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   000000A6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A8   0xEB11 0x1104      ADDS     R1,R1,R4, LSL #+4
   \   000000AC   0x60C8             STR      R0,[R1, #+12]
     90          }
   \   000000AE   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     91          
     92          /*!
     93           *  @brief      PITn计时开始
     94           *  @param      PITn        模块号（PIT0~PIT3）
     95           *  @since      v5.0
     96           *  Sample usage:
     97                              pit_time_start(PIT0);                          //PIT0计时开始
     98           */

   \                                 In section .text, align 2, keep-with-next
     99          void pit_time_start(PITn_e pitn)
    100          {
    101              //PIT 用的是 Bus Clock 总线频率
    102              //溢出计数 = 总线频率 * 时间
    103          
    104              SIM_SCGC6       |= SIM_SCGC6_PIT_MASK;                          //使能PIT时钟
   \                     pit_time_start: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4004803c
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0xF451 0x0100      ORRS     R1,R1,#0x800000
   \   00000008   0x....             LDR.N    R2,??DataTable4_1  ;; 0x4004803c
   \   0000000A   0x6011             STR      R1,[R2, #+0]
    105          
    106              PIT_MCR         &= ~(PIT_MCR_MDIS_MASK | PIT_MCR_FRZ_MASK );    //使能PIT定时器时钟 ，调试模式下继续运行
   \   0000000C   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40037000
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x0889             LSRS     R1,R1,#+2
   \   00000012   0x0089             LSLS     R1,R1,#+2
   \   00000014   0x....             LDR.N    R2,??DataTable4_2  ;; 0x40037000
   \   00000016   0x6011             STR      R1,[R2, #+0]
    107          
    108              PIT_TCTRL(pitn) &= ~( PIT_TCTRL_TEN_MASK );                     //禁用PIT ，以便设置加载值生效
   \   00000018   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   00000020   0x6889             LDR      R1,[R1, #+8]
   \   00000022   0x0849             LSRS     R1,R1,#+1
   \   00000024   0x0049             LSLS     R1,R1,#+1
   \   00000026   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   0000002E   0x6091             STR      R1,[R2, #+8]
    109          
    110              PIT_LDVAL(pitn)  = ~0;                                          //设置溢出中断时间
   \   00000030   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000034   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x0103             LSLS     R3,R0,#+4
   \   0000003A   0x5099             STR      R1,[R3, R2]
    111          
    112              PIT_Flag_Clear(pitn);                                           //清中断标志位
   \   0000003C   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   00000044   0x68C9             LDR      R1,[R1, #+12]
   \   00000046   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   0000004A   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   00000052   0x60D1             STR      R1,[R2, #+12]
    113          
    114              PIT_TCTRL(pitn) &= ~ PIT_TCTRL_TEN_MASK;                        //禁止PITn定时器（用于清空计数值）
   \   00000054   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   0000005C   0x6889             LDR      R1,[R1, #+8]
   \   0000005E   0x0849             LSRS     R1,R1,#+1
   \   00000060   0x0049             LSLS     R1,R1,#+1
   \   00000062   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   0000006A   0x6091             STR      R1,[R2, #+8]
    115              PIT_TCTRL(pitn)  = ( 0
    116                                   | PIT_TCTRL_TEN_MASK                        //使能 PITn定时器
    117                                   //| PIT_TCTRL_TIE_MASK                      //开PITn中断
    118                                 );
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   00000076   0x6091             STR      R1,[R2, #+8]
    119          }
   \   00000078   0x4770             BX       LR               ;; return
    120          
    121          /*!
    122           *  @brief      获取 PITn计时时间(超时时会关闭 定时器)
    123           *  @param      PITn        模块号（PIT0~PIT3）
    124           *  @since      v5.0
    125           *  Sample usage:
    126                                  uint32 time = pit_time_get(PIT0);                         //获取 PITn计时时间
    127                                  if(time != ~0)       //没超时
    128                                  {
    129                                      printf("\n计时时间为：%d us",time*1000/bus_clk_khz);
    130                                  }
    131           */

   \                                 In section .text, align 2, keep-with-next
    132          uint32 pit_time_get(PITn_e pitn)
    133          {
   \                     pit_time_get: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    134              uint32 val;
    135          
    136              val = (~0) - PIT_CVAL(pitn);
   \   00000002   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000006   0x....             LDR.N    R3,??DataTable4_3  ;; 0x40037100
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0xEB13 0x1301      ADDS     R3,R3,R1, LSL #+4
   \   0000000E   0x685B             LDR      R3,[R3, #+4]
   \   00000010   0x1AC0             SUBS     R0,R0,R3
   \   00000012   0x0002             MOVS     R2,R0
    137          
    138              if(PIT_TFLG(pitn)& PIT_TFLG_TIF_MASK)                           //判断是否时间超时
   \   00000014   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0xEB10 0x1001      ADDS     R0,R0,R1, LSL #+4
   \   0000001C   0x68C0             LDR      R0,[R0, #+12]
   \   0000001E   0x07C0             LSLS     R0,R0,#+31
   \   00000020   0xD51A             BPL.N    ??pit_time_get_0
    139              {
    140                  PIT_Flag_Clear(pitn);                                       //清中断标志位
   \   00000022   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0xEB10 0x1001      ADDS     R0,R0,R1, LSL #+4
   \   0000002A   0x68C0             LDR      R0,[R0, #+12]
   \   0000002C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000030   0x....             LDR.N    R3,??DataTable4_3  ;; 0x40037100
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0xEB13 0x1301      ADDS     R3,R3,R1, LSL #+4
   \   00000038   0x60D8             STR      R0,[R3, #+12]
    141                  PIT_TCTRL(pitn) &= ~ PIT_TCTRL_TEN_MASK;                    //禁止PITn定时器（用于清空计数值）
   \   0000003A   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40037100
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0xEB10 0x1001      ADDS     R0,R0,R1, LSL #+4
   \   00000042   0x6880             LDR      R0,[R0, #+8]
   \   00000044   0x0840             LSRS     R0,R0,#+1
   \   00000046   0x0040             LSLS     R0,R0,#+1
   \   00000048   0x....             LDR.N    R3,??DataTable4_3  ;; 0x40037100
   \   0000004A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004C   0xEB13 0x1301      ADDS     R3,R3,R1, LSL #+4
   \   00000050   0x6098             STR      R0,[R3, #+8]
    142                  return ~0;
   \   00000052   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000056   0xE004             B.N      ??pit_time_get_1
    143              }
    144          
    145              if(val == (~0))
   \                     ??pit_time_get_0: (+1)
   \   00000058   0xF112 0x0F01      CMN      R2,#+1
   \   0000005C   0xD100             BNE.N    ??pit_time_get_2
    146              {
    147                  val--;              //确保 不等于 ~0
   \   0000005E   0x1E52             SUBS     R2,R2,#+1
    148              }
    149              return val;
   \                     ??pit_time_get_2: (+1)
   \   00000060   0x0010             MOVS     R0,R2
   \                     ??pit_time_get_1: (+1)
   \   00000062   0x4770             BX       LR               ;; return
    150          }
    151          
    152          /*!
    153           *  @brief      关闭 pit
    154           *  @param      PITn        模块号（PIT0~PIT3）
    155           *  @since      v5.0
    156           *  Sample usage:
    157                                  pit_close(PIT0);                         //关闭PIT
    158           */

   \                                 In section .text, align 2, keep-with-next
    159          void pit_close(PITn_e pitn)
    160          {
    161              PIT_Flag_Clear(pitn);                                       //清中断标志位
   \                     pit_close: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   00000008   0x68C9             LDR      R1,[R1, #+12]
   \   0000000A   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   0000000E   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   00000016   0x60D1             STR      R1,[R2, #+12]
    162              PIT_TCTRL(pitn) &= ~ PIT_TCTRL_TEN_MASK;                    //禁止PITn定时器（用于清空计数值）
   \   00000018   0x....             LDR.N    R1,??DataTable4_3  ;; 0x40037100
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   00000020   0x6889             LDR      R1,[R1, #+8]
   \   00000022   0x0849             LSRS     R1,R1,#+1
   \   00000024   0x0049             LSLS     R1,R1,#+1
   \   00000026   0x....             LDR.N    R2,??DataTable4_3  ;; 0x40037100
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   0000002E   0x6091             STR      R1,[R2, #+8]
    163          }
   \   00000030   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x40037000         DC32     0x40037000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40037100         DC32     0x40037100

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x44 0x3A          DC8 44H, 3AH, 5CH, 53H, 74H, 75H, 64H, 79H
   \              0x5C 0x53    
   \              0x74 0x75    
   \              0x64 0x79    
   \   00000008   0x5C 0x32          DC8 5CH, 32H, 30H, 31H, 36H, 0B5H, 0E7H, 0D7H
   \              0x30 0x31    
   \              0x36 0xB5    
   \              0xE7 0xD7    
   \   00000010   0xD3 0xC9          DC8 0D3H, 0C9H, 0E8H, 0BCH, 0C6H, 0B4H, 0F3H, 0C8H
   \              0xE8 0xBC    
   \              0xC6 0xB4    
   \              0xF3 0xC8    
   \   00000018   0xFC 0x5C          DC8 0FCH, 5CH, 54H, 69H, 5CH, 0B5H, 0E7H, 0C8H
   \              0x54 0x69    
   \              0x5C 0xB5    
   \              0xE7 0xC8    
   \   00000020   0xFC 0xB1          DC8 0FCH, 0B1H, 0B8H, 0D3H, 0C3H, 0B5H, 0D7H, 0B2H
   \              0xB8 0xD3    
   \              0xC3 0xB5    
   \              0xD7 0xB2    
   \   00000028   0xE3 0x5C          DC8 0E3H, 5CH, 43H, 68H, 69H, 70H, 5CH, 73H
   \              0x43 0x68    
   \              0x69 0x70    
   \              0x5C 0x73    
   \   00000030   0x72 0x63          DC8 72H, 63H, 5CH, 4DH, 4BH, 36H, 30H, 5FH
   \              0x5C 0x4D    
   \              0x4B 0x36    
   \              0x30 0x5F    
   \   00000038   0x50 0x49          DC8 50H, 49H, 54H, 2EH, 63H, 0
   \              0x54 0x2E    
   \              0x63 0x00    
   \   0000003E   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   pit_close
      16   pit_delay
        16   -> assert_failed
      16   pit_init
        16   -> assert_failed
       0   pit_time_get
       0   pit_time_start


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
      64  ?_0
      50  pit_close
     176  pit_delay
     108  pit_init
     100  pit_time_get
     122  pit_time_start

 
  64 bytes in section .rodata
 572 bytes in section .text
 
 572 bytes of CODE  memory
  64 bytes of CONST memory

Errors: none
Warnings: none
