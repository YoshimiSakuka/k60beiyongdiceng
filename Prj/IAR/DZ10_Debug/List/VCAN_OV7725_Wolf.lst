###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        26/Jul/2016  23:31:17
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_OV7725_Wolf.c
#    Command line =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_OV7725_Wolf.c
#        -D DEBUG -D ARM_MATH_CM4 -D MK60DZ10 -lCN
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -lB
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -o
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR for
#        ARM\arm\INC\c\DLib_Config_Full.h" -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\IAR\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\kinetis\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\CMSIS\Inc\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\FatFs\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\USB\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\MPU6050\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\IMU\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\Driver\
#        -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\VCAN_OV7725_Wolf.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\VCAN_OV7725_Wolf.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_OV7725_Wolf.c
      1          /*!
      2           *     COPYRIGHT NOTICE
      3           *     Copyright (c) 2013,山外科技
      4           *     All rights reserved.
      5           *     技术讨论：山外论坛 http://www.vcan123.com
      6           *
      7           *     除注明出处外，以下所有内容版权均属山外科技所有，未经允许，不得用于商业用途，
      8           *     修改内容时必须保留山外科技的版权声明。
      9           *
     10           * @file       VCAN_OV7725_Wolf.c
     11           * @brief      狼眼ov7725驱动代码
     12           * @author     山外科技
     13           * @version    v5.0
     14           * @date       2013-09-07
     15           */
     16          
     17          #include "common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x....             LDR.N    R2,??DataTable7  ;; 0xe000e100
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x0943             LSRS     R3,R0,#+5
   \   0000000E   0xF842 0x1023      STR      R1,[R2, R3, LSL #+2]
   \   00000012   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_DisableIRQ(IRQn_Type)
   \                     NVIC_DisableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x....             LDR.N    R2,??DataTable7_1  ;; 0xe000e180
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x0943             LSRS     R3,R0,#+5
   \   0000000E   0xF842 0x1023      STR      R1,[R2, R3, LSL #+2]
   \   00000012   0x4770             BX       LR               ;; return
     18          #include "MK60_gpio.h"
     19          #include "MK60_port.h"
     20          #include "MK60_dma.h"
     21          #include "VCAN_camera.h"
     22          
     23          #define OV7725_WOLF_Delay_ms(time)  DELAY_MS(time)
     24          

   \                                 In section .bss, align 4
     25          uint8   *ov7725_wolf_img_buff;
   \                     ov7725_wolf_img_buff:
   \   00000000                      DS8 4
     26          

   \                                 In section .data, align 1
     27          volatile IMG_STATUS_e      ov7725_wolf_img_flag = IMG_FINISH;   //图像状态
   \                     ov7725_wolf_img_flag:
   \   00000000   0x01               DC8 1
     28          
     29          
     30          //内部函数声明
     31          static uint8 ov7725_wolf_reg_init(void);
     32          static void ov7725_wolf_port_init();
     33          
     34          
     35          /*!
     36           *  @brief      鹰眼ov7725初始化
     37           *  @since      v5.0
     38           */

   \                                 In section .text, align 2, keep-with-next
     39          uint8 ov7725_wolf_init(uint8 *imgaddr)
     40          {
   \                     ov7725_wolf_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     41              ov7725_wolf_img_buff = imgaddr;
   \   00000004   0x....             LDR.N    R0,??DataTable7_2
   \   00000006   0x6004             STR      R4,[R0, #+0]
     42              while(ov7725_wolf_reg_init() == 0);
   \                     ??ov7725_wolf_init_0: (+1)
   \   00000008   0x.... 0x....      BL       ov7725_wolf_reg_init
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD0FB             BEQ.N    ??ov7725_wolf_init_0
     43              ov7725_wolf_port_init();
   \   00000010   0x.... 0x....      BL       ov7725_wolf_port_init
     44              return 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     45          }
     46          
     47          /*!
     48           *  @brief      鹰眼ov7725管脚初始化（内部调用）
     49           *  @since      v5.0
     50           */

   \                                 In section .text, align 2, keep-with-next
     51          void ov7725_wolf_port_init()
     52          {
   \                     ov7725_wolf_port_init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     53              //DMA通道0初始化，PTA27触发源(默认上升沿)，源地址为PTB_B0_IN，目的地址为：IMG_BUFF，每次传输1Byte
     54              dma_portx2buff_init(CAMERA_DMA_CH, (void *)&PTB_B0_IN, (void *)ov7725_wolf_img_buff, PTA27, DMA_BYTE1, CAMERA_DMA_NUM, DADDR_KEEPON);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x9002             STR      R0,[SP, #+8]
   \   00000006   0xF44F 0x7016      MOV      R0,#+600
   \   0000000A   0x9001             STR      R0,[SP, #+4]
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0x231B             MOVS     R3,#+27
   \   00000012   0x....             LDR.N    R0,??DataTable7_2
   \   00000014   0x6802             LDR      R2,[R0, #+0]
   \   00000016   0x....             LDR.N    R1,??DataTable7_3  ;; 0x400ff050
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       dma_portx2buff_init
     55          
     56              DMA_DIS(CAMERA_DMA_CH);
   \   0000001E   0x....             LDR.N    R0,??DataTable7_4  ;; 0x4000800c
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x0840             LSRS     R0,R0,#+1
   \   00000024   0x0040             LSLS     R0,R0,#+1
   \   00000026   0x....             LDR.N    R1,??DataTable7_4  ;; 0x4000800c
   \   00000028   0x6008             STR      R0,[R1, #+0]
     57              disable_irq(PORTA_IRQn);                        //关闭PTA的中断
   \   0000002A   0x2057             MOVS     R0,#+87
   \   0000002C   0x.... 0x....      BL       NVIC_DisableIRQ
     58              DMA_IRQ_CLEAN(CAMERA_DMA_CH);                   //清除通道传输中断标志位
   \   00000030   0x....             LDR.N    R0,??DataTable7_5  ;; 0x40008024
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000038   0x....             LDR.N    R1,??DataTable7_5  ;; 0x40008024
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     59              DMA_IRQ_EN(CAMERA_DMA_CH);
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      BL       NVIC_EnableIRQ
     60          
     61              port_init(PTA27, ALT1 | DMA_FALLING | PULLUP );         //PCLK
   \   00000042   0x....             LDR.N    R1,??DataTable7_6  ;; 0x20103
   \   00000044   0x201B             MOVS     R0,#+27
   \   00000046   0x.... 0x....      BL       port_init
     62          
     63              port_init(PTA29, ALT1 | IRQ_RISING | PULLUP | PF);     //场中断，上拉，上降沿触发中断，带滤波
   \   0000004A   0x....             LDR.N    R1,??DataTable7_7  ;; 0x90113
   \   0000004C   0x201D             MOVS     R0,#+29
   \   0000004E   0x.... 0x....      BL       port_init
     64          
     65          }
   \   00000052   0xBD07             POP      {R0-R2,PC}       ;; return
     66          
     67          /*!
     68           *  @brief      鹰眼ov7725场中断服务函数
     69           *  @since      v5.0
     70           */

   \                                 In section .text, align 2, keep-with-next
     71          void ov7725_wolf_vsync(void)
     72          {
   \                     ov7725_wolf_vsync: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     73          
     74              //场中断需要判断是场结束还是场开始
     75              if(ov7725_wolf_img_flag == IMG_START)                   //需要开始采集图像
   \   00000002   0x....             LDR.N    R0,??DataTable7_8
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2804             CMP      R0,#+4
   \   00000008   0xD110             BNE.N    ??ov7725_wolf_vsync_0
     76              {
     77                  ov7725_wolf_img_flag = IMG_GATHER;                  //标记图像采集中
   \   0000000A   0x2003             MOVS     R0,#+3
   \   0000000C   0x....             LDR.N    R1,??DataTable7_8
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
     78                  disable_irq(PORTA_IRQn);
   \   00000010   0x2057             MOVS     R0,#+87
   \   00000012   0x.... 0x....      BL       NVIC_DisableIRQ
     79          
     80                  DMA_EN(CAMERA_DMA_CH);                  //使能通道CHn 硬件请求
   \   00000016   0x....             LDR.N    R0,??DataTable7_4  ;; 0x4000800c
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000001E   0x....             LDR.N    R1,??DataTable7_4  ;; 0x4000800c
   \   00000020   0x6008             STR      R0,[R1, #+0]
     81                  DMA_DADDR(CAMERA_DMA_CH) = (uint32)ov7725_wolf_img_buff;    //恢复地址
   \   00000022   0x....             LDR.N    R0,??DataTable7_2
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x....             LDR.N    R1,??DataTable7_9  ;; 0x40009010
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0xE005             B.N      ??ov7725_wolf_vsync_1
     82              }
     83              else                                        //图像采集错误
     84              {
     85                  disable_irq(PORTA_IRQn);                        //关闭PTA的中断
   \                     ??ov7725_wolf_vsync_0: (+1)
   \   0000002C   0x2057             MOVS     R0,#+87
   \   0000002E   0x.... 0x....      BL       NVIC_DisableIRQ
     86                  ov7725_wolf_img_flag = IMG_FAIL;                    //标记图像采集失败
   \   00000032   0x2002             MOVS     R0,#+2
   \   00000034   0x....             LDR.N    R1,??DataTable7_8
   \   00000036   0x7008             STRB     R0,[R1, #+0]
     87              }
     88          }
   \                     ??ov7725_wolf_vsync_1: (+1)
   \   00000038   0xBD01             POP      {R0,PC}          ;; return
     89          
     90          /*!
     91           *  @brief      鹰眼ov7725 DMA中断服务函数
     92           *  @since      v5.0
     93           */

   \                                 In section .text, align 2, keep-with-next
     94          void ov7725_wolf_dma()
     95          {
     96              ov7725_wolf_img_flag = IMG_FINISH ;
   \                     ov7725_wolf_dma: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x....             LDR.N    R1,??DataTable7_8
   \   00000004   0x7008             STRB     R0,[R1, #+0]
     97              DMA_IRQ_CLEAN(CAMERA_DMA_CH);           //清除通道传输中断标志位
   \   00000006   0x....             LDR.N    R0,??DataTable7_5  ;; 0x40008024
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000E   0x....             LDR.N    R1,??DataTable7_5  ;; 0x40008024
   \   00000010   0x6008             STR      R0,[R1, #+0]
     98          }
   \   00000012   0x4770             BX       LR               ;; return
     99          
    100          /*!
    101           *  @brief      鹰眼ov7725采集图像（采集到的数据存储在 初始化时配置的地址上）
    102           *  @since      v5.0
    103           */

   \                                 In section .text, align 2, keep-with-next
    104          void ov7725_wolf_get_img()
    105          {
   \                     ov7725_wolf_get_img: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    106              ov7725_wolf_img_flag = IMG_START;                    //开始采集图像
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x....             LDR.N    R1,??DataTable7_8
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    107              PORTA_ISFR = ~0;                                    //写1清中断标志位(必须的，不然回导致一开中断就马上触发中断)
   \   00000008   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000000C   0x....             LDR.N    R1,??DataTable7_10  ;; 0x400490a0
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    108              enable_irq(PORTA_IRQn);                             //允许PTA的中断
   \   00000010   0x2057             MOVS     R0,#+87
   \   00000012   0x.... 0x....      BL       NVIC_EnableIRQ
    109              while(ov7725_wolf_img_flag != IMG_FINISH)            //等待图像采集完毕
   \                     ??ov7725_wolf_get_img_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable7_8
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xD00E             BEQ.N    ??ov7725_wolf_get_img_1
    110              {
    111                  if(ov7725_wolf_img_flag == IMG_FAIL)             //假如图像采集错误，则重新开始采集
   \   0000001E   0x....             LDR.N    R0,??DataTable7_8
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xD1F7             BNE.N    ??ov7725_wolf_get_img_0
    112                  {
    113                      ov7725_wolf_img_flag = IMG_START;            //开始采集图像
   \   00000026   0x2004             MOVS     R0,#+4
   \   00000028   0x....             LDR.N    R1,??DataTable7_8
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
    114                      PORTA_ISFR = ~0;                            //写1清中断标志位(必须的，不然回导致一开中断就马上触发中断)
   \   0000002C   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000030   0x....             LDR.N    R1,??DataTable7_10  ;; 0x400490a0
   \   00000032   0x6008             STR      R0,[R1, #+0]
    115                      enable_irq(PORTA_IRQn);                     //允许PTA的中断
   \   00000034   0x2057             MOVS     R0,#+87
   \   00000036   0x.... 0x....      BL       NVIC_EnableIRQ
   \   0000003A   0xE7EC             B.N      ??ov7725_wolf_get_img_0
    116                  }
    117              }
    118          }
   \                     ??ov7725_wolf_get_img_1: (+1)
   \   0000003C   0xBD01             POP      {R0,PC}          ;; return
    119          
    120          
    121          /*OV7725初始化配置表*/

   \                                 In section .data, align 4
    122          reg_s ov7725_wolf_reg[] =
   \                     ov7725_wolf_reg:
   \   00000000   0x0D 0x81          DC8 13, 129, 17, 2, 9, 3, 12, 208, 18, 64, 23, 63, 24, 80, 25, 3, 26
   \              0x11 0x02    
   \              0x09 0x03    
   \              0x0C 0xD0    
   \              0x12 0x40    
   \              0x17 0x3F    
   \              0x18 0x50    
   \              0x19 0x03    
   \              0x1A         
   \   00000011   0x78 0x32          DC8 120, 50, 0, 160, 10, 99, 224, 172, 255, 101, 12, 102, 0, 103, 0, 41
   \              0x00 0xA0    
   \              0x0A 0x63    
   \              0xE0 0xAC    
   \              0xFF 0x65    
   \              0x0C 0x66    
   \              0x00 0x67    
   \              0x00 0x29    
   \   00000021   0x14 0x2C          DC8 20, 44, 30, 42, 0, 126, 12, 127, 22, 128, 42, 129, 78, 130, 97, 131
   \              0x1E 0x2A    
   \              0x00 0x7E    
   \              0x0C 0x7F    
   \              0x16 0x80    
   \              0x2A 0x81    
   \              0x4E 0x82    
   \              0x61 0x83    
   \   00000031   0x6F 0x84          DC8 111, 132, 123, 133, 134, 134, 142, 135, 151, 136, 164, 137, 175
   \              0x7B 0x85    
   \              0x86 0x86    
   \              0x8E 0x87    
   \              0x97 0x88    
   \              0xA4 0x89    
   \              0xAF         
   \   0000003E   0x8A 0xC5          DC8 138, 197, 139, 215, 140, 232, 141, 32, 74, 0, 73, 19, 71, 8, 75, 20
   \              0x8B 0xD7    
   \              0x8C 0xE8    
   \              0x8D 0x20    
   \              0x4A 0x00    
   \              0x49 0x13    
   \              0x47 0x08    
   \              0x4B 0x14    
   \   0000004E   0x4C 0x17          DC8 76, 23, 70, 5, 34, 153, 35, 3, 166, 4, 155, 0, 156, 32, 171, 6, 158
   \              0x46 0x05    
   \              0x22 0x99    
   \              0x23 0x03    
   \              0xA6 0x04    
   \              0x9B 0x00    
   \              0x9C 0x20    
   \              0xAB 0x06    
   \              0x9E         
   \   0000005F   0x11 0x9F          DC8 17, 159, 2, 0, 0
   \              0x02 0x00    
   \              0x00         
    123          {
    124              //寄存器，寄存器值次
    125              {OV7725_COM4         , 0x81},
    126              {OV7725_CLKRC        , 0x02},
    127              {OV7725_COM2         , 0x03},
    128              {OV7725_COM3         , 0xD0},
    129              {OV7725_COM7         , 0x40},
    130              {OV7725_HSTART       , 0x3F},
    131              {OV7725_HSIZE        , 0x50},
    132              {OV7725_VSTRT        , 0x03},
    133              {OV7725_VSIZE        , 0x78},
    134              {OV7725_HREF         , 0x00},
    135              {OV7725_SCAL0        , 0x0A},
    136              {OV7725_AWB_Ctrl0    , 0xE0},
    137              {OV7725_DSPAuto      , 0xff},
    138              {OV7725_DSP_Ctrl2    , 0x0C},
    139              {OV7725_DSP_Ctrl3    , 0x00},
    140              {OV7725_DSP_Ctrl4    , 0x00},
    141          
    142          #if (CAMERA_W == 80)
    143              {OV7725_HOutSize     , 0x14},
    144          #elif (CAMERA_W == 160)
    145              {OV7725_HOutSize     , 0x28},
    146          #elif (CAMERA_W == 240)
    147              {OV7725_HOutSize     , 0x3c},
    148          #elif (CAMERA_W == 320)
    149              {OV7725_HOutSize     , 0x50},
    150          #else
    151          
    152          #endif
    153          
    154          #if (CAMERA_H == 60 )
    155              {OV7725_VOutSize     , 0x1E},
    156          #elif (CAMERA_H == 120 )
    157              {OV7725_VOutSize     , 0x3c},
    158          #elif (CAMERA_H == 180 )
    159              {OV7725_VOutSize     , 0x5a},
    160          #elif (CAMERA_H == 240 )
    161              {OV7725_VOutSize     , 0x78},
    162          #else
    163          
    164          #endif
    165          
    166              {OV7725_EXHCH        , 0x00},
    167              {OV7725_GAM1         , 0x0c},
    168              {OV7725_GAM2         , 0x16},
    169              {OV7725_GAM3         , 0x2a},
    170              {OV7725_GAM4         , 0x4e},
    171              {OV7725_GAM5         , 0x61},
    172              {OV7725_GAM6         , 0x6f},
    173              {OV7725_GAM7         , 0x7b},
    174              {OV7725_GAM8         , 0x86},
    175              {OV7725_GAM9         , 0x8e},
    176              {OV7725_GAM10        , 0x97},
    177              {OV7725_GAM11        , 0xa4},
    178              {OV7725_GAM12        , 0xaf},
    179              {OV7725_GAM13        , 0xc5},
    180              {OV7725_GAM14        , 0xd7},
    181              {OV7725_GAM15        , 0xe8},
    182              {OV7725_SLOP         , 0x20},
    183              {OV7725_LC_RADI      , 0x00},
    184              {OV7725_LC_COEF      , 0x13},
    185              {OV7725_LC_XC        , 0x08},
    186              {OV7725_LC_COEFB     , 0x14},
    187              {OV7725_LC_COEFR     , 0x17},
    188              {OV7725_LC_CTR       , 0x05},
    189              {OV7725_BDBase       , 0x99},
    190              {OV7725_BDMStep      , 0x03},
    191              {OV7725_SDE          , 0x04},
    192              {OV7725_BRIGHT       , 0x00},
    193              {OV7725_CNST         , 0x20},
    194              {OV7725_SIGN         , 0x06},
    195              {OV7725_UVADJ0       , 0x11},
    196              {OV7725_UVADJ1       , 0x02},
    197          
    198          };
    199          

   \                                 In section .data, align 1
    200          uint8 ov7725_wolf_cfgnum = ARR_SIZE( ov7725_wolf_reg ) ; /*结构体数组成员数目*/
   \                     ov7725_wolf_cfgnum:
   \   00000000   0x31               DC8 49
    201          
    202          
    203          /*!
    204           *  @brief      鹰眼ov7725寄存器 初始化
    205           *  @return     初始化结果（0表示失败，1表示成功）
    206           *  @since      v5.0
    207           */

   \                                 In section .text, align 2, keep-with-next
    208          uint8 ov7725_wolf_reg_init(void)
    209          {
   \                     ov7725_wolf_reg_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    210              uint16 i = 0;
   \   00000004   0x2400             MOVS     R4,#+0
    211              uint8 Sensor_IDCode = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xF88D 0x0000      STRB     R0,[SP, #+0]
    212              SCCB_GPIO_init();
   \   0000000C   0x.... 0x....      BL       SCCB_GPIO_init
    213          
    214              //OV7725_Delay_ms(50);
    215              if( 0 == SCCB_WriteByte ( OV7725_COM7, 0x80 ) ) /*复位sensor */
   \   00000010   0x2180             MOVS     R1,#+128
   \   00000012   0x2012             MOVS     R0,#+18
   \   00000014   0x.... 0x....      BL       SCCB_WriteByte
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD104             BNE.N    ??ov7725_wolf_reg_init_0
    216              {
    217                  DEBUG_PRINTF("\n警告:SCCB写数据错误");
   \   0000001C   0x....             LDR.N    R0,??DataTable7_11
   \   0000001E   0x.... 0x....      BL       printf
    218                  return 0 ;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xE043             B.N      ??ov7725_wolf_reg_init_1
    219              }
    220          
    221              OV7725_WOLF_Delay_ms(50);
   \                     ??ov7725_wolf_reg_init_0: (+1)
   \   00000026   0x2032             MOVS     R0,#+50
   \   00000028   0x.... 0x....      BL       systick_delay_ms
    222          
    223              if( 0 == SCCB_ReadByte( &Sensor_IDCode, 1, OV7725_VER ) )    /* 读取sensor ID号*/
   \   0000002C   0x220B             MOVS     R2,#+11
   \   0000002E   0x2101             MOVS     R1,#+1
   \   00000030   0xA800             ADD      R0,SP,#+0
   \   00000032   0x.... 0x....      BL       SCCB_ReadByte
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD104             BNE.N    ??ov7725_wolf_reg_init_2
    224              {
    225                  DEBUG_PRINTF("\n警告:读取ID失败");
   \   0000003A   0x....             LDR.N    R0,??DataTable7_12
   \   0000003C   0x.... 0x....      BL       printf
    226                  return 0;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xE034             B.N      ??ov7725_wolf_reg_init_1
    227              }
    228              DEBUG_PRINTF("\nGet ID success，SENSOR ID is 0x%x", Sensor_IDCode);
   \                     ??ov7725_wolf_reg_init_2: (+1)
   \   00000044   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000048   0x....             LDR.N    R0,??DataTable7_13
   \   0000004A   0x.... 0x....      BL       printf
    229              DEBUG_PRINTF("\nConfig Register Number is %d ", ov7725_wolf_cfgnum);
   \   0000004E   0x....             LDR.N    R0,??DataTable7_14
   \   00000050   0x7801             LDRB     R1,[R0, #+0]
   \   00000052   0x....             LDR.N    R0,??DataTable7_15
   \   00000054   0x.... 0x....      BL       printf
    230              if(Sensor_IDCode == OV7725_ID)
   \   00000058   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000005C   0x2821             CMP      R0,#+33
   \   0000005E   0xD125             BNE.N    ??ov7725_wolf_reg_init_3
    231              {
    232                  for( i = 0 ; i < ov7725_wolf_cfgnum ; i++ )
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x0004             MOVS     R4,R0
   \                     ??ov7725_wolf_reg_init_4: (+1)
   \   00000064   0x....             LDR.N    R0,??DataTable7_14
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000006A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006C   0x4284             CMP      R4,R0
   \   0000006E   0xD218             BCS.N    ??ov7725_wolf_reg_init_5
    233                  {
    234                      if( 0 == SCCB_WriteByte(ov7725_wolf_reg[i].addr, ov7725_wolf_reg[i].val) )
   \   00000070   0x....             LDR.N    R0,??DataTable7_16
   \   00000072   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000074   0xEB10 0x0044      ADDS     R0,R0,R4, LSL #+1
   \   00000078   0x7841             LDRB     R1,[R0, #+1]
   \   0000007A   0x....             LDR.N    R0,??DataTable7_16
   \   0000007C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000007E   0xF810 0x0014      LDRB     R0,[R0, R4, LSL #+1]
   \   00000082   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000084   0x.... 0x....      BL       SCCB_WriteByte
   \   00000088   0x2800             CMP      R0,#+0
   \   0000008A   0xD108             BNE.N    ??ov7725_wolf_reg_init_6
    235                      {
    236                          DEBUG_PRINTF("\n警告:写寄存器0x%x失败", ov7725_wolf_reg[i].addr);
   \   0000008C   0x....             LDR.N    R0,??DataTable7_16
   \   0000008E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000090   0xF810 0x1014      LDRB     R1,[R0, R4, LSL #+1]
   \   00000094   0x....             LDR.N    R0,??DataTable7_17
   \   00000096   0x.... 0x....      BL       printf
    237                          return 0;
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0xE007             B.N      ??ov7725_wolf_reg_init_1
    238                      }
    239                  }
   \                     ??ov7725_wolf_reg_init_6: (+1)
   \   0000009E   0x1C64             ADDS     R4,R4,#+1
   \   000000A0   0xE7E0             B.N      ??ov7725_wolf_reg_init_4
    240              }
    241              else
    242              {
    243                  return 0;
    244              }
    245              DEBUG_PRINTF("\nOV7725 Register Config Success!");
   \                     ??ov7725_wolf_reg_init_5: (+1)
   \   000000A2   0x....             LDR.N    R0,??DataTable7_18
   \   000000A4   0x.... 0x....      BL       printf
    246              return 1;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0xE000             B.N      ??ov7725_wolf_reg_init_1
   \                     ??ov7725_wolf_reg_init_3: (+1)
   \   000000AC   0x2000             MOVS     R0,#+0
   \                     ??ov7725_wolf_reg_init_1: (+1)
   \   000000AE   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    247          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0xE000E180         DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     ov7725_wolf_img_buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x400FF050         DC32     0x400ff050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x40008024         DC32     0x40008024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x00020103         DC32     0x20103

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x00090113         DC32     0x90113

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     ov7725_wolf_img_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x40009010         DC32     0x40009010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x400490A0         DC32     0x400490a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     ov7725_wolf_cfgnum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x........         DC32     ov7725_wolf_reg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0A 0xBE          DC8 "\012\276\257\270\346:SCCB\320\264\312\375\276\335\264\355\316\363"
   \              0xAF 0xB8    
   \              0xE6 0x3A    
   \              0x53 0x43    
   \              0x43 0x42    
   \              0xD0 0xB4    
   \              0xCA 0xFD    
   \              0xBE 0xDD    
   \              0xB4 0xED    
   \              0xCE 0xF3    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0A 0xBE          DC8 "\012\276\257\270\346:\266\301\310\241ID\312\247\260\334"
   \              0xAF 0xB8    
   \              0xE6 0x3A    
   \              0xB6 0xC1    
   \              0xC8 0xA1    
   \              0x49 0x44    
   \              0xCA 0xA7    
   \              0xB0 0xDC    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0A 0x47          DC8 "\012Get ID success\243\254SENSOR ID is 0x%x"
   \              0x65 0x74    
   \              0x20 0x49    
   \              0x44 0x20    
   \              0x73 0x75    
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0xA3    
   \              0xAC 0x53    
   \              0x45 0x4E    
   \              0x53 0x4F    
   \              0x52 0x20    
   \              0x49 0x44    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x0A 0x43          DC8 "\012Config Register Number is %d "
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x20    
   \              0x52 0x65    
   \              0x67 0x69    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x4E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x20    
   \              0x69 0x73    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x0A 0xBE          DC8 "\012\276\257\270\346:\320\264\274\304\264\346\306\3670x%x\312\247\260\334"
   \              0xAF 0xB8    
   \              0xE6 0x3A    
   \              0xD0 0xB4    
   \              0xBC 0xC4    
   \              0xB4 0xE6    
   \              0xC6 0xF7    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0xCA 0xA7    
   \              0xB0 0xDC    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x0A 0x4F          DC8 "\012OV7725 Register Config Success!"
   \              0x56 0x37    
   \              0x37 0x32    
   \              0x35 0x20    
   \              0x52 0x65    
   \              0x67 0x69    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x43    
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x20    
   \              0x53 0x75    
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x21    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    248          
    249          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   NVIC_DisableIRQ
       0   NVIC_EnableIRQ
       0   ov7725_wolf_dma
       8   ov7725_wolf_get_img
         8   -> NVIC_EnableIRQ
       8   ov7725_wolf_init
         8   -> ov7725_wolf_port_init
         8   -> ov7725_wolf_reg_init
      16   ov7725_wolf_port_init
        16   -> NVIC_DisableIRQ
        16   -> NVIC_EnableIRQ
        16   -> dma_portx2buff_init
        16   -> port_init
      16   ov7725_wolf_reg_init
        16   -> SCCB_GPIO_init
        16   -> SCCB_ReadByte
        16   -> SCCB_WriteByte
        16   -> printf
        16   -> systick_delay_ms
       8   ov7725_wolf_vsync
         8   -> NVIC_DisableIRQ


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      24  ?_0
      20  ?_1
      36  ?_2
      32  ?_3
      24  ?_4
      36  ?_5
      20  NVIC_DisableIRQ
      20  NVIC_EnableIRQ
       1  ov7725_wolf_cfgnum
      20  ov7725_wolf_dma
      62  ov7725_wolf_get_img
       4  ov7725_wolf_img_buff
       1  ov7725_wolf_img_flag
      24  ov7725_wolf_init
      84  ov7725_wolf_port_init
     100  ov7725_wolf_reg
     176  ov7725_wolf_reg_init
      58  ov7725_wolf_vsync

 
   4 bytes in section .bss
 102 bytes in section .data
 172 bytes in section .rodata
 540 bytes in section .text
 
 540 bytes of CODE  memory
 172 bytes of CONST memory
 106 bytes of DATA  memory

Errors: none
Warnings: 1
