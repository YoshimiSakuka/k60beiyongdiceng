###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        26/Jul/2016  23:31:06
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_BMP.c
#    Command line =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_BMP.c -D
#        DEBUG -D ARM_MATH_CM4 -D MK60DZ10 -lCN
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -lB
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -o
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR for
#        ARM\arm\INC\c\DLib_Config_Full.h" -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\IAR\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\kinetis\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\CMSIS\Inc\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\FatFs\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\USB\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\MPU6050\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\IMU\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\Driver\
#        -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\VCAN_BMP.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\VCAN_BMP.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_BMP.c
      1          //支持24bit BMP图片显示
      2          #include "common.h"
      3          #include "VCAN_BMP.h"
      4          #include "ff.h"
      5          #include "vcan_lcd.h"
      6          
      7          
      8          #define BMP_SIZE(W,H)           ((((W)*4+3)/4)*(H))         //((w * 4)+3)/4  是 为了 进 1 ，因为 bmp 宽度 是 4 个 倍数
      9          #define BMP_BYTECNT(W,H,BIT)    (BMP_SIZE(W,H)*BIT/8)
     10          
     11          #define MAX_BMP_SIZE            BMP_SIZE(MAX_BMP_W,MAX_BMP_H)
     12          #define MAX_BMP_BYTECNT         BMP_BYTECNT(MAX_BMP_W,MAX_BMP_H,MAX_BMP_BIT)
     13          
     14          #define BMP_LINE_BYTE(W,BIT)    ((((W)*(BIT)+31)/32)*4)
     15          #define MAX_BMP_LINE_BYTE       BMP_LINE_BYTE(MAX_BMP_W,MAX_BMP_BIT)
     16          
     17          
     18          
     19          //BMP一行图像

   \                                 In section .bss, align 4
     20          uint8 BMP_Buffer[MAX_BMP_LINE_BYTE];
   \                     BMP_Buffer:
   \   00000000                      DS8 960
     21          
     22          

   \                                 In section .text, align 4, keep-with-next
     23          int8 SD2LCD_BMP(char *file,Site_t site0)
     24          {
   \                     SD2LCD_BMP: (+1)
   \   00000000   0xE92D 0x4FF3      PUSH     {R0,R1,R4-R11,LR}
   \   00000004   0xF2AD 0x4DAC      SUBW     SP,SP,#+1196
     25              //文件系统相关的 变量
     26              FATFS fs={0};
   \   00000008   0xA89F             ADD      R0,SP,#+636
   \   0000000A   0xF44F 0x710C      MOV      R1,#+560
   \   0000000E   0x.... 0x....      BL       __aeabi_memclr4
     27              FIL fsrc={0};   
   \   00000012   0xA816             ADD      R0,SP,#+88
   \   00000014   0xF44F 0x7109      MOV      R1,#+548
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
     28              FRESULT res;
     29              uint32 br;    
     30          
     31              
     32              BMP_FILEHEADER BmpHead;
     33          
     34              int Width,Height ;
     35              uint32 OffBits,Bitcnt ;
     36          
     37          
     38          
     39              uint8 r,g,b ;
     40              uint16 rgb;
     41          
     42              Size_t size;
     43              Site_t site;
     44          
     45              int x=0,y=0,BytesPerLine,Step ;
   \   0000001C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000020   0xF05F 0x0900      MOVS     R9,#+0
     46          
     47              uint8 *pColor;
     48          
     49          
     50              f_mount(0,&fs);
   \   00000024   0xA99F             ADD      R1,SP,#+636
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       f_mount
     51          
     52              //打开文件
     53              res=f_open(&fsrc,file,FA_OPEN_EXISTING | FA_READ);
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0xF8DD 0x14AC      LDR      R1,[SP, #+1196]
   \   00000032   0xA816             ADD      R0,SP,#+88
   \   00000034   0x.... 0x....      BL       f_open
   \   00000038   0x0004             MOVS     R4,R0
     54              if(res)
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xF040 0x81C5      BNE.W    ??SD2LCD_BMP_0
     55              {
     56                  goto bmp_exit_false;
     57              }
     58          
     59              //读取BMP 头部文件
     60              res=f_read(&fsrc,&BmpHead,sizeof(BmpHead),&br);
   \                     ??SD2LCD_BMP_1: (+1)
   \   00000042   0xAB04             ADD      R3,SP,#+16
   \   00000044   0x2236             MOVS     R2,#+54
   \   00000046   0xA908             ADD      R1,SP,#+32
   \   00000048   0xA816             ADD      R0,SP,#+88
   \   0000004A   0x.... 0x....      BL       f_read
   \   0000004E   0x0004             MOVS     R4,R0
     61              if(res)
   \   00000050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000052   0x2C00             CMP      R4,#+0
   \   00000054   0xF040 0x81BA      BNE.W    ??SD2LCD_BMP_0
     62              {
     63                  goto bmp_exit_false;
     64              }
     65          
     66              Width       = BmpHead.biWidth;
   \                     ??SD2LCD_BMP_2: (+1)
   \   00000058   0xF8DD 0x0032      LDR      R0,[SP, #+50]
   \   0000005C   0x0005             MOVS     R5,R0
     67              Height      = BmpHead.biHeight;
   \   0000005E   0xF8DD 0x0036      LDR      R0,[SP, #+54]
   \   00000062   0x4682             MOV      R10,R0
     68              OffBits     = BmpHead.bfOffBits;        //bmp颜色数据起始位置
   \   00000064   0xF8DD 0x002A      LDR      R0,[SP, #+42]
   \   00000068   0x9006             STR      R0,[SP, #+24]
     69              Bitcnt      = BmpHead.biBitCount;
   \   0000006A   0xF8BD 0x003C      LDRH     R0,[SP, #+60]
   \   0000006E   0x9007             STR      R0,[SP, #+28]
     70          
     71              if((BmpHead.bfType != 0x4d42)||(BmpHead.biCompression))           //'BM' 和  没压缩
   \   00000070   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000074   0xF644 0x5142      MOVW     R1,#+19778
   \   00000078   0x4288             CMP      R0,R1
   \   0000007A   0xD103             BNE.N    ??SD2LCD_BMP_3
   \   0000007C   0xF8DD 0x003E      LDR      R0,[SP, #+62]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD003             BEQ.N    ??SD2LCD_BMP_4
     72              {
     73                  DEBUG_PRINTF("\r\n不支持该图片显示！");
   \                     ??SD2LCD_BMP_3: (+1)
   \   00000084   0x48D7             LDR.N    R0,??SD2LCD_BMP_5
   \   00000086   0x.... 0x....      BL       printf
     74                  goto bmp_exit_false;
   \   0000008A   0xE19F             B.N      ??SD2LCD_BMP_0
     75              }
     76          
     77              if(Width > MAX_BMP_W)                   //图片宽度不能超过MAX_BMP_W
   \                     ??SD2LCD_BMP_4: (+1)
   \   0000008C   0xF5B5 0x7FA0      CMP      R5,#+320
   \   00000090   0xDD03             BLE.N    ??SD2LCD_BMP_6
     78              {
     79                  DEBUG_PRINTF("\r\n图片太大，无法显示！");
   \   00000092   0x48D5             LDR.N    R0,??SD2LCD_BMP_5+0x4
   \   00000094   0x.... 0x....      BL       printf
     80                  goto bmp_exit_false;
   \   00000098   0xE198             B.N      ??SD2LCD_BMP_0
     81              }
     82          
     83              if(Height>0)                            //如果高度是 正数，图像从左下角往上读数据
   \                     ??SD2LCD_BMP_6: (+1)
   \   0000009A   0xF1BA 0x0F01      CMP      R10,#+1
   \   0000009E   0xDB06             BLT.N    ??SD2LCD_BMP_7
     84              {
     85                  y = Height -1;
   \   000000A0   0xF1BA 0x0001      SUBS     R0,R10,#+1
   \   000000A4   0x4681             MOV      R9,R0
     86                  Step = -1;
   \   000000A6   0xF05F 0x30FF      MOVS     R0,#-1
   \   000000AA   0x0007             MOVS     R7,R0
   \   000000AC   0xE00A             B.N      ??SD2LCD_BMP_8
     87              }
     88              else if(Height < 0)                     //如果高度是 负数，图像从左上角往下读数据
   \                     ??SD2LCD_BMP_7: (+1)
   \   000000AE   0xF1BA 0x0F00      CMP      R10,#+0
   \   000000B2   0xD506             BPL.N    ??SD2LCD_BMP_9
     89              {
     90                  Height = -Height;
   \   000000B4   0xF1DA 0x0A00      RSBS     R10,R10,#+0
     91                  y = 0;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x4681             MOV      R9,R0
     92                  Step = 1;
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0x0007             MOVS     R7,R0
   \   000000C0   0xE000             B.N      ??SD2LCD_BMP_8
     93              }
     94              else
     95              {
     96                  goto bmp_exit_false;
   \                     ??SD2LCD_BMP_9: (+1)
   \   000000C2   0xE183             B.N      ??SD2LCD_BMP_0
     97              }
     98          
     99              //一行一行读取
    100              size.H = 1;
   \                     ??SD2LCD_BMP_8: (+1)
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    101              size.W = Width;
   \   000000CA   0x0028             MOVS     R0,R5
   \   000000CC   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    102              site.x = site0.x;
   \   000000D0   0xF8BD 0x04B0      LDRH     R0,[SP, #+1200]
   \   000000D4   0xF8AD 0x0008      STRH     R0,[SP, #+8]
    103              BytesPerLine = BMP_LINE_BYTE(Width,Bitcnt);       //一行的数目
   \   000000D8   0x9807             LDR      R0,[SP, #+28]
   \   000000DA   0xFB00 0xF005      MUL      R0,R0,R5
   \   000000DE   0x301F             ADDS     R0,R0,#+31
   \   000000E0   0x0940             LSRS     R0,R0,#+5
   \   000000E2   0x0080             LSLS     R0,R0,#+2
   \   000000E4   0x9005             STR      R0,[SP, #+20]
    104          
    105              switch(Bitcnt)
   \   000000E6   0x9807             LDR      R0,[SP, #+28]
   \   000000E8   0x2801             CMP      R0,#+1
   \   000000EA   0xF000 0x809C      BEQ.W    ??SD2LCD_BMP_10
   \   000000EE   0x2810             CMP      R0,#+16
   \   000000F0   0xD05B             BEQ.N    ??SD2LCD_BMP_11
   \   000000F2   0x2818             CMP      R0,#+24
   \   000000F4   0xF040 0x815D      BNE.W    ??SD2LCD_BMP_12
    106              {
    107                  case 24:        //24位真彩色 :BGR24
    108                  {
    109                      //开始画图
    110                      res=f_lseek(&fsrc,OffBits); //找到bmp颜色数据起始位置
   \                     ??SD2LCD_BMP_13: (+1)
   \   000000F8   0x9906             LDR      R1,[SP, #+24]
   \   000000FA   0xA816             ADD      R0,SP,#+88
   \   000000FC   0x.... 0x....      BL       f_lseek
   \   00000100   0x0004             MOVS     R4,R0
    111          
    112                      for(;(y<Height)&&(y>=0);y+=Step)
   \                     ??SD2LCD_BMP_14: (+1)
   \   00000102   0x45D1             CMP      R9,R10
   \   00000104   0xDA50             BGE.N    ??SD2LCD_BMP_15
   \   00000106   0xF1B9 0x0F00      CMP      R9,#+0
   \   0000010A   0xD44D             BMI.N    ??SD2LCD_BMP_15
    113                      {
    114                          res=f_read(&fsrc,BMP_Buffer,BytesPerLine,&br);
   \   0000010C   0xAB04             ADD      R3,SP,#+16
   \   0000010E   0x9A05             LDR      R2,[SP, #+20]
   \   00000110   0x49B6             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   00000112   0xA816             ADD      R0,SP,#+88
   \   00000114   0x.... 0x....      BL       f_read
   \   00000118   0x0004             MOVS     R4,R0
    115                          if(res) goto bmp_exit_false;
   \   0000011A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000011C   0x2C00             CMP      R4,#+0
   \   0000011E   0xF040 0x8155      BNE.W    ??SD2LCD_BMP_0
    116                          pColor = BMP_Buffer;
   \                     ??SD2LCD_BMP_16: (+1)
   \   00000122   0x48B2             LDR.N    R0,??SD2LCD_BMP_5+0x8
   \   00000124   0x4683             MOV      R11,R0
    117          
    118                          //由于调用液晶顶层接口效率不高，这里直接调用底层
    119                          site.y = site0.y +y;
   \   00000126   0xF8BD 0x04B2      LDRH     R0,[SP, #+1202]
   \   0000012A   0xEB19 0x0000      ADDS     R0,R9,R0
   \   0000012E   0xF8AD 0x000A      STRH     R0,[SP, #+10]
    120                          LCD_PTLON(site, size);              //开窗
   \   00000132   0x9903             LDR      R1,[SP, #+12]
   \   00000134   0x9802             LDR      R0,[SP, #+8]
   \   00000136   0x.... 0x....      BL       LCD_ILI9341_ptlon
    121                          LCD_RAMWR();                        //写内存
   \   0000013A   0x202C             MOVS     R0,#+44
   \   0000013C   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000140   0x8008             STRH     R0,[R1, #+0]
    122          
    123                          for(x=0;x<Width;x++)
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x4680             MOV      R8,R0
   \                     ??SD2LCD_BMP_17: (+1)
   \   00000146   0x45A8             CMP      R8,R5
   \   00000148   0xDA2B             BGE.N    ??SD2LCD_BMP_18
    124                          {
    125                              //BGR24
    126                              b=*pColor++;
   \   0000014A   0xF89B 0x0000      LDRB     R0,[R11, #+0]
   \   0000014E   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000152   0xF11B 0x0B01      ADDS     R11,R11,#+1
    127                              g=*pColor++;
   \   00000156   0xF89B 0x0000      LDRB     R0,[R11, #+0]
   \   0000015A   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \   0000015E   0xF11B 0x0B01      ADDS     R11,R11,#+1
    128                              r=*pColor++;
   \   00000162   0xF89B 0x0000      LDRB     R0,[R11, #+0]
   \   00000166   0xF88D 0x0006      STRB     R0,[SP, #+6]
   \   0000016A   0xF11B 0x0B01      ADDS     R11,R11,#+1
    129          
    130                              rgb = RGB24_RGB565(r,g,b);
   \   0000016E   0xF89D 0x0006      LDRB     R0,[SP, #+6]
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x08C0             LSRS     R0,R0,#+3
   \   00000176   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000178   0xF89D 0x1005      LDRB     R1,[SP, #+5]
   \   0000017C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000017E   0x0889             LSRS     R1,R1,#+2
   \   00000180   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000182   0x0149             LSLS     R1,R1,#+5
   \   00000184   0xEA51 0x20C0      ORRS     R0,R1,R0, LSL #+11
   \   00000188   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   0000018C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000018E   0x08C9             LSRS     R1,R1,#+3
   \   00000190   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000192   0x4308             ORRS     R0,R1,R0
   \   00000194   0x0006             MOVS     R6,R0
    131                              LCD_WR_DATA( rgb);
   \   00000196   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   0000019A   0x8006             STRH     R6,[R0, #+0]
    132                          }
   \   0000019C   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000001A0   0xE7D1             B.N      ??SD2LCD_BMP_17
    133                      }
   \                     ??SD2LCD_BMP_18: (+1)
   \   000001A2   0xEB17 0x0909      ADDS     R9,R7,R9
   \   000001A6   0xE7AC             B.N      ??SD2LCD_BMP_14
    134                      break;
   \                     ??SD2LCD_BMP_15: (+1)
   \   000001A8   0xE107             B.N      ??SD2LCD_BMP_19
    135          
    136                  }
    137          
    138                  //16位中，最低的5位表示蓝色分量，中间的5位表示绿色分量，高的5位表示红色分量，一共占用了15位，最高的一位保留，设为0。这种格式也被称作555 16位位图。
    139                  //如果是 RBG565 ,那么 biCompression = BI_BITFIELDS ，
    140                  case 16:        //16位高彩色
    141                  {
    142                      //开始画图
    143                      res=f_lseek(&fsrc,OffBits); //找到bmp颜色数据起始位置
   \                     ??SD2LCD_BMP_11: (+1)
   \   000001AA   0x9906             LDR      R1,[SP, #+24]
   \   000001AC   0xA816             ADD      R0,SP,#+88
   \   000001AE   0x.... 0x....      BL       f_lseek
   \   000001B2   0x0004             MOVS     R4,R0
    144          
    145                      for(;(y<Height)&&(y>=0);y+=Step)
   \                     ??SD2LCD_BMP_20: (+1)
   \   000001B4   0x45D1             CMP      R9,R10
   \   000001B6   0xDA35             BGE.N    ??SD2LCD_BMP_21
   \   000001B8   0xF1B9 0x0F00      CMP      R9,#+0
   \   000001BC   0xD432             BMI.N    ??SD2LCD_BMP_21
    146                      {
    147                          res=f_read(&fsrc,BMP_Buffer,BytesPerLine,&br);
   \   000001BE   0xAB04             ADD      R3,SP,#+16
   \   000001C0   0x9A05             LDR      R2,[SP, #+20]
   \   000001C2   0x498A             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   000001C4   0xA816             ADD      R0,SP,#+88
   \   000001C6   0x.... 0x....      BL       f_read
   \   000001CA   0x0004             MOVS     R4,R0
    148                          if(res)goto bmp_exit_false;
   \   000001CC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001CE   0x2C00             CMP      R4,#+0
   \   000001D0   0xF040 0x80FC      BNE.W    ??SD2LCD_BMP_0
    149                          pColor = BMP_Buffer;
   \                     ??SD2LCD_BMP_22: (+1)
   \   000001D4   0x4885             LDR.N    R0,??SD2LCD_BMP_5+0x8
   \   000001D6   0x4683             MOV      R11,R0
    150          
    151                          //由于调用液晶顶层接口效率不高，这里直接调用底层
    152                          site.y = site0.y +y;
   \   000001D8   0xF8BD 0x04B2      LDRH     R0,[SP, #+1202]
   \   000001DC   0xEB19 0x0000      ADDS     R0,R9,R0
   \   000001E0   0xF8AD 0x000A      STRH     R0,[SP, #+10]
    153                          LCD_PTLON(site, size);              //开窗
   \   000001E4   0x9903             LDR      R1,[SP, #+12]
   \   000001E6   0x9802             LDR      R0,[SP, #+8]
   \   000001E8   0x.... 0x....      BL       LCD_ILI9341_ptlon
    154                          LCD_RAMWR();                        //写内存
   \   000001EC   0x202C             MOVS     R0,#+44
   \   000001EE   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000001F2   0x8008             STRH     R0,[R1, #+0]
    155          
    156                          for(x=0;x<Width;x++)
   \   000001F4   0x2000             MOVS     R0,#+0
   \   000001F6   0x4680             MOV      R8,R0
   \                     ??SD2LCD_BMP_23: (+1)
   \   000001F8   0x45A8             CMP      R8,R5
   \   000001FA   0xDA10             BGE.N    ??SD2LCD_BMP_24
    157                          {
    158                              rgb = *(uint16 *)pColor;    //bgr555
   \   000001FC   0xF8BB 0x0000      LDRH     R0,[R11, #+0]
   \   00000200   0x0006             MOVS     R6,R0
    159                              rgb = RGB555_RGB565(rgb);
   \   00000202   0xF3C6 0x1049      UBFX     R0,R6,#+5,#+10
   \   00000206   0xF016 0x011F      ANDS     R1,R6,#0x1F
   \   0000020A   0xEA51 0x1680      ORRS     R6,R1,R0, LSL #+6
    160          
    161                              LCD_WR_DATA( rgb);
   \   0000020E   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000212   0x8006             STRH     R6,[R0, #+0]
    162          
    163                              pColor+=2;
   \   00000214   0xF11B 0x0B02      ADDS     R11,R11,#+2
    164                          }
   \   00000218   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000021C   0xE7EC             B.N      ??SD2LCD_BMP_23
    165                      }
   \                     ??SD2LCD_BMP_24: (+1)
   \   0000021E   0xEB17 0x0909      ADDS     R9,R7,R9
   \   00000222   0xE7C7             B.N      ??SD2LCD_BMP_20
    166                      break;
   \                     ??SD2LCD_BMP_21: (+1)
   \   00000224   0xE0C9             B.N      ??SD2LCD_BMP_19
    167                  }
    168          
    169                  //单色BMP，文件后头，还有2个RGBQUAD的调色板颜色，表示 0 和 1 分别对应的颜色。
    170                  //一般是 0为黑 ， 1 为 白
    171                  case 1:         //单色
    172                  {
    173                      //读完文件头后，马上读 调试板
    174                      res=f_read(&fsrc,BMP_Buffer,2*sizeof(RGBQUAD),&br);
   \                     ??SD2LCD_BMP_10: (+1)
   \   00000226   0xAB04             ADD      R3,SP,#+16
   \   00000228   0x2208             MOVS     R2,#+8
   \   0000022A   0x4970             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   0000022C   0xA816             ADD      R0,SP,#+88
   \   0000022E   0x.... 0x....      BL       f_read
   \   00000232   0x0004             MOVS     R4,R0
    175                      uint16 color[2];
    176                      color[0] = RGB24_RGB565(BMP_Buffer[2],BMP_Buffer[1],BMP_Buffer[0]);
   \   00000234   0x486D             LDR.N    R0,??SD2LCD_BMP_5+0x8
   \   00000236   0x7880             LDRB     R0,[R0, #+2]
   \   00000238   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023A   0x08C0             LSRS     R0,R0,#+3
   \   0000023C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023E   0x496B             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   00000240   0x7849             LDRB     R1,[R1, #+1]
   \   00000242   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000244   0x0889             LSRS     R1,R1,#+2
   \   00000246   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000248   0x0149             LSLS     R1,R1,#+5
   \   0000024A   0xEA51 0x20C0      ORRS     R0,R1,R0, LSL #+11
   \   0000024E   0x4967             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   00000250   0x7809             LDRB     R1,[R1, #+0]
   \   00000252   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000254   0x08C9             LSRS     R1,R1,#+3
   \   00000256   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000258   0x4308             ORRS     R0,R1,R0
   \   0000025A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    177                      color[1] = RGB24_RGB565(BMP_Buffer[6],BMP_Buffer[5],BMP_Buffer[4]);
   \   0000025E   0x4863             LDR.N    R0,??SD2LCD_BMP_5+0x8
   \   00000260   0x7980             LDRB     R0,[R0, #+6]
   \   00000262   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000264   0x08C0             LSRS     R0,R0,#+3
   \   00000266   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000268   0x4960             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   0000026A   0x7949             LDRB     R1,[R1, #+5]
   \   0000026C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000026E   0x0889             LSRS     R1,R1,#+2
   \   00000270   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000272   0x0149             LSLS     R1,R1,#+5
   \   00000274   0xEA51 0x20C0      ORRS     R0,R1,R0, LSL #+11
   \   00000278   0x495C             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   0000027A   0x7909             LDRB     R1,[R1, #+4]
   \   0000027C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000027E   0x08C9             LSRS     R1,R1,#+3
   \   00000280   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000282   0x4308             ORRS     R0,R1,R0
   \   00000284   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    178          
    179                      //开始画图
    180                      res=f_lseek(&fsrc,OffBits);         //找到bmp颜色数据起始位置
   \   00000288   0x9906             LDR      R1,[SP, #+24]
   \   0000028A   0xA816             ADD      R0,SP,#+88
   \   0000028C   0x.... 0x....      BL       f_lseek
   \   00000290   0x0004             MOVS     R4,R0
    181          
    182                      Width = (Width+7)/8;                //8个像素一个点(+7是进1)
   \   00000292   0x1DE8             ADDS     R0,R5,#+7
   \   00000294   0x2108             MOVS     R1,#+8
   \   00000296   0xFB90 0xF5F1      SDIV     R5,R0,R1
    183          
    184                      for(;(y<Height)&&(y>=0);y+=Step)
   \                     ??SD2LCD_BMP_25: (+1)
   \   0000029A   0x45D1             CMP      R9,R10
   \   0000029C   0xF280 0x8088      BGE.W    ??SD2LCD_BMP_26
   \   000002A0   0xF1B9 0x0F00      CMP      R9,#+0
   \   000002A4   0xF100 0x8084      BMI.W    ??SD2LCD_BMP_26
    185                      {
    186                          res=f_read(&fsrc,BMP_Buffer,BytesPerLine,&br);
   \   000002A8   0xAB04             ADD      R3,SP,#+16
   \   000002AA   0x9A05             LDR      R2,[SP, #+20]
   \   000002AC   0x494F             LDR.N    R1,??SD2LCD_BMP_5+0x8
   \   000002AE   0xA816             ADD      R0,SP,#+88
   \   000002B0   0x.... 0x....      BL       f_read
   \   000002B4   0x0004             MOVS     R4,R0
    187                          if(res)goto bmp_exit_false;
   \   000002B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002B8   0x2C00             CMP      R4,#+0
   \   000002BA   0xF040 0x8087      BNE.W    ??SD2LCD_BMP_0
    188                          pColor = BMP_Buffer;
   \                     ??SD2LCD_BMP_27: (+1)
   \   000002BE   0x484B             LDR.N    R0,??SD2LCD_BMP_5+0x8
   \   000002C0   0x4683             MOV      R11,R0
    189          
    190                          //由于调用液晶顶层接口效率不高，这里直接调用底层
    191                          site.y = site0.y +y;
   \   000002C2   0xF8BD 0x04B2      LDRH     R0,[SP, #+1202]
   \   000002C6   0xEB19 0x0000      ADDS     R0,R9,R0
   \   000002CA   0xF8AD 0x000A      STRH     R0,[SP, #+10]
    192                          LCD_PTLON(site, size);              //开窗
   \   000002CE   0x9903             LDR      R1,[SP, #+12]
   \   000002D0   0x9802             LDR      R0,[SP, #+8]
   \   000002D2   0x.... 0x....      BL       LCD_ILI9341_ptlon
    193                          LCD_RAMWR();                        //写内存
   \   000002D6   0x202C             MOVS     R0,#+44
   \   000002D8   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000002DC   0x8008             STRH     R0,[R1, #+0]
    194          
    195                          for(x=0;x<Width;x++)
   \   000002DE   0x2000             MOVS     R0,#+0
   \   000002E0   0x4680             MOV      R8,R0
   \                     ??SD2LCD_BMP_28: (+1)
   \   000002E2   0x45A8             CMP      R8,R5
   \   000002E4   0xDA61             BGE.N    ??SD2LCD_BMP_29
    196                          {
    197                              rgb = color[(*pColor >> 7)&0x01];
   \   000002E6   0xA800             ADD      R0,SP,#+0
   \   000002E8   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   000002EC   0x11C9             ASRS     R1,R1,#+7
   \   000002EE   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   000002F2   0x0006             MOVS     R6,R0
    198                              LCD_WR_DATA( rgb);
   \   000002F4   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   000002F8   0x8006             STRH     R6,[R0, #+0]
    199                              rgb = color[(*pColor >> 6)&0x01];
   \   000002FA   0xA800             ADD      R0,SP,#+0
   \   000002FC   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000300   0xF3C1 0x1180      UBFX     R1,R1,#+6,#+1
   \   00000304   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000306   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   0000030A   0x0006             MOVS     R6,R0
    200                              LCD_WR_DATA( rgb);
   \   0000030C   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000310   0x8006             STRH     R6,[R0, #+0]
    201                              rgb = color[(*pColor >> 5)&0x01];
   \   00000312   0xA800             ADD      R0,SP,#+0
   \   00000314   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000318   0xF3C1 0x1140      UBFX     R1,R1,#+5,#+1
   \   0000031C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000031E   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   00000322   0x0006             MOVS     R6,R0
    202                              LCD_WR_DATA( rgb);
   \   00000324   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000328   0x8006             STRH     R6,[R0, #+0]
    203                              rgb = color[(*pColor >> 4)&0x01];
   \   0000032A   0xA800             ADD      R0,SP,#+0
   \   0000032C   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000330   0xF3C1 0x1100      UBFX     R1,R1,#+4,#+1
   \   00000334   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000336   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   0000033A   0x0006             MOVS     R6,R0
    204                              LCD_WR_DATA( rgb);
   \   0000033C   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000340   0x8006             STRH     R6,[R0, #+0]
    205                              rgb = color[(*pColor >> 3)&0x01];
   \   00000342   0xA800             ADD      R0,SP,#+0
   \   00000344   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000348   0xF3C1 0x01C0      UBFX     R1,R1,#+3,#+1
   \   0000034C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000034E   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   00000352   0x0006             MOVS     R6,R0
    206                              LCD_WR_DATA( rgb);
   \   00000354   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000358   0x8006             STRH     R6,[R0, #+0]
    207                              rgb = color[(*pColor >> 2)&0x01];
   \   0000035A   0xA800             ADD      R0,SP,#+0
   \   0000035C   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000360   0xF3C1 0x0180      UBFX     R1,R1,#+2,#+1
   \   00000364   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000366   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   0000036A   0x0006             MOVS     R6,R0
    208                              LCD_WR_DATA( rgb);
   \   0000036C   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000370   0x8006             STRH     R6,[R0, #+0]
    209                              rgb = color[(*pColor >> 1)&0x01];
   \   00000372   0xA800             ADD      R0,SP,#+0
   \   00000374   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000378   0xF3C1 0x0140      UBFX     R1,R1,#+1,#+1
   \   0000037C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000037E   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   00000382   0x0006             MOVS     R6,R0
    210                              LCD_WR_DATA( rgb);
   \   00000384   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   00000388   0x8006             STRH     R6,[R0, #+0]
    211                              rgb = color[(*pColor >> 0)&0x01];
   \   0000038A   0xA800             ADD      R0,SP,#+0
   \   0000038C   0xF89B 0x1000      LDRB     R1,[R11, #+0]
   \   00000390   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   00000394   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   00000398   0x0006             MOVS     R6,R0
    212                              LCD_WR_DATA( rgb);
   \   0000039A   0xF05F 0x40D0      MOVS     R0,#+1744830464
   \   0000039E   0x8006             STRH     R6,[R0, #+0]
    213          
    214                              pColor+=1;
   \   000003A0   0xF11B 0x0B01      ADDS     R11,R11,#+1
    215                          }
   \   000003A4   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000003A8   0xE79B             B.N      ??SD2LCD_BMP_28
    216                      }
   \                     ??SD2LCD_BMP_29: (+1)
   \   000003AA   0xEB17 0x0909      ADDS     R9,R7,R9
   \   000003AE   0xE774             B.N      ??SD2LCD_BMP_25
    217              
    218                      break;
   \                     ??SD2LCD_BMP_26: (+1)
   \   000003B0   0xE003             B.N      ??SD2LCD_BMP_19
    219          
    220                  }
    221                  
    222                  default:
    223                  DEBUG_PRINTF("\r\n不支持该图片显示！");
   \                     ??SD2LCD_BMP_12: (+1)
   \   000003B2   0x480C             LDR.N    R0,??SD2LCD_BMP_5
   \   000003B4   0x.... 0x....      BL       printf
    224                  goto bmp_exit_false;
   \   000003B8   0xE008             B.N      ??SD2LCD_BMP_0
    225          
    226              }
    227          
    228              f_close(&fsrc);
   \                     ??SD2LCD_BMP_19: (+1)
   \   000003BA   0xA816             ADD      R0,SP,#+88
   \   000003BC   0x.... 0x....      BL       f_close
    229              f_mount(0,NULL);
   \   000003C0   0x2100             MOVS     R1,#+0
   \   000003C2   0x2000             MOVS     R0,#+0
   \   000003C4   0x.... 0x....      BL       f_mount
    230          
    231              return TRUE;
   \   000003C8   0x2001             MOVS     R0,#+1
   \   000003CA   0xE007             B.N      ??SD2LCD_BMP_30
    232          
    233          bmp_exit_false:
    234              f_close(&fsrc);
   \                     ??SD2LCD_BMP_0: (+1)
   \   000003CC   0xA816             ADD      R0,SP,#+88
   \   000003CE   0x.... 0x....      BL       f_close
    235              f_mount(0,NULL);
   \   000003D2   0x2100             MOVS     R1,#+0
   \   000003D4   0x2000             MOVS     R0,#+0
   \   000003D6   0x.... 0x....      BL       f_mount
    236          
    237              return FALSE;
   \   000003DA   0x2000             MOVS     R0,#+0
   \                     ??SD2LCD_BMP_30: (+1)
   \   000003DC   0xF20D 0x4DB4      ADDW     SP,SP,#+1204
   \   000003E0   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??SD2LCD_BMP_5:
   \   000003E4   0x........         DC32     ?_1
   \   000003E8   0x........         DC32     ?_2
   \   000003EC   0x........         DC32     BMP_Buffer
    238          }

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000104   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000114   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000154   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000184   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000194   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000204   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000214   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000006   0x0000 0x0000      DC16 0, 0
   \   0000000A   0x00 0x00          DC8 0, 0
   \   0000000C   0x00000000         DC32 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000047   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000005E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000075   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000008C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000BA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000FF   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000116   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000012D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000015B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000189   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001CE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001E5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001FC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000213   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000022A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0D 0x0A          DC8 "\015\012\262\273\326\247\263\326\270\303\315\274\306\254\317\324\312\276\243\241"
   \              0xB2 0xBB    
   \              0xD6 0xA7    
   \              0xB3 0xD6    
   \              0xB8 0xC3    
   \              0xCD 0xBC    
   \              0xC6 0xAC    
   \              0xCF 0xD4    
   \              0xCA 0xBE    
   \              0xA3 0xA1    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0D 0x0A          DC8 "\015\012\315\274\306\254\314\253\264\363\243\254\316\336\267\250\317\324\312\276\243\241"
   \              0xCD 0xBC    
   \              0xC6 0xAC    
   \              0xCC 0xAB    
   \              0xB4 0xF3    
   \              0xA3 0xAC    
   \              0xCE 0xDE    
   \              0xB7 0xA8    
   \              0xCF 0xD4    
   \              0xCA 0xBE    
   \              0xA3 0xA1    
   \              0x00         
   \   00000017   0x00               DC8 0
    239          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
    1240   SD2LCD_BMP
      1240   -> LCD_ILI9341_ptlon
      1240   -> __aeabi_memclr4
      1240   -> f_close
      1240   -> f_lseek
      1240   -> f_mount
      1240   -> f_open
      1240   -> f_read
      1240   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     560  ?_0
      24  ?_1
      24  ?_2
     548  ?_3
     960  BMP_Buffer
    1008  SD2LCD_BMP

 
   960 bytes in section .bss
 1 156 bytes in section .rodata
 1 008 bytes in section .text
 
 1 008 bytes of CODE  memory
 1 156 bytes of CONST memory
   960 bytes of DATA  memory

Errors: none
Warnings: none
