###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        26/Jul/2016  23:31:10
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_LCD_ILI9341.c
#    Command line =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_LCD_ILI9341.c
#        -D DEBUG -D ARM_MATH_CM4 -D MK60DZ10 -lCN
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -lB
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -o
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR for
#        ARM\arm\INC\c\DLib_Config_Full.h" -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\IAR\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\kinetis\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\CMSIS\Inc\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\FatFs\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\USB\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\MPU6050\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\IMU\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\Driver\
#        -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\VCAN_LCD_ILI9341.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\VCAN_LCD_ILI9341.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层\Board\src\VCAN_LCD_ILI9341.c
      1          /*!
      2           *     COPYRIGHT NOTICE
      3           *     Copyright (c) 2013,山外科技
      4           *     All rights reserved.
      5           *     技术讨论：山外论坛 http://www.vcan123.com
      6           *
      7           *     除注明出处外，以下所有内容版权均属山外科技所有，未经允许，不得用于商业用途，
      8           *     修改内容时必须保留山外科技的版权声明。
      9           *
     10           * @file       VCAN_LCD_ILI9341.c
     11           * @brief      LCD ILI9341函数库
     12           * @author     山外科技
     13           * @version    v5.1
     14           * @date       2014-02-03
     15           */
     16          
     17          #include "common.h"
     18          #include "MK60_gpio.h"
     19          #include "VCAN_LCD_ILI9341.h"
     20          
     21          
     22          
     23          #if (USE_LCD == LCD_ILI9341)
     24          
     25          //定义所用到的 IO管脚
     26          #define LCD_RST    PTC13                //复位
     27          #define LCD_BL     PTB8                 //背光
     28          
     29          
     30          #define ILI9341_DELAY()          DELAY_MS(100)
     31          #define ILI9341_DELAYMS(ms)      DELAY_MS(ms)
     32          
     33          
     34          #define ILI9341_H       240
     35          #define ILI9341_W       320
     36          
     37          #if ((ILI9341_DIR_DEFAULT&1 )== 0)      //横屏
     38          uint16  ili9341_h   = ILI9341_H;
     39          uint16  ili9341_w   = ILI9341_W;
     40          #else

   \                                 In section .data, align 2
     41          uint16  ili9341_h   = ILI9341_W;
   \                     ili9341_h:
   \   00000000   0x0140             DC16 320

   \                                 In section .data, align 2
     42          uint16  ili9341_w   = ILI9341_H;
   \                     ili9341_w:
   \   00000000   0x00F0             DC16 240
     43          #endif

   \                                 In section .data, align 1
     44          uint8   ili9341_dir = ILI9341_DIR_DEFAULT;
   \                     ili9341_dir:
   \   00000000   0x01               DC8 1
     45          /*!
     46           *  @brief      LCD_ILI9341初始化
     47           *  @since      v5.0
     48           */

   \                                 In section .text, align 2, keep-with-next
     49          void    LCD_ILI9341_init()
     50          {
   \                     LCD_ILI9341_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     51              gpio_init (LCD_BL, GPO, 1); //LCD背光管脚输出1，表示关闭LCD背光
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2028             MOVS     R0,#+40
   \   00000008   0x.... 0x....      BL       gpio_init
     52          
     53              //复位LCD
     54              gpio_init (LCD_RST, GPO, 0);
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x204D             MOVS     R0,#+77
   \   00000012   0x.... 0x....      BL       gpio_init
     55          
     56              ILI9341_DELAYMS(1);
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       systick_delay_ms
     57              GPIO_SET   (LCD_RST, 1);
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x43fe1034
   \   00000022   0x6008             STR      R0,[R1, #+0]
     58          
     59              //初始化总线
     60              flexbus_8080_init();
   \   00000024   0x.... 0x....      BL       flexbus_8080_init
     61          
     62              ILI9341_DELAY();
   \   00000028   0x2064             MOVS     R0,#+100
   \   0000002A   0x.... 0x....      BL       systick_delay_ms
     63              LCD_ILI9341_WR_CMD(0xCF);
   \   0000002E   0x20CF             MOVS     R0,#+207
   \   00000030   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000034   0x8008             STRH     R0,[R1, #+0]
     64              LCD_ILI9341_WR_DATA(0x00);
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000003C   0x8008             STRH     R0,[R1, #+0]
     65              LCD_ILI9341_WR_DATA(0x81);
   \   0000003E   0x2081             MOVS     R0,#+129
   \   00000040   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000044   0x8008             STRH     R0,[R1, #+0]
     66              LCD_ILI9341_WR_DATA(0x30);
   \   00000046   0x2030             MOVS     R0,#+48
   \   00000048   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000004C   0x8008             STRH     R0,[R1, #+0]
     67          
     68              ILI9341_DELAY();
   \   0000004E   0x2064             MOVS     R0,#+100
   \   00000050   0x.... 0x....      BL       systick_delay_ms
     69              LCD_ILI9341_WR_CMD(0xED);
   \   00000054   0x20ED             MOVS     R0,#+237
   \   00000056   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   0000005A   0x8008             STRH     R0,[R1, #+0]
     70              LCD_ILI9341_WR_DATA(0x64);
   \   0000005C   0x2064             MOVS     R0,#+100
   \   0000005E   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000062   0x8008             STRH     R0,[R1, #+0]
     71              LCD_ILI9341_WR_DATA(0x03);
   \   00000064   0x2003             MOVS     R0,#+3
   \   00000066   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000006A   0x8008             STRH     R0,[R1, #+0]
     72              LCD_ILI9341_WR_DATA(0x12);
   \   0000006C   0x2012             MOVS     R0,#+18
   \   0000006E   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000072   0x8008             STRH     R0,[R1, #+0]
     73              LCD_ILI9341_WR_DATA(0x81);
   \   00000074   0x2081             MOVS     R0,#+129
   \   00000076   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000007A   0x8008             STRH     R0,[R1, #+0]
     74          
     75              ILI9341_DELAY();
   \   0000007C   0x2064             MOVS     R0,#+100
   \   0000007E   0x.... 0x....      BL       systick_delay_ms
     76              LCD_ILI9341_WR_CMD(0xE8);
   \   00000082   0x20E8             MOVS     R0,#+232
   \   00000084   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000088   0x8008             STRH     R0,[R1, #+0]
     77              LCD_ILI9341_WR_DATA(0x85);
   \   0000008A   0x2085             MOVS     R0,#+133
   \   0000008C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000090   0x8008             STRH     R0,[R1, #+0]
     78              LCD_ILI9341_WR_DATA(0x10);
   \   00000092   0x2010             MOVS     R0,#+16
   \   00000094   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000098   0x8008             STRH     R0,[R1, #+0]
     79              LCD_ILI9341_WR_DATA(0x78);
   \   0000009A   0x2078             MOVS     R0,#+120
   \   0000009C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000A0   0x8008             STRH     R0,[R1, #+0]
     80          
     81              ILI9341_DELAY();
   \   000000A2   0x2064             MOVS     R0,#+100
   \   000000A4   0x.... 0x....      BL       systick_delay_ms
     82              LCD_ILI9341_WR_CMD(0xCB);
   \   000000A8   0x20CB             MOVS     R0,#+203
   \   000000AA   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000000AE   0x8008             STRH     R0,[R1, #+0]
     83              LCD_ILI9341_WR_DATA(0x39);
   \   000000B0   0x2039             MOVS     R0,#+57
   \   000000B2   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000B6   0x8008             STRH     R0,[R1, #+0]
     84              LCD_ILI9341_WR_DATA(0x2C);
   \   000000B8   0x202C             MOVS     R0,#+44
   \   000000BA   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000BE   0x8008             STRH     R0,[R1, #+0]
     85              LCD_ILI9341_WR_DATA(0x00);
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000C6   0x8008             STRH     R0,[R1, #+0]
     86              LCD_ILI9341_WR_DATA(0x34);
   \   000000C8   0x2034             MOVS     R0,#+52
   \   000000CA   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000CE   0x8008             STRH     R0,[R1, #+0]
     87              LCD_ILI9341_WR_DATA(0x02);
   \   000000D0   0x2002             MOVS     R0,#+2
   \   000000D2   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000D6   0x8008             STRH     R0,[R1, #+0]
     88          
     89              ILI9341_DELAY();
   \   000000D8   0x2064             MOVS     R0,#+100
   \   000000DA   0x.... 0x....      BL       systick_delay_ms
     90              LCD_ILI9341_WR_CMD(0xF7);
   \   000000DE   0x20F7             MOVS     R0,#+247
   \   000000E0   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000000E4   0x8008             STRH     R0,[R1, #+0]
     91              LCD_ILI9341_WR_DATA(0x20);
   \   000000E6   0x2020             MOVS     R0,#+32
   \   000000E8   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000000EC   0x8008             STRH     R0,[R1, #+0]
     92          
     93              ILI9341_DELAY();
   \   000000EE   0x2064             MOVS     R0,#+100
   \   000000F0   0x.... 0x....      BL       systick_delay_ms
     94              LCD_ILI9341_WR_CMD(0xEA);
   \   000000F4   0x20EA             MOVS     R0,#+234
   \   000000F6   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000000FA   0x8008             STRH     R0,[R1, #+0]
     95              LCD_ILI9341_WR_DATA(0x00);
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000102   0x8008             STRH     R0,[R1, #+0]
     96              LCD_ILI9341_WR_DATA(0x00);
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000010A   0x8008             STRH     R0,[R1, #+0]
     97          
     98              ILI9341_DELAY();
   \   0000010C   0x2064             MOVS     R0,#+100
   \   0000010E   0x.... 0x....      BL       systick_delay_ms
     99              LCD_ILI9341_WR_CMD(0xB1);
   \   00000112   0x20B1             MOVS     R0,#+177
   \   00000114   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000118   0x8008             STRH     R0,[R1, #+0]
    100              LCD_ILI9341_WR_DATA(0x00);
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000120   0x8008             STRH     R0,[R1, #+0]
    101              LCD_ILI9341_WR_DATA(0x1B);
   \   00000122   0x201B             MOVS     R0,#+27
   \   00000124   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000128   0x8008             STRH     R0,[R1, #+0]
    102          
    103              ILI9341_DELAY();
   \   0000012A   0x2064             MOVS     R0,#+100
   \   0000012C   0x.... 0x....      BL       systick_delay_ms
    104              LCD_ILI9341_WR_CMD(0xB6);
   \   00000130   0x20B6             MOVS     R0,#+182
   \   00000132   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000136   0x8008             STRH     R0,[R1, #+0]
    105              LCD_ILI9341_WR_DATA(0x0A);
   \   00000138   0x200A             MOVS     R0,#+10
   \   0000013A   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000013E   0x8008             STRH     R0,[R1, #+0]
    106              LCD_ILI9341_WR_DATA(0xA2);
   \   00000140   0x20A2             MOVS     R0,#+162
   \   00000142   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000146   0x8008             STRH     R0,[R1, #+0]
    107          
    108              ILI9341_DELAY();
   \   00000148   0x2064             MOVS     R0,#+100
   \   0000014A   0x.... 0x....      BL       systick_delay_ms
    109              LCD_ILI9341_WR_CMD(0xC0);
   \   0000014E   0x20C0             MOVS     R0,#+192
   \   00000150   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000154   0x8008             STRH     R0,[R1, #+0]
    110              LCD_ILI9341_WR_DATA(0x35);
   \   00000156   0x2035             MOVS     R0,#+53
   \   00000158   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000015C   0x8008             STRH     R0,[R1, #+0]
    111          
    112              ILI9341_DELAY();
   \   0000015E   0x2064             MOVS     R0,#+100
   \   00000160   0x.... 0x....      BL       systick_delay_ms
    113              LCD_ILI9341_WR_CMD(0xC1);
   \   00000164   0x20C1             MOVS     R0,#+193
   \   00000166   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   0000016A   0x8008             STRH     R0,[R1, #+0]
    114              LCD_ILI9341_WR_DATA(0x11);
   \   0000016C   0x2011             MOVS     R0,#+17
   \   0000016E   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000172   0x8008             STRH     R0,[R1, #+0]
    115          
    116              LCD_ILI9341_WR_CMD(0xC5);
   \   00000174   0x20C5             MOVS     R0,#+197
   \   00000176   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   0000017A   0x8008             STRH     R0,[R1, #+0]
    117              LCD_ILI9341_WR_DATA(0x45);
   \   0000017C   0x2045             MOVS     R0,#+69
   \   0000017E   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000182   0x8008             STRH     R0,[R1, #+0]
    118              LCD_ILI9341_WR_DATA(0x45);
   \   00000184   0x2045             MOVS     R0,#+69
   \   00000186   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000018A   0x8008             STRH     R0,[R1, #+0]
    119          
    120              LCD_ILI9341_WR_CMD(0xC7);
   \   0000018C   0x20C7             MOVS     R0,#+199
   \   0000018E   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000192   0x8008             STRH     R0,[R1, #+0]
    121              LCD_ILI9341_WR_DATA(0xA2);
   \   00000194   0x20A2             MOVS     R0,#+162
   \   00000196   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000019A   0x8008             STRH     R0,[R1, #+0]
    122          
    123              LCD_ILI9341_WR_CMD(0xF2);
   \   0000019C   0x20F2             MOVS     R0,#+242
   \   0000019E   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000001A2   0x8008             STRH     R0,[R1, #+0]
    124              LCD_ILI9341_WR_DATA(0x00);
   \   000001A4   0x2000             MOVS     R0,#+0
   \   000001A6   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001AA   0x8008             STRH     R0,[R1, #+0]
    125          
    126              LCD_ILI9341_WR_CMD(0x26);
   \   000001AC   0x2026             MOVS     R0,#+38
   \   000001AE   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000001B2   0x8008             STRH     R0,[R1, #+0]
    127              LCD_ILI9341_WR_DATA(0x01);
   \   000001B4   0x2001             MOVS     R0,#+1
   \   000001B6   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001BA   0x8008             STRH     R0,[R1, #+0]
    128              ILI9341_DELAY();
   \   000001BC   0x2064             MOVS     R0,#+100
   \   000001BE   0x.... 0x....      BL       systick_delay_ms
    129              LCD_ILI9341_WR_CMD(0xE0); //Set Gamma
   \   000001C2   0x20E0             MOVS     R0,#+224
   \   000001C4   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000001C8   0x8008             STRH     R0,[R1, #+0]
    130              LCD_ILI9341_WR_DATA(0x0F);
   \   000001CA   0x200F             MOVS     R0,#+15
   \   000001CC   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001D0   0x8008             STRH     R0,[R1, #+0]
    131              LCD_ILI9341_WR_DATA(0x26);
   \   000001D2   0x2026             MOVS     R0,#+38
   \   000001D4   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001D8   0x8008             STRH     R0,[R1, #+0]
    132              LCD_ILI9341_WR_DATA(0x24);
   \   000001DA   0x2024             MOVS     R0,#+36
   \   000001DC   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001E0   0x8008             STRH     R0,[R1, #+0]
    133              LCD_ILI9341_WR_DATA(0x0B);
   \   000001E2   0x200B             MOVS     R0,#+11
   \   000001E4   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001E8   0x8008             STRH     R0,[R1, #+0]
    134              LCD_ILI9341_WR_DATA(0x0E);
   \   000001EA   0x200E             MOVS     R0,#+14
   \   000001EC   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001F0   0x8008             STRH     R0,[R1, #+0]
    135              LCD_ILI9341_WR_DATA(0x09);
   \   000001F2   0x2009             MOVS     R0,#+9
   \   000001F4   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000001F8   0x8008             STRH     R0,[R1, #+0]
    136              LCD_ILI9341_WR_DATA(0x54);
   \   000001FA   0x2054             MOVS     R0,#+84
   \   000001FC   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000200   0x8008             STRH     R0,[R1, #+0]
    137              LCD_ILI9341_WR_DATA(0xA8);
   \   00000202   0x20A8             MOVS     R0,#+168
   \   00000204   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000208   0x8008             STRH     R0,[R1, #+0]
    138              LCD_ILI9341_WR_DATA(0x46);
   \   0000020A   0x2046             MOVS     R0,#+70
   \   0000020C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000210   0x8008             STRH     R0,[R1, #+0]
    139              LCD_ILI9341_WR_DATA(0x0C);
   \   00000212   0x200C             MOVS     R0,#+12
   \   00000214   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000218   0x8008             STRH     R0,[R1, #+0]
    140              LCD_ILI9341_WR_DATA(0x17);
   \   0000021A   0x2017             MOVS     R0,#+23
   \   0000021C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000220   0x8008             STRH     R0,[R1, #+0]
    141              LCD_ILI9341_WR_DATA(0x09);
   \   00000222   0x2009             MOVS     R0,#+9
   \   00000224   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000228   0x8008             STRH     R0,[R1, #+0]
    142              LCD_ILI9341_WR_DATA(0x0F);
   \   0000022A   0x200F             MOVS     R0,#+15
   \   0000022C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000230   0x8008             STRH     R0,[R1, #+0]
    143              LCD_ILI9341_WR_DATA(0x07);
   \   00000232   0x2007             MOVS     R0,#+7
   \   00000234   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000238   0x8008             STRH     R0,[R1, #+0]
    144              LCD_ILI9341_WR_DATA(0x00);
   \   0000023A   0x2000             MOVS     R0,#+0
   \   0000023C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000240   0x8008             STRH     R0,[R1, #+0]
    145              LCD_ILI9341_WR_CMD(0XE1); //Set Gamma
   \   00000242   0x20E1             MOVS     R0,#+225
   \   00000244   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000248   0x8008             STRH     R0,[R1, #+0]
    146              LCD_ILI9341_WR_DATA(0x00);
   \   0000024A   0x2000             MOVS     R0,#+0
   \   0000024C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000250   0x8008             STRH     R0,[R1, #+0]
    147              LCD_ILI9341_WR_DATA(0x19);
   \   00000252   0x2019             MOVS     R0,#+25
   \   00000254   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000258   0x8008             STRH     R0,[R1, #+0]
    148              LCD_ILI9341_WR_DATA(0x1B);
   \   0000025A   0x201B             MOVS     R0,#+27
   \   0000025C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000260   0x8008             STRH     R0,[R1, #+0]
    149              LCD_ILI9341_WR_DATA(0x04);
   \   00000262   0x2004             MOVS     R0,#+4
   \   00000264   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000268   0x8008             STRH     R0,[R1, #+0]
    150              LCD_ILI9341_WR_DATA(0x10);
   \   0000026A   0x2010             MOVS     R0,#+16
   \   0000026C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000270   0x8008             STRH     R0,[R1, #+0]
    151              LCD_ILI9341_WR_DATA(0x07);
   \   00000272   0x2007             MOVS     R0,#+7
   \   00000274   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000278   0x8008             STRH     R0,[R1, #+0]
    152              LCD_ILI9341_WR_DATA(0x2A);
   \   0000027A   0x202A             MOVS     R0,#+42
   \   0000027C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000280   0x8008             STRH     R0,[R1, #+0]
    153              LCD_ILI9341_WR_DATA(0x47);
   \   00000282   0x2047             MOVS     R0,#+71
   \   00000284   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000288   0x8008             STRH     R0,[R1, #+0]
    154              LCD_ILI9341_WR_DATA(0x39);
   \   0000028A   0x2039             MOVS     R0,#+57
   \   0000028C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000290   0x8008             STRH     R0,[R1, #+0]
    155              LCD_ILI9341_WR_DATA(0x03);
   \   00000292   0x2003             MOVS     R0,#+3
   \   00000294   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000298   0x8008             STRH     R0,[R1, #+0]
    156              LCD_ILI9341_WR_DATA(0x06);
   \   0000029A   0x2006             MOVS     R0,#+6
   \   0000029C   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000002A0   0x8008             STRH     R0,[R1, #+0]
    157              LCD_ILI9341_WR_DATA(0x06);
   \   000002A2   0x2006             MOVS     R0,#+6
   \   000002A4   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000002A8   0x8008             STRH     R0,[R1, #+0]
    158              LCD_ILI9341_WR_DATA(0x30);
   \   000002AA   0x2030             MOVS     R0,#+48
   \   000002AC   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000002B0   0x8008             STRH     R0,[R1, #+0]
    159              LCD_ILI9341_WR_DATA(0x38);
   \   000002B2   0x2038             MOVS     R0,#+56
   \   000002B4   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000002B8   0x8008             STRH     R0,[R1, #+0]
    160              LCD_ILI9341_WR_DATA(0x0F);
   \   000002BA   0x200F             MOVS     R0,#+15
   \   000002BC   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000002C0   0x8008             STRH     R0,[R1, #+0]
    161              ILI9341_DELAY();
   \   000002C2   0x2064             MOVS     R0,#+100
   \   000002C4   0x.... 0x....      BL       systick_delay_ms
    162          
    163          
    164              ILI9341_DELAY();
   \   000002C8   0x2064             MOVS     R0,#+100
   \   000002CA   0x.... 0x....      BL       systick_delay_ms
    165              LCD_ILI9341_WR_CMD(0x3a); // Memory Access Control
   \   000002CE   0x203A             MOVS     R0,#+58
   \   000002D0   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000002D4   0x8008             STRH     R0,[R1, #+0]
    166              LCD_ILI9341_WR_DATA(0x55);
   \   000002D6   0x2055             MOVS     R0,#+85
   \   000002D8   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   000002DC   0x8008             STRH     R0,[R1, #+0]
    167              LCD_ILI9341_WR_CMD(0x11); //Exit Sleep
   \   000002DE   0x2011             MOVS     R0,#+17
   \   000002E0   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000002E4   0x8008             STRH     R0,[R1, #+0]
    168              ILI9341_DELAY();
   \   000002E6   0x2064             MOVS     R0,#+100
   \   000002E8   0x.... 0x....      BL       systick_delay_ms
    169              LCD_ILI9341_WR_CMD(0x29); //display on
   \   000002EC   0x2029             MOVS     R0,#+41
   \   000002EE   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   000002F2   0x8008             STRH     R0,[R1, #+0]
    170          
    171          
    172              LCD_SET_DIR(ili9341_dir);   //液晶方向显示函数
   \   000002F4   0x....             LDR.N    R0,??DataTable4_1
   \   000002F6   0x7800             LDRB     R0,[R0, #+0]
   \   000002F8   0x.... 0x....      BL       LCD_ILI9341_dir
    173          
    174              LCD_ILI9341_WR_CMD(0x2c);
   \   000002FC   0x202C             MOVS     R0,#+44
   \   000002FE   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000302   0x8008             STRH     R0,[R1, #+0]
    175          
    176              PTXn_T(LCD_BL,OUT) = 0;     //开LCD背光
   \   00000304   0x2000             MOVS     R0,#+0
   \   00000306   0x....             LDR.N    R1,??DataTable4_2  ;; 0x43fe0820
   \   00000308   0x6008             STR      R0,[R1, #+0]
    177          }
   \   0000030A   0xBD01             POP      {R0,PC}          ;; return
    178          
    179          /*!
    180           *  @brief      设置ILI9341GRAM指针扫描方向
    181           *  @param      option    方向选择（0~3）
    182           *  @since      v5.0
    183           */

   \                                 In section .text, align 2, keep-with-next
    184          void LCD_ILI9341_dir(uint8 option)
    185          {
    186          
    187              option = option % 4;
   \                     LCD_ILI9341_dir: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2204             MOVS     R2,#+4
   \   00000004   0x0001             MOVS     R1,R0
   \   00000006   0xFB91 0xF0F2      SDIV     R0,R1,R2
   \   0000000A   0xFB00 0x1012      MLS      R0,R0,R2,R1
    188          
    189          
    190              ili9341_dir = option;
   \   0000000E   0x....             LDR.N    R1,??DataTable4_1
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    191          
    192          
    193              switch(option)
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD006             BEQ.N    ??LCD_ILI9341_dir_0
   \   00000018   0x2802             CMP      R0,#+2
   \   0000001A   0xD074             BEQ.N    ??LCD_ILI9341_dir_1
   \   0000001C   0xD33B             BCC.N    ??LCD_ILI9341_dir_2
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xF000 0x80A9      BEQ.W    ??LCD_ILI9341_dir_3
   \   00000024   0xE0DF             B.N      ??LCD_ILI9341_dir_4
    194              {
    195                  case 0:
    196                  {
    197                      /*横屏*/
    198                      LCD_ILI9341_WR_CMD(0x36);
   \                     ??LCD_ILI9341_dir_0: (+1)
   \   00000026   0x2136             MOVS     R1,#+54
   \   00000028   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000002C   0x8011             STRH     R1,[R2, #+0]
    199                      LCD_ILI9341_WR_DATA(0xA8);    //横屏
   \   0000002E   0x21A8             MOVS     R1,#+168
   \   00000030   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000034   0x8011             STRH     R1,[R2, #+0]
    200          
    201                      LCD_ILI9341_WR_CMD(0X2A);
   \   00000036   0x212A             MOVS     R1,#+42
   \   00000038   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000003C   0x8011             STRH     R1,[R2, #+0]
    202                      LCD_ILI9341_WR_DATA(0x00);  //start
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000044   0x8011             STRH     R1,[R2, #+0]
    203                      LCD_ILI9341_WR_DATA(0x00);
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000004C   0x8011             STRH     R1,[R2, #+0]
    204                      LCD_ILI9341_WR_DATA(0x01);  //end
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000054   0x8011             STRH     R1,[R2, #+0]
    205                      LCD_ILI9341_WR_DATA(0x3F);
   \   00000056   0x213F             MOVS     R1,#+63
   \   00000058   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000005C   0x8011             STRH     R1,[R2, #+0]
    206          
    207                      LCD_ILI9341_WR_CMD(0X2B);
   \   0000005E   0x212B             MOVS     R1,#+43
   \   00000060   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   00000064   0x8011             STRH     R1,[R2, #+0]
    208                      LCD_ILI9341_WR_DATA(0x00);   //start
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000006C   0x8011             STRH     R1,[R2, #+0]
    209                      LCD_ILI9341_WR_DATA(0x00);
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000074   0x8011             STRH     R1,[R2, #+0]
    210                      LCD_ILI9341_WR_DATA(0x00);   //end
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000007C   0x8011             STRH     R1,[R2, #+0]
    211                      LCD_ILI9341_WR_DATA(0xEF);
   \   0000007E   0x21EF             MOVS     R1,#+239
   \   00000080   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000084   0x8011             STRH     R1,[R2, #+0]
    212          
    213                      ili9341_h   = ILI9341_H;
   \   00000086   0x21F0             MOVS     R1,#+240
   \   00000088   0x....             LDR.N    R2,??DataTable4_3
   \   0000008A   0x8011             STRH     R1,[R2, #+0]
    214                      ili9341_w   = ILI9341_W;
   \   0000008C   0xF44F 0x71A0      MOV      R1,#+320
   \   00000090   0x....             LDR.N    R2,??DataTable4_4
   \   00000092   0x8011             STRH     R1,[R2, #+0]
    215                  }
    216                  break;
   \   00000094   0xE0A7             B.N      ??LCD_ILI9341_dir_5
    217                  case 1:
    218                  {
    219                      /*竖屏*/
    220                      LCD_ILI9341_WR_CMD(0x36);
   \                     ??LCD_ILI9341_dir_2: (+1)
   \   00000096   0x2136             MOVS     R1,#+54
   \   00000098   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000009C   0x8011             STRH     R1,[R2, #+0]
    221                      LCD_ILI9341_WR_DATA(0xD8);  //竖屏
   \   0000009E   0x21D8             MOVS     R1,#+216
   \   000000A0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000A4   0x8011             STRH     R1,[R2, #+0]
    222          
    223                      LCD_ILI9341_WR_CMD(0X2A);
   \   000000A6   0x212A             MOVS     R1,#+42
   \   000000A8   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   000000AC   0x8011             STRH     R1,[R2, #+0]
    224                      LCD_ILI9341_WR_DATA(0x00);
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000B4   0x8011             STRH     R1,[R2, #+0]
    225                      LCD_ILI9341_WR_DATA(0x00);
   \   000000B6   0x2100             MOVS     R1,#+0
   \   000000B8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000BC   0x8011             STRH     R1,[R2, #+0]
    226                      LCD_ILI9341_WR_DATA(0x00);
   \   000000BE   0x2100             MOVS     R1,#+0
   \   000000C0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000C4   0x8011             STRH     R1,[R2, #+0]
    227                      LCD_ILI9341_WR_DATA(0xEF);
   \   000000C6   0x21EF             MOVS     R1,#+239
   \   000000C8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000CC   0x8011             STRH     R1,[R2, #+0]
    228          
    229                      LCD_ILI9341_WR_CMD(0X2B);
   \   000000CE   0x212B             MOVS     R1,#+43
   \   000000D0   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   000000D4   0x8011             STRH     R1,[R2, #+0]
    230                      LCD_ILI9341_WR_DATA(0x00);
   \   000000D6   0x2100             MOVS     R1,#+0
   \   000000D8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000DC   0x8011             STRH     R1,[R2, #+0]
    231                      LCD_ILI9341_WR_DATA(0x00);
   \   000000DE   0x2100             MOVS     R1,#+0
   \   000000E0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000E4   0x8011             STRH     R1,[R2, #+0]
    232                      LCD_ILI9341_WR_DATA(0x01);
   \   000000E6   0x2101             MOVS     R1,#+1
   \   000000E8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000EC   0x8011             STRH     R1,[R2, #+0]
    233                      LCD_ILI9341_WR_DATA(0x3F);
   \   000000EE   0x213F             MOVS     R1,#+63
   \   000000F0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000000F4   0x8011             STRH     R1,[R2, #+0]
    234          
    235                      ili9341_h   = ILI9341_W;
   \   000000F6   0xF44F 0x71A0      MOV      R1,#+320
   \   000000FA   0x....             LDR.N    R2,??DataTable4_3
   \   000000FC   0x8011             STRH     R1,[R2, #+0]
    236                      ili9341_w   = ILI9341_H;
   \   000000FE   0x21F0             MOVS     R1,#+240
   \   00000100   0x....             LDR.N    R2,??DataTable4_4
   \   00000102   0x8011             STRH     R1,[R2, #+0]
    237                  }
    238                  break;
   \   00000104   0xE06F             B.N      ??LCD_ILI9341_dir_5
    239                  case 2:
    240                  {
    241                      /*横屏*/
    242                      LCD_ILI9341_WR_CMD(0x36);
   \                     ??LCD_ILI9341_dir_1: (+1)
   \   00000106   0x2136             MOVS     R1,#+54
   \   00000108   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000010C   0x8011             STRH     R1,[R2, #+0]
    243                      LCD_ILI9341_WR_DATA(0x68);    //横屏
   \   0000010E   0x2168             MOVS     R1,#+104
   \   00000110   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000114   0x8011             STRH     R1,[R2, #+0]
    244          
    245                      LCD_ILI9341_WR_CMD(0X2A);
   \   00000116   0x212A             MOVS     R1,#+42
   \   00000118   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000011C   0x8011             STRH     R1,[R2, #+0]
    246                      LCD_ILI9341_WR_DATA(0x00);  //start
   \   0000011E   0x2100             MOVS     R1,#+0
   \   00000120   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000124   0x8011             STRH     R1,[R2, #+0]
    247                      LCD_ILI9341_WR_DATA(0x00);
   \   00000126   0x2100             MOVS     R1,#+0
   \   00000128   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000012C   0x8011             STRH     R1,[R2, #+0]
    248                      LCD_ILI9341_WR_DATA(0x01);  //end
   \   0000012E   0x2101             MOVS     R1,#+1
   \   00000130   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000134   0x8011             STRH     R1,[R2, #+0]
    249                      LCD_ILI9341_WR_DATA(0x3F);
   \   00000136   0x213F             MOVS     R1,#+63
   \   00000138   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000013C   0x8011             STRH     R1,[R2, #+0]
    250          
    251                      LCD_ILI9341_WR_CMD(0X2B);
   \   0000013E   0x212B             MOVS     R1,#+43
   \   00000140   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   00000144   0x8011             STRH     R1,[R2, #+0]
    252                      LCD_ILI9341_WR_DATA(0x00);   //start
   \   00000146   0x2100             MOVS     R1,#+0
   \   00000148   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000014C   0x8011             STRH     R1,[R2, #+0]
    253                      LCD_ILI9341_WR_DATA(0x00);
   \   0000014E   0x2100             MOVS     R1,#+0
   \   00000150   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000154   0x8011             STRH     R1,[R2, #+0]
    254                      LCD_ILI9341_WR_DATA(0x00);   //end
   \   00000156   0x2100             MOVS     R1,#+0
   \   00000158   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000015C   0x8011             STRH     R1,[R2, #+0]
    255                      LCD_ILI9341_WR_DATA(0xEF);
   \   0000015E   0x21EF             MOVS     R1,#+239
   \   00000160   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000164   0x8011             STRH     R1,[R2, #+0]
    256                      ili9341_h   = ILI9341_H;
   \   00000166   0x21F0             MOVS     R1,#+240
   \   00000168   0x....             LDR.N    R2,??DataTable4_3
   \   0000016A   0x8011             STRH     R1,[R2, #+0]
    257                      ili9341_w   = ILI9341_W;
   \   0000016C   0xF44F 0x71A0      MOV      R1,#+320
   \   00000170   0x....             LDR.N    R2,??DataTable4_4
   \   00000172   0x8011             STRH     R1,[R2, #+0]
    258                  }
    259                  break;
   \   00000174   0xE037             B.N      ??LCD_ILI9341_dir_5
    260                  case 3:
    261                  {
    262                      /*竖屏*/
    263                      LCD_ILI9341_WR_CMD(0x36);
   \                     ??LCD_ILI9341_dir_3: (+1)
   \   00000176   0x2136             MOVS     R1,#+54
   \   00000178   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000017C   0x8011             STRH     R1,[R2, #+0]
    264                      LCD_ILI9341_WR_DATA(0x18);  //竖屏
   \   0000017E   0x2118             MOVS     R1,#+24
   \   00000180   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000184   0x8011             STRH     R1,[R2, #+0]
    265          
    266                      LCD_ILI9341_WR_CMD(0X2A);
   \   00000186   0x212A             MOVS     R1,#+42
   \   00000188   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   0000018C   0x8011             STRH     R1,[R2, #+0]
    267                      LCD_ILI9341_WR_DATA(0x00);
   \   0000018E   0x2100             MOVS     R1,#+0
   \   00000190   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   00000194   0x8011             STRH     R1,[R2, #+0]
    268                      LCD_ILI9341_WR_DATA(0x00);
   \   00000196   0x2100             MOVS     R1,#+0
   \   00000198   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   0000019C   0x8011             STRH     R1,[R2, #+0]
    269                      LCD_ILI9341_WR_DATA(0x00);
   \   0000019E   0x2100             MOVS     R1,#+0
   \   000001A0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000001A4   0x8011             STRH     R1,[R2, #+0]
    270                      LCD_ILI9341_WR_DATA(0xEF);
   \   000001A6   0x21EF             MOVS     R1,#+239
   \   000001A8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000001AC   0x8011             STRH     R1,[R2, #+0]
    271          
    272                      LCD_ILI9341_WR_CMD(0X2B);
   \   000001AE   0x212B             MOVS     R1,#+43
   \   000001B0   0xF05F 0x42C0      MOVS     R2,#+1610612736
   \   000001B4   0x8011             STRH     R1,[R2, #+0]
    273                      LCD_ILI9341_WR_DATA(0x00);
   \   000001B6   0x2100             MOVS     R1,#+0
   \   000001B8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000001BC   0x8011             STRH     R1,[R2, #+0]
    274                      LCD_ILI9341_WR_DATA(0x00);
   \   000001BE   0x2100             MOVS     R1,#+0
   \   000001C0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000001C4   0x8011             STRH     R1,[R2, #+0]
    275                      LCD_ILI9341_WR_DATA(0x01);
   \   000001C6   0x2101             MOVS     R1,#+1
   \   000001C8   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000001CC   0x8011             STRH     R1,[R2, #+0]
    276                      LCD_ILI9341_WR_DATA(0x3F);
   \   000001CE   0x213F             MOVS     R1,#+63
   \   000001D0   0xF05F 0x42D0      MOVS     R2,#+1744830464
   \   000001D4   0x8011             STRH     R1,[R2, #+0]
    277          
    278                      ili9341_h   = ILI9341_W;
   \   000001D6   0xF44F 0x71A0      MOV      R1,#+320
   \   000001DA   0x....             LDR.N    R2,??DataTable4_3
   \   000001DC   0x8011             STRH     R1,[R2, #+0]
    279                      ili9341_w   = ILI9341_H;
   \   000001DE   0x21F0             MOVS     R1,#+240
   \   000001E0   0x....             LDR.N    R2,??DataTable4_4
   \   000001E2   0x8011             STRH     R1,[R2, #+0]
    280                  }
    281                  break;
   \   000001E4   0xE7FF             B.N      ??LCD_ILI9341_dir_5
    282                  default:
    283                      //由于开头有校验，因而不会执行到这里
    284                      //LCD_ILI9341_dir(ILI9341_DIR_DEFAULT);
    285                      break;
    286          
    287              }
    288          
    289          }
   \                     ??LCD_ILI9341_dir_4: (+1)
   \                     ??LCD_ILI9341_dir_5: (+1)
   \   000001E6   0x4770             BX       LR               ;; return
    290          
    291          /*!
    292           *  @brief      设置ILI9341开窗
    293           *  @param      site        左上角坐标位置
    294           *  @param      size        开窗大小
    295           *  @since      v5.0
    296           */

   \                                 In section .text, align 2, keep-with-next
    297          void LCD_ILI9341_ptlon(Site_t site, Size_t size)
    298          {
   \                     LCD_ILI9341_ptlon: (+1)
   \   00000000   0xB403             PUSH     {R0,R1}
    299          
    300              LCD_ILI9341_WR_CMD(0X2A);
   \   00000002   0x202A             MOVS     R0,#+42
   \   00000004   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000008   0x8008             STRH     R0,[R1, #+0]
    301              LCD_ILI9341_WR_DATA(site.x >> 8); //start
   \   0000000A   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000000E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000010   0x0A00             LSRS     R0,R0,#+8
   \   00000012   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000016   0x8008             STRH     R0,[R1, #+0]
    302              LCD_ILI9341_WR_DATA(site.x & 0xFF);
   \   00000018   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000022   0x8008             STRH     R0,[R1, #+0]
    303              LCD_ILI9341_WR_DATA((site.x + size.W - 1) >> 8); //end
   \   00000024   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000028   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   0000002C   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000030   0x1E40             SUBS     R0,R0,#+1
   \   00000032   0x1200             ASRS     R0,R0,#+8
   \   00000034   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000038   0x8008             STRH     R0,[R1, #+0]
    304              LCD_ILI9341_WR_DATA((site.x  + size.W - 1) & 0xFF);
   \   0000003A   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000003E   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000042   0x1808             ADDS     R0,R1,R0
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000004C   0x8008             STRH     R0,[R1, #+0]
    305          
    306              LCD_ILI9341_WR_CMD(0X2B);
   \   0000004E   0x202B             MOVS     R0,#+43
   \   00000050   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \   00000054   0x8008             STRH     R0,[R1, #+0]
    307              LCD_ILI9341_WR_DATA(site.y >> 8); //start
   \   00000056   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000005A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005C   0x0A00             LSRS     R0,R0,#+8
   \   0000005E   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000062   0x8008             STRH     R0,[R1, #+0]
    308              LCD_ILI9341_WR_DATA(site.y & 0xFF);
   \   00000064   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   0000006E   0x8008             STRH     R0,[R1, #+0]
    309              LCD_ILI9341_WR_DATA((site.y + size.H - 1) >> 8); //end
   \   00000070   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000074   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   00000078   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000007C   0x1E40             SUBS     R0,R0,#+1
   \   0000007E   0x1200             ASRS     R0,R0,#+8
   \   00000080   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000084   0x8008             STRH     R0,[R1, #+0]
    310              LCD_ILI9341_WR_DATA((site.y + size.H - 1) & 0xFF);
   \   00000086   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000008A   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   0000008E   0x1808             ADDS     R0,R1,R0
   \   00000090   0x1E40             SUBS     R0,R0,#+1
   \   00000092   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000094   0xF05F 0x41D0      MOVS     R1,#+1744830464
   \   00000098   0x8008             STRH     R0,[R1, #+0]
    311          }
   \   0000009A   0xB002             ADD      SP,SP,#+8
   \   0000009C   0x4770             BX       LR               ;; return
    312          
    313          /*!
    314           *  @brief      获取 ILI9341 高度
    315           *  @return     ILI9341 高度
    316           *  @since      v5.0
    317           */

   \                                 In section .text, align 2, keep-with-next
    318          uint16 ILI9341_get_h()
    319          {
    320              return ili9341_h;
   \                     ILI9341_get_h: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_3
   \   00000002   0x8800             LDRH     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    321          }
    322          
    323          /*!
    324           *  @brief      获取 ILI9341 宽度
    325           *  @return     ILI9341 宽度
    326           *  @since      v5.0
    327           */

   \                                 In section .text, align 2, keep-with-next
    328          uint16 ILI9341_get_w()
    329          {
    330              return ili9341_w;
   \                     ILI9341_get_w: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_4
   \   00000002   0x8800             LDRH     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    331          }
    332          
    333          /*!
    334           *  @brief      获取 ILI9341 显示方向
    335           *  @return     ILI9341 方向
    336           *  @since      v5.0
    337           */

   \                                 In section .text, align 2, keep-with-next
    338          uint8 ILI9341_get_dir()
    339          {
    340              return ili9341_dir;
   \                     ILI9341_get_dir: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    341          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x43FE1034         DC32     0x43fe1034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     ili9341_dir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x43FE0820         DC32     0x43fe0820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ili9341_h

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     ili9341_w
    342          
    343          
    344          #endif //(USE_LCD == LCD_ILI9341)
    345          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ILI9341_get_dir
       0   ILI9341_get_h
       0   ILI9341_get_w
       0   LCD_ILI9341_dir
       8   LCD_ILI9341_init
         8   -> LCD_ILI9341_dir
         8   -> flexbus_8080_init
         8   -> gpio_init
         8   -> systick_delay_ms
       8   LCD_ILI9341_ptlon


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       6  ILI9341_get_dir
       6  ILI9341_get_h
       6  ILI9341_get_w
     488  LCD_ILI9341_dir
     780  LCD_ILI9341_init
     158  LCD_ILI9341_ptlon
       1  ili9341_dir
       2  ili9341_h
       2  ili9341_w

 
     5 bytes in section .data
 1 464 bytes in section .text
 
 1 464 bytes of CODE memory
     5 bytes of DATA memory

Errors: none
Warnings: 2
