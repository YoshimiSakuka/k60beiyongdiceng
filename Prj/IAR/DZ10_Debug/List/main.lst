###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        27/Jul/2016  15:24:23
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层 -只调LDC\App\main.c
#    Command line =  
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层 -只调LDC\App\main.c" -D
#        DEBUG -D ARM_MATH_CM4 -D MK60DZ10 -lCN
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\DZ10_Debug\List\" -lB
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\DZ10_Debug\List\" -o
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\DZ10_Debug\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR
#        for ARM\arm\INC\c\DLib_Config_Full.h" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\App\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\App\Inc\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Board\Inc\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Chip\inc\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Chip\inc\IAR\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Chip\inc\kinetis\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Lib\CMSIS\Inc\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Lib\FatFs\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Lib\USB\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Board\Accessories\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Board\Accessories\MPU6050\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Board\Accessories\IMU\" -I
#        "D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\..\..\Board\Accessories\Driver\" -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\DZ10_Debug\List\main.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层
#        -只调LDC\Prj\IAR\DZ10_Debug\Obj\main.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层 -只调LDC\App\main.c
      1          /*!
      2           *     COPYRIGHT NOTICE
      3           *     Copyright (c) 2013,山外科技
      4           *     All rights reserved.
      5           *     技术讨论：山外论坛 http://www.vcan123.com
      6           *
      7           *     除注明出处外，以下所有内容版权均属山外科技所有，未经允许，不得用于商业用途，
      8           *     修改内容时必须保留山外科技的版权声明。
      9           *
     10           * @file       main.c
     11           * @brief      山外K60 平台主程序
     12           * @author     山外科技
     13           * @version    v5.0
     14           * @date       2013-08-28
     15           */
     16          
     17          #include "common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x....             LDR.N    R2,??DataTable1_1  ;; 0xe000e100
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x0943             LSRS     R3,R0,#+5
   \   0000000E   0xF842 0x1023      STR      R1,[R2, R3, LSL #+2]
   \   00000012   0x4770             BX       LR               ;; return
     18          #include "include.h"
     19          
     20          
     21          void PORTE_IRQHandler(void);
     22          void PIT0_IRQHandler(void);

   \                                 In section .bss, align 1
     23          _Bool Roadflag;
   \                     Roadflag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     24          uint16 LDC_Read[4] = {0};
   \                     LDC_Read:
   \   00000000                      DS8 8

   \                                 In section .bss, align 2
     25          uint16 test,test1,test2;
   \                     test:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     test1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     test2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     26          int Speed_Cnt;
   \                     Speed_Cnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     27          int SpeedSingle;
   \                     SpeedSingle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     28          int motor;
   \                     motor:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     29          int MotorRun;
   \                     MotorRun:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     30          uint8 Pit0_cnt;
   \                     Pit0_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     31          int testcnt;
   \                     testcnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     32          uint8 SpeedFlag;
   \                     SpeedFlag:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
     33          void main(void)
     34          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     35            LDC1314_Init();
   \   00000002   0x.... 0x....      BL       LDC1314_Init
     36            Common_Key();
   \   00000006   0x.... 0x....      BL       Common_Key
     37            FiveDir_Key_Init();
   \   0000000A   0x.... 0x....      BL       FiveDir_Key_Init
     38            LCD_Init();
   \   0000000E   0x.... 0x....      BL       LCD_Init
     39            ftm_pwm_init(FTM0, FTM_CH4,10 * 1000, 0);        //电机驱动
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0xF242 0x7210      MOVW     R2,#+10000
   \   00000018   0x2104             MOVS     R1,#+4
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       ftm_pwm_init
     40            ftm_pwm_init(FTM0, FTM_CH5,10 * 1000, 0);
   \   00000020   0x2300             MOVS     R3,#+0
   \   00000022   0xF242 0x7210      MOVW     R2,#+10000
   \   00000026   0x2105             MOVS     R1,#+5
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       ftm_pwm_init
     41            ftm_pwm_init(FTM1, FTM_CH0,50, 816);              //舵机驱动
   \   0000002E   0xF44F 0x734C      MOV      R3,#+816
   \   00000032   0x2232             MOVS     R2,#+50
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       ftm_pwm_init
     42            ftm_quad_init(FTM2);                             //正交解码
   \   0000003C   0x2002             MOVS     R0,#+2
   \   0000003E   0x.... 0x....      BL       ftm_quad_init
     43            //pit_init(PIT0, 500000);                          //定时5ms后中断
     44            //set_vector_handler(PIT0_VECTORn,PIT0_IRQHandler);   
     45          //  while(!nrf_init())                  //初始化NRF24L01+ ,等待初始化成功为止
     46          //  {
     47          //      printf("\n  NRF与MCU连接失败，请重新检查接线。\n");
     48          //  }
     49          //   set_vector_handler(PORTE_VECTORn ,PORTE_IRQHandler);    			//设置 PORTE 的中断服务函数为 PORTE_VECTORn
     50          //   enable_irq(PORTE_IRQn);
     51            
     52           
     53            //ParmAdjust();
     54            
     55            LCD_P6x8Str(0,0,"LDC_Ch0  =");
   \   00000042   0x....             LDR.N    R2,??DataTable1_2
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       LCD_P6x8Str
     56            LCD_P6x8Str(0,1,"LDC_Ch1  =");
   \   0000004C   0x....             LDR.N    R2,??DataTable1_3
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       LCD_P6x8Str
     57            LCD_P6x8Str(0,2,"LDC_Ch2  =");
   \   00000056   0x....             LDR.N    R2,??DataTable1_4
   \   00000058   0x2102             MOVS     R1,#+2
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       LCD_P6x8Str
     58            LCD_P6x8Str(0,3,"LDC_Ch3  =");
   \   00000060   0x....             LDR.N    R2,??DataTable1_5
   \   00000062   0x2103             MOVS     R1,#+3
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       LCD_P6x8Str
     59            LCD_P6x8Str(0,4,"TimeCost =");
   \   0000006A   0x....             LDR.N    R2,??DataTable1_6
   \   0000006C   0x2104             MOVS     R1,#+4
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       LCD_P6x8Str
     60            LCD_P6x8Str(0,5,"Distance =");
   \   00000074   0x....             LDR.N    R2,??DataTable1_7
   \   00000076   0x2105             MOVS     R1,#+5
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      BL       LCD_P6x8Str
     61            
     62          
     63            enable_irq(PIT0_IRQn);                         // 使能PIT中断
   \   0000007E   0x2044             MOVS     R0,#+68
   \   00000080   0x.... 0x....      BL       NVIC_EnableIRQ
     64            while(1)
     65            {
     66          
     67                sprintf(str,"%5d",(int)LDC_Read[0]);
   \                     ??main_0: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable1_8
   \   00000086   0x8802             LDRH     R2,[R0, #+0]
   \   00000088   0x....             ADR.N    R1,??DataTable1  ;; "%5d"
   \   0000008A   0x....             LDR.N    R0,??DataTable1_9
   \   0000008C   0x.... 0x....      BL       sprintf
     68                LCD_P6x8Str(80,0,str);
   \   00000090   0x....             LDR.N    R2,??DataTable1_9
   \   00000092   0x2100             MOVS     R1,#+0
   \   00000094   0x2050             MOVS     R0,#+80
   \   00000096   0x.... 0x....      BL       LCD_P6x8Str
     69                sprintf(str,"%5d",(int)LDC_Read[1]);
   \   0000009A   0x....             LDR.N    R0,??DataTable1_8
   \   0000009C   0x8842             LDRH     R2,[R0, #+2]
   \   0000009E   0x....             ADR.N    R1,??DataTable1  ;; "%5d"
   \   000000A0   0x....             LDR.N    R0,??DataTable1_9
   \   000000A2   0x.... 0x....      BL       sprintf
     70                LCD_P6x8Str(80,1,str);
   \   000000A6   0x....             LDR.N    R2,??DataTable1_9
   \   000000A8   0x2101             MOVS     R1,#+1
   \   000000AA   0x2050             MOVS     R0,#+80
   \   000000AC   0x.... 0x....      BL       LCD_P6x8Str
     71                sprintf(str,"%5d",(int)LDC_Read[2]);
   \   000000B0   0x....             LDR.N    R0,??DataTable1_8
   \   000000B2   0x8882             LDRH     R2,[R0, #+4]
   \   000000B4   0x....             ADR.N    R1,??DataTable1  ;; "%5d"
   \   000000B6   0x....             LDR.N    R0,??DataTable1_9
   \   000000B8   0x.... 0x....      BL       sprintf
     72                LCD_P6x8Str(80,2,str);
   \   000000BC   0x....             LDR.N    R2,??DataTable1_9
   \   000000BE   0x2102             MOVS     R1,#+2
   \   000000C0   0x2050             MOVS     R0,#+80
   \   000000C2   0x.... 0x....      BL       LCD_P6x8Str
     73                sprintf(str,"%5d",(int)LDC_Read[3]);
   \   000000C6   0x....             LDR.N    R0,??DataTable1_8
   \   000000C8   0x88C2             LDRH     R2,[R0, #+6]
   \   000000CA   0x....             ADR.N    R1,??DataTable1  ;; "%5d"
   \   000000CC   0x....             LDR.N    R0,??DataTable1_9
   \   000000CE   0x.... 0x....      BL       sprintf
     74                LCD_P6x8Str(80,3,str);      
   \   000000D2   0x....             LDR.N    R2,??DataTable1_9
   \   000000D4   0x2103             MOVS     R1,#+3
   \   000000D6   0x2050             MOVS     R0,#+80
   \   000000D8   0x.... 0x....      BL       LCD_P6x8Str
     75                DELAY_MS(200);
   \   000000DC   0x20C8             MOVS     R0,#+200
   \   000000DE   0x.... 0x....      BL       systick_delay_ms
   \   000000E2   0xE7CF             B.N      ??main_0
     76                
     77                
     78          
     79              }
     80              
     81              
     82              
     83              
     84             
     85            
     86          
     87             
     88          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x25 0x35          DC8      "%5d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     LDC_Read

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     `str`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x4C 0x44          DC8 "LDC_Ch0  ="
   \              0x43 0x5F    
   \              0x43 0x68    
   \              0x30 0x20    
   \              0x20 0x3D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4C 0x44          DC8 "LDC_Ch1  ="
   \              0x43 0x5F    
   \              0x43 0x68    
   \              0x31 0x20    
   \              0x20 0x3D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4C 0x44          DC8 "LDC_Ch2  ="
   \              0x43 0x5F    
   \              0x43 0x68    
   \              0x32 0x20    
   \              0x20 0x3D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x4C 0x44          DC8 "LDC_Ch3  ="
   \              0x43 0x5F    
   \              0x43 0x68    
   \              0x33 0x20    
   \              0x20 0x3D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x54 0x69          DC8 "TimeCost ="
   \              0x6D 0x65    
   \              0x43 0x6F    
   \              0x73 0x74    
   \              0x20 0x3D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x44 0x69          DC8 "Distance ="
   \              0x73 0x74    
   \              0x61 0x6E    
   \              0x63 0x65    
   \              0x20 0x3D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x35          DC8 "%5d"
   \              0x64 0x00    
     89          
     90          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   NVIC_EnableIRQ
       8   main
         8   -> Common_Key
         8   -> FiveDir_Key_Init
         8   -> LCD_Init
         8   -> LCD_P6x8Str
         8   -> LDC1314_Init
         8   -> NVIC_EnableIRQ
         8   -> ftm_pwm_init
         8   -> ftm_quad_init
         8   -> sprintf
         8   -> systick_delay_ms


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      12  ?_0
      12  ?_1
      12  ?_2
      12  ?_3
      12  ?_4
      12  ?_5
       4  ?_6
       8  LDC_Read
       4  MotorRun
      20  NVIC_EnableIRQ
       1  Pit0_cnt
       1  Roadflag
       1  SpeedFlag
       4  SpeedSingle
       4  Speed_Cnt
     228  main
       4  motor
       2  test
       2  test1
       2  test2
       4  testcnt

 
  37 bytes in section .bss
  76 bytes in section .rodata
 288 bytes in section .text
 
 288 bytes of CODE  memory
  76 bytes of CONST memory
  37 bytes of DATA  memory

Errors: none
Warnings: 4
