###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        27/Jul/2016  11:28:32
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\Study\2016电子设计大赛\Ti\电赛备用底层\Lib\USB\USB.c
#    Command line =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Lib\USB\USB.c -D DEBUG -D
#        ARM_MATH_CM4 -D MK60DZ10 -lCN
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -lB
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\ -o
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR for
#        ARM\arm\INC\c\DLib_Config_Full.h" -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\App\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\IAR\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Chip\inc\kinetis\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\CMSIS\Inc\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\FatFs\
#        -I D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Lib\USB\ -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\MPU6050\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\IMU\
#        -I
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\..\..\Board\Accessories\Driver\
#        -On
#    List file    =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\List\USB.lst
#    Object file  =  
#        D:\Study\2016电子设计大赛\Ti\电赛备用底层\Prj\IAR\DZ10_Debug\Obj\USB.o
#
###############################################################################

D:\Study\2016电子设计大赛\Ti\电赛备用底层\Lib\USB\USB.c
      1          #include "USB.h"
      2          #include "USB_Desc.h"

   \                                 In section .rodata, align 4
   \   __absolute USB_DEVICE_DESCRIPTOR const Device_Descriptor
   \                     Device_Descriptor:
   \   00000000   0x12 0x01          DC8 18, 1
   \   00000002   0x0200             DC16 512
   \   00000004   0x02 0x02          DC8 2, 2, 0, 64
   \              0x00 0x40    
   \   00000008   0x15A2 0xA50F      DC16 5538, 42255, 0
   \              0x0000       
   \   0000000E   0x01 0x02          DC8 1, 2, 3, 1, 0, 0
   \              0x03 0x01    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const String_Descriptor0[4]
   \                     String_Descriptor0:
   \   00000000   0x04 0x03          DC8 4, 3, 9, 4
   \              0x09 0x04    

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const String_Descriptor1[18]
   \                     String_Descriptor1:
   \   00000000   0x12 0x03          DC8 18, 3, 119, 0, 105, 0, 108, 0, 100, 0, 102, 0, 105, 0, 114, 0, 101
   \              0x77 0x00    
   \              0x69 0x00    
   \              0x6C 0x00    
   \              0x64 0x00    
   \              0x66 0x00    
   \              0x69 0x00    
   \              0x72 0x00    
   \              0x65         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const String_Descriptor2[18]
   \                     String_Descriptor2:
   \   00000000   0x12 0x03          DC8 18, 3, 85, 0, 83, 0, 66, 0, 45, 0, 85, 0, 65, 0, 82, 0, 84, 0, 0, 0
   \              0x55 0x00    
   \              0x53 0x00    
   \              0x42 0x00    
   \              0x2D 0x00    
   \              0x55 0x00    
   \              0x41 0x00    
   \              0x52 0x00    
   \              0x54 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const String_Descriptor3[18]
   \                     String_Descriptor3:
   \   00000000   0x12 0x03          DC8 18, 3, 84, 0, 69, 0, 83, 0, 84, 0, 95, 0, 49, 0, 46, 0, 49, 0, 0, 0
   \              0x54 0x00    
   \              0x45 0x00    
   \              0x53 0x00    
   \              0x54 0x00    
   \              0x5F 0x00    
   \              0x31 0x00    
   \              0x2E 0x00    
   \              0x31 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const Configuration_Descriptor[67]
   \                     Configuration_Descriptor:
   \   00000000   0x09 0x02          DC8 9, 2, 67, 0, 2, 1, 0, 192, 50, 9, 4, 0, 0, 1, 2, 2, 1, 1, 5, 36, 0
   \              0x43 0x00    
   \              0x02 0x01    
   \              0x00 0xC0    
   \              0x32 0x09    
   \              0x04 0x00    
   \              0x00 0x01    
   \              0x02 0x02    
   \              0x01 0x01    
   \              0x05 0x24    
   \              0x00         
   \   00000015   0x10 0x01          DC8 16, 1, 5, 36, 1, 0, 1, 4, 36, 2, 0, 5, 36, 6, 0, 1, 7, 5, 129, 3
   \              0x05 0x24    
   \              0x01 0x00    
   \              0x01 0x04    
   \              0x24 0x02    
   \              0x00 0x05    
   \              0x24 0x06    
   \              0x00 0x01    
   \              0x07 0x05    
   \              0x81 0x03    
   \   00000029   0x40 0x00          DC8 64, 0, 2, 9, 4, 1, 0, 2, 10, 0, 0, 1, 7, 5, 130, 2, 64, 0, 0, 7, 5
   \              0x02 0x09    
   \              0x04 0x01    
   \              0x00 0x02    
   \              0x0A 0x00    
   \              0x00 0x01    
   \              0x07 0x05    
   \              0x82 0x02    
   \              0x40 0x00    
   \              0x00 0x07    
   \              0x05         
   \   0000003E   0x03 0x02          DC8 3, 2, 64, 0, 0, 0
   \              0x40 0x00    
   \              0x00 0x00    
      3          
      4          
      5          /* 数组 和 全局缓冲区 */
      6          #pragma data_alignment=512      //必须 512 字节对齐
      7          

   \                                 In section .bss, align 512
      8          tBDT tBDTtable[16];
   \                     tBDTtable:
   \   00000000                      DS8 128
      9          

   \                                 In section .bss, align 4
     10          uint8 gu8EP0_OUT_ODD_Buffer[EP0_SIZE];
   \                     gu8EP0_OUT_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     11          uint8 gu8EP0_OUT_EVEN_Buffer[EP0_SIZE];
   \                     gu8EP0_OUT_EVEN_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     12          uint8 gu8EP0_IN_ODD_Buffer[EP0_SIZE];
   \                     gu8EP0_IN_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     13          uint8 gu8EP0_IN_EVEN_Buffer[EP0_SIZE];
   \                     gu8EP0_IN_EVEN_Buffer:
   \   00000000                      DS8 64
     14          

   \                                 In section .bss, align 4
     15          uint8 gu8EP1_OUT_ODD_Buffer[EP1_SIZE];
   \                     gu8EP1_OUT_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     16          uint8 gu8EP1_OUT_EVEN_Buffer[EP1_SIZE];
   \                     gu8EP1_OUT_EVEN_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     17          uint8 gu8EP1_IN_ODD_Buffer[EP1_SIZE];
   \                     gu8EP1_IN_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     18          uint8 gu8EP1_IN_EVEN_Buffer[EP1_SIZE];
   \                     gu8EP1_IN_EVEN_Buffer:
   \   00000000                      DS8 64
     19          

   \                                 In section .bss, align 4
     20          uint8 gu8EP2_OUT_ODD_Buffer[EP2_SIZE];
   \                     gu8EP2_OUT_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     21          uint8 gu8EP2_OUT_EVEN_Buffer[EP2_SIZE];
   \                     gu8EP2_OUT_EVEN_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     22          uint8 gu8EP2_IN_ODD_Buffer[EP2_SIZE];
   \                     gu8EP2_IN_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     23          uint8 gu8EP2_IN_EVEN_Buffer[EP2_SIZE];
   \                     gu8EP2_IN_EVEN_Buffer:
   \   00000000                      DS8 64
     24          

   \                                 In section .bss, align 4
     25          uint8 gu8EP3_OUT_ODD_Buffer[EP3_SIZE];
   \                     gu8EP3_OUT_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     26          uint8 gu8EP3_OUT_EVEN_Buffer[EP3_SIZE];
   \                     gu8EP3_OUT_EVEN_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     27          uint8 gu8EP3_IN_ODD_Buffer[EP3_SIZE];
   \                     gu8EP3_IN_ODD_Buffer:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     28          uint8 gu8EP3_IN_EVEN_Buffer[EP3_SIZE];
   \                     gu8EP3_IN_EVEN_Buffer:
   \   00000000                      DS8 64
     29          
     30          

   \                                 In section .data, align 4
     31          uint8 *BufferPointer[] =
   \                     BufferPointer:
   \   00000000   0x........         DC32 gu8EP0_OUT_ODD_Buffer, gu8EP0_OUT_EVEN_Buffer
   \              0x........   
   \   00000008   0x........         DC32 gu8EP0_IN_ODD_Buffer, gu8EP0_IN_EVEN_Buffer, gu8EP1_OUT_ODD_Buffer
   \              0x........   
   \              0x........   
   \   00000014   0x........         DC32 gu8EP1_OUT_EVEN_Buffer, gu8EP1_IN_ODD_Buffer
   \              0x........   
   \   0000001C   0x........         DC32 gu8EP1_IN_EVEN_Buffer, gu8EP2_OUT_ODD_Buffer
   \              0x........   
   \   00000024   0x........         DC32 gu8EP2_OUT_EVEN_Buffer, gu8EP2_IN_ODD_Buffer
   \              0x........   
   \   0000002C   0x........         DC32 gu8EP2_IN_EVEN_Buffer, gu8EP3_OUT_ODD_Buffer
   \              0x........   
   \   00000034   0x........         DC32 gu8EP3_OUT_EVEN_Buffer, gu8EP3_IN_ODD_Buffer
   \              0x........   
   \   0000003C   0x........         DC32 gu8EP3_IN_EVEN_Buffer
     32          {
     33              gu8EP0_OUT_ODD_Buffer,
     34              gu8EP0_OUT_EVEN_Buffer,
     35              gu8EP0_IN_ODD_Buffer,
     36              gu8EP0_IN_EVEN_Buffer,
     37              gu8EP1_OUT_ODD_Buffer,
     38              gu8EP1_OUT_EVEN_Buffer,
     39              gu8EP1_IN_ODD_Buffer,
     40              gu8EP1_IN_EVEN_Buffer,
     41              gu8EP2_OUT_ODD_Buffer,
     42              gu8EP2_OUT_EVEN_Buffer,
     43              gu8EP2_IN_ODD_Buffer,
     44              gu8EP2_IN_EVEN_Buffer,
     45              gu8EP3_OUT_ODD_Buffer,
     46              gu8EP3_OUT_EVEN_Buffer,
     47              gu8EP3_IN_ODD_Buffer,
     48              gu8EP3_IN_EVEN_Buffer
     49          };
     50          
     51          

   \                                 In section .rodata, align 4
     52          const uint8 cEP_Size[] =
   \                     cEP_Size:
   \   00000000   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
     53          {
     54              EP0_SIZE,
     55              EP0_SIZE,
     56              EP0_SIZE,
     57              EP0_SIZE,
     58              EP1_SIZE,
     59              EP1_SIZE,
     60              EP1_SIZE,
     61              EP1_SIZE,
     62              EP2_SIZE,
     63              EP2_SIZE,
     64              EP2_SIZE,
     65              EP2_SIZE,
     66              EP3_SIZE,
     67              EP3_SIZE,
     68              EP3_SIZE,
     69              EP3_SIZE
     70          };
     71          

   \                                 In section .data, align 4
     72          const uint8 *String_Table[4] =
   \                     String_Table:
   \   00000000   0x........         DC32 String_Descriptor0, String_Descriptor1, String_Descriptor2
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 String_Descriptor3
     73          {
     74              String_Descriptor0,
     75              String_Descriptor1,
     76              String_Descriptor2,
     77              String_Descriptor3
     78          };
     79          
     80          
     81          /* USB 中断服务函数的全局变量 */

   \                                 In section .bss, align 1
     82          uint8   gu8USB_Flags;           //USB 的 各端点 接收到数据 的 标志位
   \                     gu8USB_Flags:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     83          uint8   gu8USBClearFlags;
   \                     gu8USBClearFlags:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     84          uint8   *pu8IN_DataPointer;     //指向 USB输入数据缓冲区的 指针
   \                     pu8IN_DataPointer:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     85          uint8   gu8IN_Counter;
   \                     gu8IN_Counter:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     86          uint8   gu8USB_Toogle_flags;
   \                     gu8USB_Toogle_flags:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     87          uint8   gu8Dummy;
   \                     gu8Dummy:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     88          uint16  gu8Status;
   \                     gu8Status:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     89          uint8   gu8Interface;
   \                     gu8Interface:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     90          uint8   gu8HALT_EP;
   \                     gu8HALT_EP:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     91          uint8   gu8USB_State;
   \                     gu8USB_State:
   \   00000000                      DS8 1
     92          

   \                                 In section .bss, align 4
     93          tUSB_Setup *Setup_Pkt;          //USB setup 数据包指针
   \                     Setup_Pkt:
   \   00000000                      DS8 4
     94          
     95          
     96          /*!
     97           *  @brief      端点IN传送(IN是相对主机而言)
     98           *  @since      v5.0
     99           */

   \                                 In section .text, align 2, keep-with-next
    100          void EP_IN_Transfer(uint8 u8EP, uint8 *pu8DataPointer, uint8 u8DataSize)
    101          {
   \                     EP_IN_Transfer: (+1)
   \   00000000   0xB4F0             PUSH     {R4-R7}
    102              uint8 *pu8EPBuffer;
    103              uint8 u8EPSize;
    104              uint16 u16Lenght = 0;
   \   00000002   0x2500             MOVS     R5,#+0
    105              uint8 u8EndPointFlag;
    106          
    107              /* Adjust the buffer location */
    108              u8EndPointFlag = u8EP;
   \   00000004   0x0006             MOVS     R6,R0
    109              if(u8EP)
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD000             BEQ.N    ??EP_IN_Transfer_0
    110              {
    111                  u8EP = (uint8)(u8EP << 2);
   \   0000000C   0x0080             LSLS     R0,R0,#+2
    112              }
    113              u8EP += 2;
   \                     ??EP_IN_Transfer_0: (+1)
   \   0000000E   0x1C80             ADDS     R0,R0,#+2
    114          
    115              /* Assign the proper EP buffer */
    116              pu8EPBuffer = BufferPointer[u8EP];
   \   00000010   0x.... 0x....      LDR.W    R7,??DataTable13
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0xF857 0x7020      LDR      R7,[R7, R0, LSL #+2]
   \   0000001A   0x003B             MOVS     R3,R7
    117          
    118              /* Check if is a pending transfer */
    119              if(FLAG_CHK(fIN, gu8USBClearFlags))
   \   0000001C   0x.... 0x....      LDR.W    R7,??DataTable13_1
   \   00000020   0x783F             LDRB     R7,[R7, #+0]
   \   00000022   0x07FF             LSLS     R7,R7,#+31
   \   00000024   0xD524             BPL.N    ??EP_IN_Transfer_1
    120              {
    121                  pu8IN_DataPointer = pu8DataPointer;
   \   00000026   0x.... 0x....      LDR.W    R7,??DataTable13_2
   \   0000002A   0x6039             STR      R1,[R7, #+0]
    122                  gu8IN_Counter = u8DataSize;
   \   0000002C   0x.... 0x....      LDR.W    R7,??DataTable13_3
   \   00000030   0x703A             STRB     R2,[R7, #+0]
    123          
    124                  u16Lenght = (Setup_Pkt->wLength_h << 8) + Setup_Pkt->wLength_l ;
   \   00000032   0x.... 0x....      LDR.W    R7,??DataTable13_4
   \   00000036   0x683F             LDR      R7,[R7, #+0]
   \   00000038   0x79FF             LDRB     R7,[R7, #+7]
   \   0000003A   0x023F             LSLS     R7,R7,#+8
   \   0000003C   0x.... 0x....      LDR.W    R12,??DataTable13_4
   \   00000040   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   00000044   0xF89C 0xC006      LDRB     R12,[R12, #+6]
   \   00000048   0xEB17 0x070C      ADDS     R7,R7,R12
   \   0000004C   0x003D             MOVS     R5,R7
    125                  if((u16Lenght < u8DataSize) && (u8EP == 2))
   \   0000004E   0x0017             MOVS     R7,R2
   \   00000050   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000052   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000054   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000056   0x42BD             CMP      R5,R7
   \   00000058   0xD20A             BCS.N    ??EP_IN_Transfer_1
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x2802             CMP      R0,#+2
   \   0000005E   0xD107             BNE.N    ??EP_IN_Transfer_1
    126                  {
    127                      gu8IN_Counter = Setup_Pkt->wLength_l;
   \   00000060   0x.... 0x....      LDR.W    R7,??DataTable13_4
   \   00000064   0x683F             LDR      R7,[R7, #+0]
   \   00000066   0x79BF             LDRB     R7,[R7, #+6]
   \   00000068   0x.... 0x....      LDR.W    R12,??DataTable13_3
   \   0000006C   0xF88C 0x7000      STRB     R7,[R12, #+0]
    128                  }
    129              }
    130          
    131              /* Check transfer Size */
    132              if(gu8IN_Counter > cEP_Size[u8EP])
   \                     ??EP_IN_Transfer_1: (+1)
   \   00000070   0x.... 0x....      LDR.W    R7,??DataTable13_5
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x5DC7             LDRB     R7,[R0, R7]
   \   00000078   0x.... 0x....      LDR.W    R12,??DataTable13_3
   \   0000007C   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000080   0x4567             CMP      R7,R12
   \   00000082   0xD21C             BCS.N    ??EP_IN_Transfer_2
    133              {
    134                  u8EPSize = cEP_Size[u8EP];
   \   00000084   0x.... 0x....      LDR.W    R7,??DataTable13_5
   \   00000088   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008A   0x5DC7             LDRB     R7,[R0, R7]
   \   0000008C   0x003C             MOVS     R4,R7
    135                  gu8IN_Counter -= cEP_Size[u8EP];
   \   0000008E   0x.... 0x....      LDR.W    R7,??DataTable13_3
   \   00000092   0x783F             LDRB     R7,[R7, #+0]
   \   00000094   0x.... 0x....      LDR.W    R12,??DataTable13_5
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0xF810 0xC00C      LDRB     R12,[R0, R12]
   \   0000009E   0xEBB7 0x070C      SUBS     R7,R7,R12
   \   000000A2   0x.... 0x....      LDR.W    R12,??DataTable13_3
   \   000000A6   0xF88C 0x7000      STRB     R7,[R12, #+0]
    136                  FLAG_CLR(fIN, gu8USBClearFlags);
   \   000000AA   0x.... 0x....      LDR.W    R7,??DataTable13_1
   \   000000AE   0x783F             LDRB     R7,[R7, #+0]
   \   000000B0   0xF017 0x07FE      ANDS     R7,R7,#0xFE
   \   000000B4   0x.... 0x....      LDR.W    R12,??DataTable13_1
   \   000000B8   0xF88C 0x7000      STRB     R7,[R12, #+0]
   \   000000BC   0xE011             B.N      ??EP_IN_Transfer_3
    137              }
    138              else
    139              {
    140                  u8EPSize = gu8IN_Counter;
   \                     ??EP_IN_Transfer_2: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R7,??DataTable13_3
   \   000000C2   0x783F             LDRB     R7,[R7, #+0]
   \   000000C4   0x003C             MOVS     R4,R7
    141                  gu8IN_Counter = 0;
   \   000000C6   0x2700             MOVS     R7,#+0
   \   000000C8   0x.... 0x....      LDR.W    R12,??DataTable13_3
   \   000000CC   0xF88C 0x7000      STRB     R7,[R12, #+0]
    142                  FLAG_SET(fIN, gu8USBClearFlags);
   \   000000D0   0x.... 0x....      LDR.W    R7,??DataTable13_1
   \   000000D4   0x783F             LDRB     R7,[R7, #+0]
   \   000000D6   0xF057 0x0701      ORRS     R7,R7,#0x1
   \   000000DA   0x.... 0x....      LDR.W    R12,??DataTable13_1
   \   000000DE   0xF88C 0x7000      STRB     R7,[R12, #+0]
    143              }
    144          
    145              /* Copy User buffer to EP buffer */
    146              tBDTtable[u8EP].Cnt = (u8EPSize);
   \                     ??EP_IN_Transfer_3: (+1)
   \   000000E2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E4   0x.... 0x....      LDR.W    R7,??DataTable13_6
   \   000000E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EA   0xEB17 0x07C0      ADDS     R7,R7,R0, LSL #+3
   \   000000EE   0x807C             STRH     R4,[R7, #+2]
    147          
    148              while(u8EPSize--)
   \                     ??EP_IN_Transfer_4: (+1)
   \   000000F0   0x0027             MOVS     R7,R4
   \   000000F2   0x1E7C             SUBS     R4,R7,#+1
   \   000000F4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000F6   0x2F00             CMP      R7,#+0
   \   000000F8   0xD00E             BEQ.N    ??EP_IN_Transfer_5
    149                  *pu8EPBuffer++ = *pu8IN_DataPointer++;
   \   000000FA   0x.... 0x....      LDR.W    R7,??DataTable13_2
   \   000000FE   0x683F             LDR      R7,[R7, #+0]
   \   00000100   0x783F             LDRB     R7,[R7, #+0]
   \   00000102   0x701F             STRB     R7,[R3, #+0]
   \   00000104   0x.... 0x....      LDR.W    R7,??DataTable13_2
   \   00000108   0x683F             LDR      R7,[R7, #+0]
   \   0000010A   0x1C7F             ADDS     R7,R7,#+1
   \   0000010C   0x.... 0x....      LDR.W    R12,??DataTable13_2
   \   00000110   0xF8CC 0x7000      STR      R7,[R12, #+0]
   \   00000114   0x1C5B             ADDS     R3,R3,#+1
   \   00000116   0xE7EB             B.N      ??EP_IN_Transfer_4
    150          
    151          
    152              /* USB Flags Handling */
    153              if(FLAG_CHK(u8EndPointFlag, gu8USB_Toogle_flags))
   \                     ??EP_IN_Transfer_5: (+1)
   \   00000118   0x.... 0x....      LDR.W    R7,??DataTable13_7
   \   0000011C   0x783F             LDRB     R7,[R7, #+0]
   \   0000011E   0xF05F 0x0C01      MOVS     R12,#+1
   \   00000122   0xFA1C 0xFC06      LSLS     R12,R12,R6
   \   00000126   0xEA17 0x0F0C      TST      R7,R12
   \   0000012A   0xD013             BEQ.N    ??EP_IN_Transfer_6
    154              {
    155                  tBDTtable[u8EP].Stat._byte = kUDATA0;
   \   0000012C   0x2788             MOVS     R7,#+136
   \   0000012E   0x.... 0x....      LDR.W    R12,??DataTable13_6
   \   00000132   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000134   0xF80C 0x7030      STRB     R7,[R12, R0, LSL #+3]
    156                  FLAG_CLR(u8EndPointFlag, gu8USB_Toogle_flags);
   \   00000138   0x.... 0x....      LDR.W    R7,??DataTable13_7
   \   0000013C   0x783F             LDRB     R7,[R7, #+0]
   \   0000013E   0xF05F 0x0C01      MOVS     R12,#+1
   \   00000142   0xFA1C 0xFC06      LSLS     R12,R12,R6
   \   00000146   0xEA37 0x070C      BICS     R7,R7,R12
   \   0000014A   0x.... 0x....      LDR.W    R12,??DataTable13_7
   \   0000014E   0xF88C 0x7000      STRB     R7,[R12, #+0]
   \   00000152   0xE012             B.N      ??EP_IN_Transfer_7
    157              }
    158              else
    159              {
    160                  tBDTtable[u8EP].Stat._byte = kUDATA1;
   \                     ??EP_IN_Transfer_6: (+1)
   \   00000154   0x27C8             MOVS     R7,#+200
   \   00000156   0x.... 0x....      LDR.W    R12,??DataTable13_6
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0xF80C 0x7030      STRB     R7,[R12, R0, LSL #+3]
    161                  FLAG_SET(u8EndPointFlag, gu8USB_Toogle_flags);
   \   00000160   0x.... 0x....      LDR.W    R7,??DataTable13_7
   \   00000164   0x783F             LDRB     R7,[R7, #+0]
   \   00000166   0xF05F 0x0C01      MOVS     R12,#+1
   \   0000016A   0xFA1C 0xFC06      LSLS     R12,R12,R6
   \   0000016E   0xEA5C 0x0707      ORRS     R7,R12,R7
   \   00000172   0x.... 0x....      LDR.W    R12,??DataTable13_7
   \   00000176   0xF88C 0x7000      STRB     R7,[R12, #+0]
    162              }
    163          
    164          }
   \                     ??EP_IN_Transfer_7: (+1)
   \   0000017A   0xBCF0             POP      {R4-R7}
   \   0000017C   0x4770             BX       LR               ;; return
    165          
    166          /*!
    167           *  @brief      端点OUT传送(OUT是相对主机而言)
    168           *  @since      v5.0
    169           */

   \                                 In section .text, align 2, keep-with-next
    170          uint8 EP_OUT_Transfer(uint8 u8EP, uint8 *pu8DataPointer)
    171          {
   \                     EP_OUT_Transfer: (+1)
   \   00000000   0xB410             PUSH     {R4}
    172              uint8 *pu8EPBuffer;
    173              uint8 u8EPSize;
    174          
    175          
    176              /* Adjust the buffer location */
    177              //u8EP++;
    178          
    179              /* Assign the proper EP buffer */
    180              pu8EPBuffer = BufferPointer[u8EP];
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable13
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0xF854 0x4020      LDR      R4,[R4, R0, LSL #+2]
   \   0000000C   0x0022             MOVS     R2,R4
    181          
    182              /* Copy User buffer to EP buffer */
    183              u8EPSize = tBDTtable[u8EP].Cnt;
   \   0000000E   0x.... 0x....      LDR.W    R4,??DataTable13_6
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0xEB14 0x04C0      ADDS     R4,R4,R0, LSL #+3
   \   00000018   0x8864             LDRH     R4,[R4, #+2]
   \   0000001A   0x0023             MOVS     R3,R4
    184              u8EP = u8EPSize;
   \   0000001C   0x0018             MOVS     R0,R3
    185          
    186              while(u8EPSize--)
   \                     ??EP_OUT_Transfer_0: (+1)
   \   0000001E   0x001C             MOVS     R4,R3
   \   00000020   0x1E63             SUBS     R3,R4,#+1
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x2C00             CMP      R4,#+0
   \   00000026   0xD004             BEQ.N    ??EP_OUT_Transfer_1
    187                  *pu8DataPointer++ = *pu8EPBuffer++;
   \   00000028   0x7814             LDRB     R4,[R2, #+0]
   \   0000002A   0x700C             STRB     R4,[R1, #+0]
   \   0000002C   0x1C52             ADDS     R2,R2,#+1
   \   0000002E   0x1C49             ADDS     R1,R1,#+1
   \   00000030   0xE7F5             B.N      ??EP_OUT_Transfer_0
    188              return(u8EP);
   \                     ??EP_OUT_Transfer_1: (+1)
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0xBC10             POP      {R4}
   \   00000036   0x4770             BX       LR               ;; return
    189          }
    190          
    191          /*!
    192           *  @brief      端点OUT长度检测(OUT是相对主机而言)
    193           *  @since      v5.0
    194           */

   \                                 In section .text, align 2, keep-with-next
    195          uint16 USB_EP_OUT_SizeCheck(uint8 u8EP)
    196          {
   \                     USB_EP_OUT_SizeCheck: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    197              uint8 u8EPSize;
    198              /* Read Buffer Size */
    199              u8EPSize = tBDTtable[u8EP<<2].Cnt;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x008B             LSLS     R3,R1,#+2
   \   0000000A   0xEB12 0x02C3      ADDS     R2,R2,R3, LSL #+3
   \   0000000E   0x8852             LDRH     R2,[R2, #+2]
   \   00000010   0x0010             MOVS     R0,R2
    200              return(u8EPSize & 0x03FF);
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000016   0x4770             BX       LR               ;; return
    201          }
    202          
    203          /*!
    204           *  @brief      设置 USB 端点
    205           *  @since      v5.0
    206           */

   \                                 In section .text, align 2, keep-with-next
    207          void USB_Set_Interface(void)
    208          {
    209              /* EndPoint Register settings */
    210              USB0_ENDPT1 = EP1_VALUE | USB_ENDPT_EPHSHK_MASK;
   \                     USB_Set_Interface: (+1)
   \   00000000   0x2005             MOVS     R0,#+5
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable13_8  ;; 0x400720c4
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    211              USB0_ENDPT2 = EP2_VALUE | USB_ENDPT_EPHSHK_MASK;
   \   00000008   0x2005             MOVS     R0,#+5
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable13_9  ;; 0x400720c8
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    212              USB0_ENDPT3 = EP3_VALUE | USB_ENDPT_EPHSHK_MASK;
   \   00000010   0x2009             MOVS     R0,#+9
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable13_10  ;; 0x400720cc
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    213              //USB0_ENDPT4 = EP4_VALUE | USB_ENDPT_EPHSHK_MASK;
    214              //USB0_ENDPT5 = EP5_VALUE | USB_ENDPT_EPHSHK_MASK;
    215              //USB0_ENDPT6 = EP6_VALUE | USB_ENDPT_EPHSHK_MASK;
    216          
    217          
    218              /* EndPoint 1 BDT Settings*/
    219              tBDTtable[bEP1IN_ODD].Stat._byte = kMCU;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000001E   0xF881 0x0030      STRB     R0,[R1, #+48]
    220              tBDTtable[bEP1IN_ODD].Cnt = 0x00;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000028   0x8648             STRH     R0,[R1, #+50]
    221              tBDTtable[bEP1IN_ODD].Addr = (uint32)gu8EP1_IN_ODD_Buffer;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000032   0x6348             STR      R0,[R1, #+52]
    222          
    223              /* EndPoint 2 BDT Settings*/
    224              tBDTtable[bEP2IN_ODD].Stat._byte = kMCU;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000003A   0xF881 0x0050      STRB     R0,[R1, #+80]
    225              tBDTtable[bEP2IN_ODD].Cnt = 0x00;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000044   0xF8A1 0x0052      STRH     R0,[R1, #+82]
    226              tBDTtable[bEP2IN_ODD].Addr = (uint32)gu8EP2_IN_ODD_Buffer;
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000050   0x6548             STR      R0,[R1, #+84]
    227          
    228              /* EndPoint 3 BDT Settings*/
    229              tBDTtable[bEP3OUT_ODD].Stat._byte = kSIE;
   \   00000052   0x2080             MOVS     R0,#+128
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000058   0xF881 0x0060      STRB     R0,[R1, #+96]
    230              tBDTtable[bEP3OUT_ODD].Cnt = 0xFF;
   \   0000005C   0x20FF             MOVS     R0,#+255
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000062   0xF8A1 0x0062      STRH     R0,[R1, #+98]
    231              tBDTtable[bEP3OUT_ODD].Addr = (uint32)gu8EP3_OUT_ODD_Buffer;
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000006E   0x6648             STR      R0,[R1, #+100]
    232          }
   \   00000070   0x4770             BX       LR               ;; return
    233          
    234          
    235          /*!
    236           *  @brief      标准请求中断服务函数（USB接收的Setup的请求）
    237           *  @since      v5.0
    238           */

   \                                 In section .text, align 2, keep-with-next
    239          void USB_StdReq_Handler(void)
    240          {
   \                     USB_StdReq_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    241          
    242              switch(Setup_Pkt->bRequest)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x7840             LDRB     R0,[R0, #+1]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD06D             BEQ.N    ??USB_StdReq_Handler_0
   \   0000000E   0x2805             CMP      R0,#+5
   \   00000010   0xD006             BEQ.N    ??USB_StdReq_Handler_1
   \   00000012   0x2806             CMP      R0,#+6
   \   00000014   0xD00E             BEQ.N    ??USB_StdReq_Handler_2
   \   00000016   0x2808             CMP      R0,#+8
   \   00000018   0xD060             BEQ.N    ??USB_StdReq_Handler_3
   \   0000001A   0x2809             CMP      R0,#+9
   \   0000001C   0xD03B             BEQ.N    ??USB_StdReq_Handler_4
   \   0000001E   0xE06F             B.N      ??USB_StdReq_Handler_5
    243              {
    244              case mSET_ADDRESS:
    245                  EP_IN_Transfer(EP0, 0, 0);
   \                     ??USB_StdReq_Handler_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       EP_IN_Transfer
    246                  gu8USB_State = uADDRESS;
   \   0000002A   0x2003             MOVS     R0,#+3
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   00000030   0x7008             STRB     R0,[R1, #+0]
    247                  break;
   \   00000032   0xE067             B.N      ??USB_StdReq_Handler_6
    248          
    249              case mGET_DESC:
    250                  switch(Setup_Pkt->wValue_h)
   \                     ??USB_StdReq_Handler_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD004             BEQ.N    ??USB_StdReq_Handler_7
   \   00000040   0xD326             BCC.N    ??USB_StdReq_Handler_8
   \   00000042   0x2803             CMP      R0,#+3
   \   00000044   0xD00F             BEQ.N    ??USB_StdReq_Handler_9
   \   00000046   0xD307             BCC.N    ??USB_StdReq_Handler_10
   \   00000048   0xE022             B.N      ??USB_StdReq_Handler_8
    251                  {
    252                  case mDEVICE:
    253                      EP_IN_Transfer(EP0, (uint8 *)&Device_Descriptor, sizeof(Device_Descriptor));
   \                     ??USB_StdReq_Handler_7: (+1)
   \   0000004A   0x2212             MOVS     R2,#+18
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       EP_IN_Transfer
    254                      break;
   \   00000056   0xE01D             B.N      ??USB_StdReq_Handler_11
    255          
    256                  case mCONFIGURATION:
    257                      EP_IN_Transfer(EP0, (uint8 *)Configuration_Descriptor, sizeof(Configuration_Descriptor));
   \                     ??USB_StdReq_Handler_10: (+1)
   \   00000058   0x2243             MOVS     R2,#+67
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       EP_IN_Transfer
    258                      break;
   \   00000064   0xE016             B.N      ??USB_StdReq_Handler_11
    259          
    260                  case mSTRING:
    261                      EP_IN_Transfer(EP0, (uint8 *)String_Table[Setup_Pkt->wValue_l], String_Table[Setup_Pkt->wValue_l][0]);
   \                     ??USB_StdReq_Handler_9: (+1)
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable13_17
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   0000006E   0x6809             LDR      R1,[R1, #+0]
   \   00000070   0x7889             LDRB     R1,[R1, #+2]
   \   00000072   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000076   0x7802             LDRB     R2,[R0, #+0]
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable13_17
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0x7889             LDRB     R1,[R1, #+2]
   \   00000084   0xF850 0x1021      LDR      R1,[R0, R1, LSL #+2]
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       EP_IN_Transfer
    262                      break;
   \   0000008E   0xE001             B.N      ??USB_StdReq_Handler_11
    263          
    264                  default:
    265                      USB_EP0_Stall();
   \                     ??USB_StdReq_Handler_8: (+1)
   \   00000090   0x.... 0x....      BL       USB_EP0_Stall
    266                      break;
    267                  }
    268                  break;
   \                     ??USB_StdReq_Handler_11: (+1)
   \   00000094   0xE036             B.N      ??USB_StdReq_Handler_6
    269          
    270              case mSET_CONFIG:
    271                  gu8Dummy = Setup_Pkt->wValue_h + Setup_Pkt->wValue_l;
   \                     ??USB_StdReq_Handler_4: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   000000A2   0x6809             LDR      R1,[R1, #+0]
   \   000000A4   0x7889             LDRB     R1,[R1, #+2]
   \   000000A6   0x1808             ADDS     R0,R1,R0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable13_18
   \   000000AC   0x7008             STRB     R0,[R1, #+0]
    272                  if(Setup_Pkt->wValue_h + Setup_Pkt->wValue_l)
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x78C0             LDRB     R0,[R0, #+3]
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   000000BA   0x6809             LDR      R1,[R1, #+0]
   \   000000BC   0x7889             LDRB     R1,[R1, #+2]
   \   000000BE   0x1808             ADDS     R0,R1,R0
   \   000000C0   0x2800             CMP      R0,#+0
   \   000000C2   0xD00A             BEQ.N    ??USB_StdReq_Handler_12
    273                  {
    274                      USB_Set_Interface();
   \   000000C4   0x.... 0x....      BL       USB_Set_Interface
    275                      EP_IN_Transfer(EP0, 0, 0);
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x.... 0x....      BL       EP_IN_Transfer
    276                      gu8USB_State = uENUMERATED;
   \   000000D2   0x2001             MOVS     R0,#+1
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   000000D8   0x7008             STRB     R0,[R1, #+0]
    277                  }
    278                  break;
   \                     ??USB_StdReq_Handler_12: (+1)
   \   000000DA   0xE013             B.N      ??USB_StdReq_Handler_6
    279          
    280              case mGET_CONFIG:
    281                  EP_IN_Transfer(EP0, (uint8 *)&gu8Dummy, 1);
   \                     ??USB_StdReq_Handler_3: (+1)
   \   000000DC   0x2201             MOVS     R2,#+1
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable13_18
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x.... 0x....      BL       EP_IN_Transfer
    282                  break;
   \   000000E8   0xE00C             B.N      ??USB_StdReq_Handler_6
    283          
    284              case mGET_STATUS:
    285                  gu8Status = 0;
   \                     ??USB_StdReq_Handler_0: (+1)
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable13_19
   \   000000F0   0x8008             STRH     R0,[R1, #+0]
    286                  EP_IN_Transfer(EP0, (uint8 *)&gu8Status, 2);
   \   000000F2   0x2202             MOVS     R2,#+2
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable13_19
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0x.... 0x....      BL       EP_IN_Transfer
    287                  break;
   \   000000FE   0xE001             B.N      ??USB_StdReq_Handler_6
    288          
    289          
    290              default:
    291                  USB_EP0_Stall();
   \                     ??USB_StdReq_Handler_5: (+1)
   \   00000100   0x.... 0x....      BL       USB_EP0_Stall
    292                  break;
    293              }
    294          }
   \                     ??USB_StdReq_Handler_6: (+1)
   \   00000104   0xBD01             POP      {R0,PC}          ;; return
    295          
    296          /*!
    297           *  @brief      USB SETUP中断 服务函数
    298           *  @since      v5.0
    299           */

   \                                 In section .text, align 2, keep-with-next
    300          void USB_Setup_Handler(void)
    301          {
   \                     USB_Setup_Handler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    302              uint8 u8State;
    303          
    304              FLAG_CLR(0, gu8USB_Toogle_flags);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    305              switch(Setup_Pkt->bmRequestType & 0x1F)
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0xF010 0x001F      ANDS     R0,R0,#0x1F
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD003             BEQ.N    ??USB_Setup_Handler_0
   \   00000024   0x2802             CMP      R0,#+2
   \   00000026   0xD01E             BEQ.N    ??USB_Setup_Handler_1
   \   00000028   0xD30E             BCC.N    ??USB_Setup_Handler_2
   \   0000002A   0xE022             B.N      ??USB_Setup_Handler_3
    306              {
    307              case DEVICE_REQ:
    308                  if((Setup_Pkt->bmRequestType & 0x1F) == STANDARD_REQ)
   \                     ??USB_Setup_Handler_0: (+1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x211F             MOVS     R1,#+31
   \   00000036   0x4208             TST      R0,R1
   \   00000038   0xD101             BNE.N    ??USB_Setup_Handler_4
    309                  {
    310                      //tBDTtable[bEP0IN_ODD].Stat._byte= kUDATA1;
    311          
    312                      USB_StdReq_Handler();
   \   0000003A   0x.... 0x....      BL       USB_StdReq_Handler
    313                  }
    314                  tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA0;
   \                     ??USB_Setup_Handler_4: (+1)
   \   0000003E   0x2088             MOVS     R0,#+136
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000044   0x7008             STRB     R0,[R1, #+0]
    315                  break;
   \   00000046   0xE016             B.N      ??USB_Setup_Handler_5
    316          
    317              case INTERFACE_REQ:
    318                  u8State = CDC_InterfaceReq_Handler();
   \                     ??USB_Setup_Handler_2: (+1)
   \   00000048   0x.... 0x....      BL       CDC_InterfaceReq_Handler
   \   0000004C   0x0004             MOVS     R4,R0
    319          
    320                  if(u8State == uSETUP)
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0x2C00             CMP      R4,#+0
   \   00000052   0xD104             BNE.N    ??USB_Setup_Handler_6
    321                      tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA0;
   \   00000054   0x2088             MOVS     R0,#+136
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
   \   0000005C   0xE002             B.N      ??USB_Setup_Handler_7
    322                  else
    323                      tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA1;
   \                     ??USB_Setup_Handler_6: (+1)
   \   0000005E   0x20C8             MOVS     R0,#+200
   \   00000060   0x....             LDR.N    R1,??DataTable13_6
   \   00000062   0x7008             STRB     R0,[R1, #+0]
    324                  break;
   \                     ??USB_Setup_Handler_7: (+1)
   \   00000064   0xE007             B.N      ??USB_Setup_Handler_5
    325          
    326              case ENDPOINT_REQ:
    327                  USB_Endpoint_Setup_Handler();
   \                     ??USB_Setup_Handler_1: (+1)
   \   00000066   0x.... 0x....      BL       USB_Endpoint_Setup_Handler
    328                  tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA0;
   \   0000006A   0x2088             MOVS     R0,#+136
   \   0000006C   0x....             LDR.N    R1,??DataTable13_6
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
    329                  break;
   \   00000070   0xE001             B.N      ??USB_Setup_Handler_5
    330          
    331              default:
    332                  USB_EP0_Stall();
   \                     ??USB_Setup_Handler_3: (+1)
   \   00000072   0x.... 0x....      BL       USB_EP0_Stall
    333                  break;
    334              }
    335              FLAG_CLR(USB_CTL_TXSUSPENDTOKENBUSY_SHIFT, USB0_CTL);
   \                     ??USB_Setup_Handler_5: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable13_20  ;; 0x40072094
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0xF010 0x00DF      ANDS     R0,R0,#0xDF
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable13_20  ;; 0x40072094
   \   00000084   0x7008             STRB     R0,[R1, #+0]
    336          }
   \   00000086   0xBD10             POP      {R4,PC}          ;; return
    337          
    338          /*!
    339           *  @brief      USB 端点 SETUP中断 服务函数
    340           *  @since      v5.0
    341           */

   \                                 In section .text, align 2, keep-with-next
    342          void USB_Endpoint_Setup_Handler(void)
    343          {
   \                     USB_Endpoint_Setup_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    344              uint16 u16Status;
    345          
    346              switch(Setup_Pkt->bRequest)
   \   00000002   0x....             LDR.N    R0,??DataTable13_4
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x7840             LDRB     R0,[R0, #+1]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD004             BEQ.N    ??USB_Endpoint_Setup_Handler_0
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD01A             BEQ.N    ??USB_Endpoint_Setup_Handler_1
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD029             BEQ.N    ??USB_Endpoint_Setup_Handler_2
   \   00000014   0xE039             B.N      ??USB_Endpoint_Setup_Handler_3
    347              {
    348              case GET_STATUS:
    349                  if(FLAG_CHK(Setup_Pkt->wIndex_h, gu8HALT_EP))
   \                     ??USB_Endpoint_Setup_Handler_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable13_21
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x....             LDR.N    R2,??DataTable13_4
   \   0000001E   0x6812             LDR      R2,[R2, #+0]
   \   00000020   0xF992 0x2005      LDRSB    R2,[R2, #+5]
   \   00000024   0x4091             LSLS     R1,R1,R2
   \   00000026   0x4208             TST      R0,R1
   \   00000028   0xD004             BEQ.N    ??USB_Endpoint_Setup_Handler_4
    350                      u16Status = 0x0100;
   \   0000002A   0xF44F 0x7080      MOV      R0,#+256
   \   0000002E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000032   0xE002             B.N      ??USB_Endpoint_Setup_Handler_5
    351                  else
    352                      u16Status = 0x0000;
   \                     ??USB_Endpoint_Setup_Handler_4: (+1)
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    353          
    354                  EP_IN_Transfer(EP0, (uint8 *)&u16Status, 2);
   \                     ??USB_Endpoint_Setup_Handler_5: (+1)
   \   0000003A   0x2202             MOVS     R2,#+2
   \   0000003C   0xA900             ADD      R1,SP,#+0
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x.... 0x....      BL       EP_IN_Transfer
    355                  break;
   \   00000044   0xE021             B.N      ??USB_Endpoint_Setup_Handler_6
    356          
    357              case CLEAR_FEATURE:
    358                  FLAG_CLR(Setup_Pkt->wIndex_h, gu8HALT_EP);
   \                     ??USB_Endpoint_Setup_Handler_1: (+1)
   \   00000046   0x....             LDR.N    R0,??DataTable13_21
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x....             LDR.N    R2,??DataTable13_4
   \   0000004E   0x6812             LDR      R2,[R2, #+0]
   \   00000050   0xF992 0x2005      LDRSB    R2,[R2, #+5]
   \   00000054   0x4091             LSLS     R1,R1,R2
   \   00000056   0x4388             BICS     R0,R0,R1
   \   00000058   0x....             LDR.N    R1,??DataTable13_21
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
    359                  EP_IN_Transfer(EP0, 0, 0);
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x.... 0x....      BL       EP_IN_Transfer
    360                  break;
   \   00000066   0xE010             B.N      ??USB_Endpoint_Setup_Handler_6
    361          
    362              case SET_FEATURE:
    363                  FLAG_SET(Setup_Pkt->wIndex_h, gu8HALT_EP);
   \                     ??USB_Endpoint_Setup_Handler_2: (+1)
   \   00000068   0x....             LDR.N    R0,??DataTable13_21
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x....             LDR.N    R2,??DataTable13_4
   \   00000070   0x6812             LDR      R2,[R2, #+0]
   \   00000072   0xF992 0x2005      LDRSB    R2,[R2, #+5]
   \   00000076   0x4091             LSLS     R1,R1,R2
   \   00000078   0x4308             ORRS     R0,R1,R0
   \   0000007A   0x....             LDR.N    R1,??DataTable13_21
   \   0000007C   0x7008             STRB     R0,[R1, #+0]
    364                  EP_IN_Transfer(EP0, 0, 0);
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x.... 0x....      BL       EP_IN_Transfer
    365                  break;
   \   00000088   0xE7FF             B.N      ??USB_Endpoint_Setup_Handler_6
    366          
    367              default:
    368                  break;
    369              }
    370          }
   \                     ??USB_Endpoint_Setup_Handler_3: (+1)
   \                     ??USB_Endpoint_Setup_Handler_6: (+1)
   \   0000008A   0xBD01             POP      {R0,PC}          ;; return
    371          
    372          /*!
    373           *  @brief      USB 令牌中断 服务函数
    374           *  @since      v5.0
    375           */

   \                                 In section .text, align 2, keep-with-next
    376          void USB_Handler(void)
    377          {
   \                     USB_Handler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    378              uint8 u8EndPoint;
    379              uint8 u8IN;
    380          
    381              u8IN = USB0_STAT & 0x08;
   \   00000002   0x....             LDR.N    R0,??DataTable13_22  ;; 0x40072090
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF010 0x0008      ANDS     R0,R0,#0x8
   \   0000000A   0x0005             MOVS     R5,R0
    382              u8EndPoint = USB0_STAT >> 4;
   \   0000000C   0x....             LDR.N    R0,??DataTable13_22  ;; 0x40072090
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x0900             LSRS     R0,R0,#+4
   \   00000014   0x0004             MOVS     R4,R0
    383          
    384          
    385              /* Data EndPoints */
    386              if(u8EndPoint)
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C00             CMP      R4,#+0
   \   0000001A   0xD010             BEQ.N    ??USB_Handler_0
    387              {
    388                  if(!u8IN)
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D00             CMP      R5,#+0
   \   00000020   0xD11F             BNE.N    ??USB_Handler_1
    389                  {
    390                      usbMCU_CONTROL(u8EndPoint);
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR.N    R1,??DataTable13_6
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x00A2             LSLS     R2,R4,#+2
   \   0000002A   0xF801 0x0032      STRB     R0,[R1, R2, LSL #+3]
    391                      FLAG_SET(u8EndPoint, gu8USB_Flags);
   \   0000002E   0x....             LDR.N    R0,??DataTable13_23
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x40A1             LSLS     R1,R1,R4
   \   00000036   0x4308             ORRS     R0,R1,R0
   \   00000038   0x....             LDR.N    R1,??DataTable13_23
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
   \   0000003C   0xE011             B.N      ??USB_Handler_1
    392                  }
    393              }
    394          
    395              /* Control EndPoint */
    396              else
    397              {
    398                  if(u8IN)
   \                     ??USB_Handler_0: (+1)
   \   0000003E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000040   0x2D00             CMP      R5,#+0
   \   00000042   0xD002             BEQ.N    ??USB_Handler_2
    399                      USB_EP0_IN_Handler();
   \   00000044   0x.... 0x....      BL       USB_EP0_IN_Handler
   \   00000048   0xE00B             B.N      ??USB_Handler_1
    400                  else
    401                  {
    402                      if(tBDTtable[bEP0OUT_ODD].Stat.RecPid.PID == mSETUP_TOKEN)
   \                     ??USB_Handler_2: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable13_6
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0xF3C0 0x0083      UBFX     R0,R0,#+2,#+4
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x280D             CMP      R0,#+13
   \   00000056   0xD102             BNE.N    ??USB_Handler_3
    403                          USB_Setup_Handler();
   \   00000058   0x.... 0x....      BL       USB_Setup_Handler
   \   0000005C   0xE001             B.N      ??USB_Handler_1
    404                      else
    405                          USB_EP0_OUT_Handler();
   \                     ??USB_Handler_3: (+1)
   \   0000005E   0x.... 0x....      BL       USB_EP0_OUT_Handler
    406                  }
    407          
    408              }
    409          }
   \                     ??USB_Handler_1: (+1)
   \   00000062   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    410          
    411          /*!
    412           *  @brief      USB 端点 0 IN 服务函数(IN是相对主机而言)
    413           *  @since      v5.0
    414           */

   \                                 In section .text, align 2, keep-with-next
    415          void USB_EP0_IN_Handler(void)
    416          {
   \                     USB_EP0_IN_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    417              if(gu8USB_State == uADDRESS)
   \   00000002   0x....             LDR.N    R0,??DataTable13_14
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2803             CMP      R0,#+3
   \   00000008   0xD10D             BNE.N    ??USB_EP0_IN_Handler_0
    418              {
    419                  USB0_ADDR = Setup_Pkt->wValue_l;
   \   0000000A   0x....             LDR.N    R0,??DataTable13_4
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x7880             LDRB     R0,[R0, #+2]
   \   00000010   0x....             LDR.N    R1,??DataTable13_24  ;; 0x40072098
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    420                  gu8USB_State = uREADY;
   \   00000014   0x2004             MOVS     R0,#+4
   \   00000016   0x....             LDR.N    R1,??DataTable13_14
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    421                  FLAG_SET(fIN, gu8USBClearFlags);
   \   0000001A   0x....             LDR.N    R0,??DataTable13_1
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000022   0x....             LDR.N    R1,??DataTable13_1
   \   00000024   0x7008             STRB     R0,[R1, #+0]
    422              }
    423              EP_IN_Transfer(EP0, 0, 0);
   \                     ??USB_EP0_IN_Handler_0: (+1)
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       EP_IN_Transfer
    424          }
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
    425          
    426          /*!
    427           *  @brief      USB 端点 0 stall(传输失败)
    428           *  @since      v5.0
    429           */

   \                                 In section .text, align 2, keep-with-next
    430          void USB_EP0_Stall(void)
    431          {
    432          
    433              FLAG_SET(USB_ENDPT_EPSTALL_SHIFT, USB0_ENDPT0);
   \                     USB_EP0_Stall: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_25  ;; 0x400720c0
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000008   0x....             LDR.N    R1,??DataTable13_25  ;; 0x400720c0
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    434              //ENDPT0_EP_STALL = 1;
    435              tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA0;
   \   0000000C   0x2088             MOVS     R0,#+136
   \   0000000E   0x....             LDR.N    R1,??DataTable13_6
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    436              tBDTtable[bEP0OUT_ODD].Cnt = EP0_SIZE;
   \   00000012   0x2040             MOVS     R0,#+64
   \   00000014   0x....             LDR.N    R1,??DataTable13_6
   \   00000016   0x8048             STRH     R0,[R1, #+2]
    437          }
   \   00000018   0x4770             BX       LR               ;; return
    438          
    439          /*!
    440           *  @brief      USB 端点 0 OUT 服务函数(OUT 是相对主机而言)
    441           *  @since      v5.0
    442           */

   \                                 In section .text, align 2, keep-with-next
    443          void USB_EP0_OUT_Handler(void)
    444          {
    445              FLAG_SET(0, gu8USB_Flags);
   \                     USB_EP0_OUT_Handler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_23
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000008   0x....             LDR.N    R1,??DataTable13_23
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    446              //tBDTtable[bEP0OUT_ODD].Cnt = EP0_SIZE;
    447              tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA0;
   \   0000000C   0x2088             MOVS     R0,#+136
   \   0000000E   0x....             LDR.N    R1,??DataTable13_6
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    448              //tBDTtable[bEP0IN].Stat._byte = kUDATA1;
    449          
    450          }
   \   00000012   0x4770             BX       LR               ;; return
    451          
    452          /*!
    453           *  @brief      USB stall 中断（传输失败）
    454           *  @since      v5.0
    455           */

   \                                 In section .text, align 2, keep-with-next
    456          void USB_Stall_Handler(void)
    457          {
    458              if(FLAG_CHK(USB_ENDPT_EPSTALL_SHIFT, USB0_ENDPT0))
   \                     USB_Stall_Handler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_25  ;; 0x400720c0
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x0780             LSLS     R0,R0,#+30
   \   00000006   0xD505             BPL.N    ??USB_Stall_Handler_0
    459                  FLAG_CLR(USB_ENDPT_EPSTALL_SHIFT, USB0_ENDPT0);
   \   00000008   0x....             LDR.N    R0,??DataTable13_25  ;; 0x400720c0
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   00000010   0x....             LDR.N    R1,??DataTable13_25  ;; 0x400720c0
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    460              FLAG_SET(USB_ISTAT_STALL_SHIFT, USB0_ISTAT);
   \                     ??USB_Stall_Handler_0: (+1)
   \   00000014   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000001C   0x....             LDR.N    R1,??DataTable13_26  ;; 0x40072080
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
    461          }
   \   00000020   0x4770             BX       LR               ;; return
    462          
    463          /*!
    464           *  @brief      USB 复位 中断服务函数
    465           *  @since      v5.0
    466           */

   \                                 In section .text, align 2, keep-with-next
    467          void USB_Reset_Handler(void)
    468          {
    469              /* Software Flags */
    470              gu8USBClearFlags = 0xFF;
   \                     USB_Reset_Handler: (+1)
   \   00000000   0x20FF             MOVS     R0,#+255
   \   00000002   0x....             LDR.N    R1,??DataTable13_1
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    471              gu8USB_Toogle_flags = 0xFE;
   \   00000006   0x20FE             MOVS     R0,#+254
   \   00000008   0x....             LDR.N    R1,??DataTable13_7
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    472          
    473              /* Disable all data EP registers */
    474              USB0_ENDPT1 = 0x00;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable13_8  ;; 0x400720c4
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    475              USB0_ENDPT2 = 0x00;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable13_9  ;; 0x400720c8
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    476              USB0_ENDPT3 = 0x00;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR.N    R1,??DataTable13_10  ;; 0x400720cc
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
    477              USB0_ENDPT4 = 0x00;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR.N    R1,??DataTable13_27  ;; 0x400720d0
   \   00000022   0x7008             STRB     R0,[R1, #+0]
    478              USB0_ENDPT5 = 0x00;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable13_28  ;; 0x400720d4
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    479              USB0_ENDPT6 = 0x00;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable13_29  ;; 0x400720d8
   \   0000002E   0x7008             STRB     R0,[R1, #+0]
    480          
    481              /* EP0 BDT Setup */
    482              // EP0 OUT BDT Settings
    483              tBDTtable[bEP0OUT_ODD].Cnt = EP0_SIZE;
   \   00000030   0x2040             MOVS     R0,#+64
   \   00000032   0x....             LDR.N    R1,??DataTable13_6
   \   00000034   0x8048             STRH     R0,[R1, #+2]
    484              tBDTtable[bEP0OUT_ODD].Addr = (uint32)gu8EP0_OUT_ODD_Buffer;
   \   00000036   0x....             LDR.N    R0,??DataTable13_30
   \   00000038   0x....             LDR.N    R1,??DataTable13_6
   \   0000003A   0x6048             STR      R0,[R1, #+4]
    485              tBDTtable[bEP0OUT_ODD].Stat._byte = kUDATA1;
   \   0000003C   0x20C8             MOVS     R0,#+200
   \   0000003E   0x....             LDR.N    R1,??DataTable13_6
   \   00000040   0x7008             STRB     R0,[R1, #+0]
    486          
    487              // EP0 OUT BDT Settings
    488              tBDTtable[bEP0OUT_EVEN].Cnt = EP0_SIZE;
   \   00000042   0x2040             MOVS     R0,#+64
   \   00000044   0x....             LDR.N    R1,??DataTable13_6
   \   00000046   0x8148             STRH     R0,[R1, #+10]
    489              tBDTtable[bEP0OUT_EVEN].Addr = (uint32)gu8EP0_OUT_EVEN_Buffer;
   \   00000048   0x....             LDR.N    R0,??DataTable13_31
   \   0000004A   0x....             LDR.N    R1,??DataTable13_6
   \   0000004C   0x60C8             STR      R0,[R1, #+12]
    490              tBDTtable[bEP0OUT_EVEN].Stat._byte = kUDATA1;
   \   0000004E   0x20C8             MOVS     R0,#+200
   \   00000050   0x....             LDR.N    R1,??DataTable13_6
   \   00000052   0x7208             STRB     R0,[R1, #+8]
    491          
    492              // EP0 IN BDT Settings
    493              tBDTtable[bEP0IN_ODD].Cnt = EP0_SIZE;
   \   00000054   0x2040             MOVS     R0,#+64
   \   00000056   0x....             LDR.N    R1,??DataTable13_6
   \   00000058   0x8248             STRH     R0,[R1, #+18]
    494              tBDTtable[bEP0IN_ODD].Addr = (uint32)gu8EP0_IN_ODD_Buffer;
   \   0000005A   0x....             LDR.N    R0,??DataTable13_32
   \   0000005C   0x....             LDR.N    R1,??DataTable13_6
   \   0000005E   0x6148             STR      R0,[R1, #+20]
    495              tBDTtable[bEP0IN_ODD].Stat._byte = kUDATA0;
   \   00000060   0x2088             MOVS     R0,#+136
   \   00000062   0x....             LDR.N    R1,??DataTable13_6
   \   00000064   0x7408             STRB     R0,[R1, #+16]
    496          
    497              // EP0 IN BDT Settings
    498              tBDTtable[bEP0IN_EVEN].Cnt = (EP0_SIZE);
   \   00000066   0x2040             MOVS     R0,#+64
   \   00000068   0x....             LDR.N    R1,??DataTable13_6
   \   0000006A   0x8348             STRH     R0,[R1, #+26]
    499              tBDTtable[bEP0IN_EVEN].Addr = (uint32)gu8EP0_IN_EVEN_Buffer;
   \   0000006C   0x....             LDR.N    R0,??DataTable13_33
   \   0000006E   0x....             LDR.N    R1,??DataTable13_6
   \   00000070   0x61C8             STR      R0,[R1, #+28]
    500              tBDTtable[bEP0IN_EVEN].Stat._byte = kUDATA0;
   \   00000072   0x2088             MOVS     R0,#+136
   \   00000074   0x....             LDR.N    R1,??DataTable13_6
   \   00000076   0x7608             STRB     R0,[R1, #+24]
    501          
    502              // Enable EP0
    503              USB0_ENDPT0 = 0x0D;
   \   00000078   0x200D             MOVS     R0,#+13
   \   0000007A   0x....             LDR.N    R1,??DataTable13_25  ;; 0x400720c0
   \   0000007C   0x7008             STRB     R0,[R1, #+0]
    504          
    505              // Clear all Error flags
    506              USB0_ERRSTAT = 0xFF;
   \   0000007E   0x20FF             MOVS     R0,#+255
   \   00000080   0x....             LDR.N    R1,??DataTable13_34  ;; 0x40072088
   \   00000082   0x7008             STRB     R0,[R1, #+0]
    507          
    508              // CLear all USB ISR flags
    509              USB0_ISTAT = 0xFF;
   \   00000084   0x20FF             MOVS     R0,#+255
   \   00000086   0x....             LDR.N    R1,??DataTable13_26  ;; 0x40072080
   \   00000088   0x7008             STRB     R0,[R1, #+0]
    510          
    511              // Set default Address
    512              USB0_ADDR = 0x00;
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x....             LDR.N    R1,??DataTable13_24  ;; 0x40072098
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    513          
    514              // Enable all error sources
    515              USB0_ERREN = 0xFF;
   \   00000090   0x20FF             MOVS     R0,#+255
   \   00000092   0x....             LDR.N    R1,??DataTable13_35  ;; 0x4007208c
   \   00000094   0x7008             STRB     R0,[R1, #+0]
    516          
    517              // USB Interrupt Enablers
    518              FLAG_SET(USB_INTEN_TOKDNEEN_SHIFT, USB0_INTEN);
   \   00000096   0x....             LDR.N    R0,??DataTable13_36  ;; 0x40072084
   \   00000098   0x7800             LDRB     R0,[R0, #+0]
   \   0000009A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000009E   0x....             LDR.N    R1,??DataTable13_36  ;; 0x40072084
   \   000000A0   0x7008             STRB     R0,[R1, #+0]
    519              FLAG_SET(USB_INTEN_SOFTOKEN_SHIFT, USB0_INTEN);
   \   000000A2   0x....             LDR.N    R0,??DataTable13_36  ;; 0x40072084
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000AA   0x....             LDR.N    R1,??DataTable13_36  ;; 0x40072084
   \   000000AC   0x7008             STRB     R0,[R1, #+0]
    520              FLAG_SET(USB_INTEN_ERROREN_SHIFT, USB0_INTEN);
   \   000000AE   0x....             LDR.N    R0,??DataTable13_36  ;; 0x40072084
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000B6   0x....             LDR.N    R1,??DataTable13_36  ;; 0x40072084
   \   000000B8   0x7008             STRB     R0,[R1, #+0]
    521              FLAG_SET(USB_INTEN_USBRSTEN_SHIFT, USB0_INTEN);
   \   000000BA   0x....             LDR.N    R0,??DataTable13_36  ;; 0x40072084
   \   000000BC   0x7800             LDRB     R0,[R0, #+0]
   \   000000BE   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000C2   0x....             LDR.N    R1,??DataTable13_36  ;; 0x40072084
   \   000000C4   0x7008             STRB     R0,[R1, #+0]
    522          }
   \   000000C6   0x4770             BX       LR               ;; return
    523          
    524          
    525          /*!
    526           *  @brief      USB 总的 中断服务函数
    527           *  @since      v5.0
    528           */

   \                                 In section .text, align 2, keep-with-next
    529          void USB_ISR(void)
    530          {
   \                     USB_ISR: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    531          
    532              if(FLAG_CHK(USB_ISTAT_USBRST_SHIFT, USB0_ISTAT))
   \   00000002   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x07C0             LSLS     R0,R0,#+31
   \   00000008   0xD502             BPL.N    ??USB_ISR_0
    533              {
    534          
    535                  USB_Reset_Handler();
   \   0000000A   0x.... 0x....      BL       USB_Reset_Handler
    536          
    537                  return;
   \   0000000E   0xE034             B.N      ??USB_ISR_1
    538              }
    539          
    540          
    541              if(FLAG_CHK(USB_ISTAT_SOFTOK_SHIFT, USB0_ISTAT))
   \                     ??USB_ISR_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x0740             LSLS     R0,R0,#+29
   \   00000016   0xD502             BPL.N    ??USB_ISR_2
    542              {
    543                  USB0_ISTAT = USB_ISTAT_SOFTOK_MASK;
   \   00000018   0x2004             MOVS     R0,#+4
   \   0000001A   0x....             LDR.N    R1,??DataTable13_26  ;; 0x40072080
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
    544              }
    545          
    546          
    547          
    548              if(FLAG_CHK(USB_ISTAT_STALL_SHIFT, USB0_ISTAT))
   \                     ??USB_ISR_2: (+1)
   \   0000001E   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x0600             LSLS     R0,R0,#+24
   \   00000024   0xD501             BPL.N    ??USB_ISR_3
    549              {
    550                  USB_Stall_Handler();
   \   00000026   0x.... 0x....      BL       USB_Stall_Handler
    551              }
    552          
    553          
    554              if(FLAG_CHK(USB_ISTAT_TOKDNE_SHIFT, USB0_ISTAT))
   \                     ??USB_ISR_3: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x0700             LSLS     R0,R0,#+28
   \   00000030   0xD50D             BPL.N    ??USB_ISR_4
    555              {
    556          
    557                  FLAG_SET(USB_CTL_ODDRST_SHIFT, USB0_CTL);
   \   00000032   0x....             LDR.N    R0,??DataTable13_20  ;; 0x40072094
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000003A   0x....             LDR.N    R1,??DataTable13_20  ;; 0x40072094
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
    558                  USB_Handler();
   \   0000003E   0x.... 0x....      BL       USB_Handler
    559                  FLAG_SET(USB_ISTAT_TOKDNE_SHIFT, USB0_ISTAT);
   \   00000042   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000004A   0x....             LDR.N    R1,??DataTable13_26  ;; 0x40072080
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
    560              }
    561          
    562          
    563              if(FLAG_CHK(USB_ISTAT_SLEEP_SHIFT, USB0_ISTAT))
   \                     ??USB_ISR_4: (+1)
   \   0000004E   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x06C0             LSLS     R0,R0,#+27
   \   00000054   0xD505             BPL.N    ??USB_ISR_5
    564              {
    565                  FLAG_SET(USB_ISTAT_SLEEP_SHIFT, USB0_ISTAT);
   \   00000056   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000005E   0x....             LDR.N    R1,??DataTable13_26  ;; 0x40072080
   \   00000060   0x7008             STRB     R0,[R1, #+0]
    566          
    567              }
    568          
    569              if(FLAG_CHK(USB_ISTAT_ERROR_SHIFT, USB0_ISTAT))
   \                     ??USB_ISR_5: (+1)
   \   00000062   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x0780             LSLS     R0,R0,#+30
   \   00000068   0xD507             BPL.N    ??USB_ISR_6
    570              {
    571                  FLAG_CHK(USB_ISTAT_ERROR_SHIFT, USB0_ISTAT);
   \   0000006A   0x....             LDR.N    R0,??DataTable13_26  ;; 0x40072080
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0xF010 0x0002      ANDS     R0,R0,#0x2
    572                  DEBUG_PRINTF("\nUSB Error\n");
   \   00000074   0x....             LDR.N    R0,??DataTable13_37
   \   00000076   0x.... 0x....      BL       printf
    573              }
    574          }
   \                     ??USB_ISR_6: (+1)
   \                     ??USB_ISR_1: (+1)
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     BufferPointer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     gu8USBClearFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     pu8IN_DataPointer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     gu8IN_Counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     Setup_Pkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     cEP_Size

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     tBDTtable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     gu8USB_Toogle_flags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x400720C4         DC32     0x400720c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x400720C8         DC32     0x400720c8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x400720CC         DC32     0x400720cc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     gu8EP1_IN_ODD_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     gu8EP2_IN_ODD_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     gu8EP3_OUT_ODD_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     gu8USB_State

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     Device_Descriptor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     Configuration_Descriptor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x........         DC32     String_Table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     gu8Dummy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     gu8Status

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x40072094         DC32     0x40072094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x........         DC32     gu8HALT_EP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x40072090         DC32     0x40072090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     gu8USB_Flags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x40072098         DC32     0x40072098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x400720C0         DC32     0x400720c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x40072080         DC32     0x40072080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x400720D0         DC32     0x400720d0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x400720D4         DC32     0x400720d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x400720D8         DC32     0x400720d8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x........         DC32     gu8EP0_OUT_ODD_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x........         DC32     gu8EP0_OUT_EVEN_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x........         DC32     gu8EP0_IN_ODD_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x........         DC32     gu8EP0_IN_EVEN_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x40072088         DC32     0x40072088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_35:
   \   00000000   0x4007208C         DC32     0x4007208c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_36:
   \   00000000   0x40072084         DC32     0x40072084

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_37:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0A 0x55          DC8 "\012USB Error\012"
   \              0x53 0x42    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x0A 0x00    
    575          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   EP_IN_Transfer
       4   EP_OUT_Transfer
       8   USB_EP0_IN_Handler
         8   -> EP_IN_Transfer
       0   USB_EP0_OUT_Handler
       0   USB_EP0_Stall
       0   USB_EP_OUT_SizeCheck
       8   USB_Endpoint_Setup_Handler
         8   -> EP_IN_Transfer
      16   USB_Handler
        16   -> USB_EP0_IN_Handler
        16   -> USB_EP0_OUT_Handler
        16   -> USB_Setup_Handler
       8   USB_ISR
         8   -> USB_Handler
         8   -> USB_Reset_Handler
         8   -> USB_Stall_Handler
         8   -> printf
       0   USB_Reset_Handler
       0   USB_Set_Interface
       8   USB_Setup_Handler
         8   -> CDC_InterfaceReq_Handler
         8   -> USB_EP0_Stall
         8   -> USB_Endpoint_Setup_Handler
         8   -> USB_StdReq_Handler
       0   USB_Stall_Handler
       8   USB_StdReq_Handler
         8   -> EP_IN_Transfer
         8   -> USB_EP0_Stall
         8   -> USB_Set_Interface


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_35
       4  ??DataTable13_36
       4  ??DataTable13_37
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
      12  ?_0
      64  BufferPointer
      68  Configuration_Descriptor
      20  Device_Descriptor
     382  EP_IN_Transfer
      56  EP_OUT_Transfer
       4  Setup_Pkt
       4  String_Descriptor0
      20  String_Descriptor1
      20  String_Descriptor2
      20  String_Descriptor3
      16  String_Table
      50  USB_EP0_IN_Handler
      20  USB_EP0_OUT_Handler
      26  USB_EP0_Stall
      24  USB_EP_OUT_SizeCheck
     140  USB_Endpoint_Setup_Handler
     100  USB_Handler
     124  USB_ISR
     200  USB_Reset_Handler
     114  USB_Set_Interface
     136  USB_Setup_Handler
      34  USB_Stall_Handler
     262  USB_StdReq_Handler
      16  cEP_Size
       1  gu8Dummy
      64  gu8EP0_IN_EVEN_Buffer
      64  gu8EP0_IN_ODD_Buffer
      64  gu8EP0_OUT_EVEN_Buffer
      64  gu8EP0_OUT_ODD_Buffer
      64  gu8EP1_IN_EVEN_Buffer
      64  gu8EP1_IN_ODD_Buffer
      64  gu8EP1_OUT_EVEN_Buffer
      64  gu8EP1_OUT_ODD_Buffer
      64  gu8EP2_IN_EVEN_Buffer
      64  gu8EP2_IN_ODD_Buffer
      64  gu8EP2_OUT_EVEN_Buffer
      64  gu8EP2_OUT_ODD_Buffer
      64  gu8EP3_IN_EVEN_Buffer
      64  gu8EP3_IN_ODD_Buffer
      64  gu8EP3_OUT_EVEN_Buffer
      64  gu8EP3_OUT_ODD_Buffer
       1  gu8HALT_EP
       1  gu8IN_Counter
       1  gu8Interface
       2  gu8Status
       1  gu8USBClearFlags
       1  gu8USB_Flags
       1  gu8USB_State
       1  gu8USB_Toogle_flags
       4  pu8IN_DataPointer
     128  tBDTtable

 
 1 170 bytes in section .bss
    80 bytes in section .data
   180 bytes in section .rodata
 1 820 bytes in section .text
 
 1 820 bytes of CODE  memory
   180 bytes of CONST memory
 1 250 bytes of DATA  memory

Errors: none
Warnings: 1
